
ID: 4263861
Created: 2:14pm, 16 Jan 2020
The runtime for the following code fragment is ?(f(n)). What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
a) nlogn
b) n^2
*c) n^2(logn)
d) n^3
e) None of the above
Author: wd371 (wd371)
Avg Rating: 3.7000
Avg Difficulty: 0.5652
Total ratings: 23



ID: 4263858
Created: 2:13pm, 16 Jan 2020
Given the binary search algorithm, as taught in the lecture, and an array with the followingnumbers (from first to last index):5, 9, 11, 99, 110, 111, 200, 300, 500, 1000, 1001.How many iterations does the algorithm need to find the element 5?
a) 1 iteration
b) 2 iterations
*c) 3 iterations
d) 4 iterations
Author: wd371 (wd371)
Avg Rating: 3.4100
Avg Difficulty: 0.6471
Total ratings: 17



ID: 4257494
Created: 7:03pm, 07 Jan 2020
An algorithm has time complexity . Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 4.Assuming, what is the lowest possible value of b for which the definition holds?
a) b = 12
b) b = -4
c) b = 6
*d) b = 9
e) b = 0
Explanation: Solve for the roots of |T(N)|=4N^2. The roots are, N=6, N=9 for the equation T(N)=4N^2. Roots to -T(N)=4N^2 can be safely ignored.So the choice is b=9. You can quickly verify by substituting N=8 that b=6 does not satisfy the definition. b=12 satisfies the definition but is not the lowest possible value of b satisfying the definitionThe slightly harder version of this question can be found here:https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4248139
Tags: Complexity
Author: mo383 (mo383)
Avg Rating: 3.1500
Avg Difficulty: 1.3846
Total ratings: 13



ID: 4256943
Created: 7:54pm, 06 Jan 2020
Which one of the following sorting algorithms is the quickest for an almost sorted array?
a) Selection sort
*b) Insertion sort
c) Bubble sort
d) Merge sort
e) Quick
Author: aa2955 (aa2955)
Avg Rating: 3.5900
Avg Difficulty: 0.4706
Total ratings: 17



ID: 4256939
Created: 7:48pm, 06 Jan 2020
What is the Big oh complexity of heap sort?
a) O(log n)
*b) O(n log n)
c) O(n)
d) O(n^2)
Tags: Sorting
Author: aa2955 (aa2955)
Avg Rating: 3.5600
Avg Difficulty: 0.3750
Total ratings: 16



ID: 4256936
Created: 7:46pm, 06 Jan 2020
Given the tree: a / \ b c / \ / \ e f g hWhat is the in order traversal?
*a) ebfagch
b) abefcgh
c) efbghca
d) abcefgh
Explanation: For the in order traversal we start from the root node then go from top -> bottom and left -> right and see if we can reach the bottom part of the current node.
Tags: Trees
Author: aa2955 (aa2955)
Avg Rating: 3.8600
Avg Difficulty: 0.3571
Total ratings: 14



ID: 4256723
Created: 12:57pm, 06 Jan 2020
Consider we have created an Adjacency Matrix M for some directed graph.a) What would we be able to determine from the matrix created by multiplying M by itself?b) What would we be able to determine if we did this again?
a) a) The resulting matrix would show all vertices that are either 1 or 2 edges apartb) The resulting matrix would show all vertices that are either 1,2 or 3 edges apart
*b) a) The resulting matrix would show all vertices that are 2 edges apartb) The resulting matrix would show all vertices that are 3 edges apart
c) a) The resulting matrix would show all vertices that are either 1 or 2 edges apartb) The resulting matrix would show all vertices that are either 1,2 or 4 edges apart
d) a) The resulting matrix would show all vertices that are 2 edges apartb) The resulting matrix would show all vertices that are 4 edges apart
Explanation: See slide 11 of lecture 17 - graphs 1
Tags: Graphs
Author: tp665 (tp665)
Avg Rating: 3.7600
Avg Difficulty: 0.1765
Total ratings: 17
==> Comment 1: wording of b is confusing, if you multiply M by itself you get M2, then if I do this again am I multiplying M2 by itself, or am I multiplying by M again? (by: epo24 [epo24])



ID: 4256717
Created: 12:49pm, 06 Jan 2020
What is the primary idea behind Amortised Algorithm Analysis?
a) That executing the same operation many times in different contexts always causes the operation to become more efficient over time.
*b) Looking at the worst-case run time per operation is very pessimistic. Instead consider both the expensive and less expensive operations together over the whole algorithm.
Tags: Complexity
Author: tp665 (tp665)
Avg Rating: 2.9000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 4256701
Created: 12:30pm, 06 Jan 2020
What is the time complexity of Dijkstra's Algorithm without a min-priority queue?
*a) O(V2)
b) O(log V)
c) O(V log V)
d) O(E + V log V)
e) O(V + E log V)
Explanation: shortest_path -> slide 21
Tags: Complexity
Author: tp665 (tp665)
Avg Rating: 3.5000
Avg Difficulty: 0.4000
Total ratings: 10



ID: 4256627
Created: 11:01am, 06 Jan 2020
In a linked list what is the time complexity to insert(x) and remove(y) if you were given the reference to the previous element:
a) insert(x):remove(y):
*b) insert(x): remove(y):
c) insert(x): remove(y):
d) insert(x): remove(y):
Explanation: 2019 Week3b slide 10
Tags: Complexity
Author: tareq (mtz24)
Avg Rating: 4.0000
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4256624
Created: 10:59am, 06 Jan 2020
What is the worst-case time complexity of Quicksort?
*a) O(n2)
b) O(n3)
c) O(n)
d) O(log n)
e) O(2n)
Tags: Sorting, Complexity
Author: is507 (is507)
Avg Rating: 3.8000
Avg Difficulty: 0.0667
Total ratings: 15



ID: 4256628
Created: 10:59am, 06 Jan 2020
Santa has had one too many beers while flying the sleigh back to the North Pole when the police pull him over. The police ask for hisEASA Part-FCL commercial pilot license (CPL) and he realises that he left it in one of 60 remaining gift boxes. The gift box he needs to find is labelled "Santa Claus" with "North Pole" on. Each location "e.g Africa" is put into its own pile, there are 12 remaining piles in total. Each pile is ordered by name "e.g Mrs Claus", there are 5 gift boxes in each pile. Using a binary search, what is the worst-case complexity?
a) 6*(5/2)
b) 12*5
c) log2(12) * log2(5)
*d) log2(12) + log2(5)
e) log2(12) - log2(5)
Explanation: Binary search is log2(n) complexity, log(12) + log(5) for final.
Tags: Search, Complexity
Author: mma82 (mma82)
Avg Rating: 4.4100
Avg Difficulty: 1.0000
Total ratings: 17



ID: 4256620
Created: 10:59am, 06 Jan 2020
Is the below tree AVL? 5 3 7 2 6 81 9
a) Yes
*b) No
Explanation: Because the left side of the tree has a height difference of 2. Week8b
Tags: Trees
Author: mdsb20 (mdsb20)
Avg Rating: 3.7100
Avg Difficulty: 0.2143
Total ratings: 14



ID: 4256618
Created: 10:58am, 06 Jan 2020
What is the time complexity for completing 'n' searches in a balanced binary search tree?
*a) nlogn
b) n^2
c) logn
d) n
Explanation: the time complexity for a single search in a balanced binary search tree is logn thus completing n searches results in a complexity of nlogn
Author: aar73 (aar73)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256610
Created: 10:55am, 06 Jan 2020
What is the worst case time complexity of the merge sort
a) ?(n)
*b) ?(nlogn)
c) ?(logn)
Explanation: see slide 5 of Week 7(a)
Tags: Sorting
Author: mdsb20 (mdsb20)
Avg Rating: 3.6300
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4256609
Created: 10:54am, 06 Jan 2020
Which is the correct post-order traversal of the tree? a / \ b c / \ \ d e f
a) a b d e c f
*b) d e b f c a
c) a b c d e f
d) d e b a c f
Explanation: See Week 7b - Trees1
Tags: Trees
Author: mc2332 (mc2332)
Avg Rating: 4.5000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 4256608
Created: 10:54am, 06 Jan 2020
Which data structure is described by:the value at each node is = the values at its two children.
a) Max heap
b) AVL Tree
*c) Min heap
d) Binary tree
e) Skip List
Explanation: Definition given in Week 5b Slide 4.
Tags: ADTs, Sorting
Author: is507 (is507)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 9



ID: 4256603
Created: 10:50am, 06 Jan 2020
What's average time complexity of performing a search in a hash table?
a)
b)
*c)
d)
Explanation: Searching in a hash table is on average O(1), as we only have to compute the hash for the value we are searching for & look at the corresponding value in the hash table.
Tags: Hashtables
Author: mc2332 (mc2332)
Avg Rating: 3.6000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256601
Created: 10:49am, 06 Jan 2020
The asymptotic memory usage of dense and sparse graphs where v is the number of vertices and e is the number of edges is:
a) Dense: Sparse:
b) Dense: Sparse:
c) Dense:Sparse:
*d) Dense : Sparse:
Explanation: 2019 Week9b slide 17
Tags: Graphs
Author: tareq (mtz24)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256600
Created: 10:49am, 06 Jan 2020
An algorithm has a time complexity of?(n^3), when n = 2 it takes 2 seconds to complete how long does it take to complete when n = 4
a) 4
b) 8
*c) 16
d) 32
e) 64
Explanation: 2^3 = 8, 8/4 = 24^3 = 64, 64/4 = 16
Tags: Complexity
Author: mdsb20 (mdsb20)
Avg Rating: 3.8600
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4256599
Created: 10:45am, 06 Jan 2020
I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table is indexed 0 to 6, with each bucket having a max length of 3.If a bucket "overflows", ie it is full and another element is added, this element is added to an overflow bucket.How many elements are inserted into the overflow bucket after the following elements are inserted?Elements inserted left to right (ie 29 is first insert 69 is last insert) : 29, 64, 63, 16, 48, 74, 143, 39, 80, 281, 4, 69.
a) 0
b) 1
*c) 2
d) 3
e) 4
Explanation: 29 % 7 = 125 % 7 = 464 % 7 = 163 % 7 = 016 % 7 = 248 % 7 = 674 % 7 = 4143 % 7 = 339 % 7 = 4 ---- "4 bucket full"80 % 7 = 3281 % 7 = 1 ---- "1" bucket full4 % 7 = 4 ---- put into overflow7071 % 7 = 1 ---- put into overflow69 % 7 = 62 elements were added to the overflow
Tags: Hashtables
Author: hacker_man (jm2787)
Avg Rating: 2.3300
Avg Difficulty: 0.6667
Total ratings: 3
==> Comment 1: You're missing parts of the array that are included in your explanation (by: mo383 [mo383])
==> Comment 2: The array in the question is missing elements that you have included in your explanation, making your chosen answer incorrect. (by: rvs27 [rvs27])



ID: 4256597
Created: 10:42am, 06 Jan 2020
Given a load factor of 0.3 what is the average number of steps for a Closed Hash table with linear probing to find an item.
a) 1.12 steps
b) 1.17steps
*c) 1.21 steps
d) 1.25 steps
e) 1.3 steps
Explanation: Answer is 1.21 steps, see slide 31 of week10b-hashtablesall.pptx
Tags: Hashtables
Author: mdsb20 (mdsb20)
Avg Rating: 4.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256588
Created: 10:32am, 06 Jan 2020
You have been approached by a company to recommend a fast and efficient sorting algorithm to use in Java. They often deal with large inputs of numerical data, and have limited storage. Which sorting algorithm is most suitable?
a) Bubble Sort
*b) Quick Sort
c) Insertion Sort
d) Selection Sort
e) Merge Sort
Explanation: Bubble Sort, Selection Sort and Insertion Sort are bounded by O(n^2), which is unacceptable for this situation. Both Quick Sort and Merge Sort have good runtimes (nlog(n)). However, the main reason why Quick Sort is preferred is that no extra space is used (sorting is done in place), compared to Merge Sort which can be memory consuming.
Tags: Sorting, Applications, Complexity
Author: eotb20 (eotb20)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 9



ID: 4256582
Created: 10:26am, 06 Jan 2020
What is the time complexity of the following algorithm : 0.00001n4 + 100n2 + 19nlogn + (10n2* 5n3 ) ?
a) O(n2)
*b) O(n5)
c) O(n4)
d) O(nlogn)
e) O(n7)
Explanation: The biggest function will dominate since we have(10n2 * 5n3 ) this equates to 50n5 which dominates the others.
Author: hacker_man (jm2787)
Avg Rating: 3.8600
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4256581
Created: 10:25am, 06 Jan 2020
Which formal definition represents an algorithm operating asymptotically equal as f(x)?
*a)
b)
c)
Explanation: See:Asymptotic Complexity
Tags: Complexity
Author: mma82 (mma82)
Avg Rating: 3.5000
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4256575
Created: 10:20am, 06 Jan 2020
It's another Monday morning and you've just rolled up to your workstation at an unnamed car manufacturing company. But, egads! You find that all of the computers have been struck with ransomware!The ransomware states that all of your important, company related files have been encrypted. In order to decrypt them, you can either send 5 BTC to a shady BTC wallet address OR you can solve the following AVL-Tree question.Given the following AVL Tree:what will the tree look like after the number7 has been inserted?
a)
*b)
c)
Explanation: B is correct.After inserting 7, single left rotation must be performed in order to keep the tree balanced. The outer edge of the tree (1, 2, 5, 9) have all been rotated to the left. One thing to note is the fact that the node with the value of3 has entirely changed position. This is due to the fact that after the rotation the new root node is 5, and since 3 is less than five it must be placed appropriately on the left side of the new root. Hence why it is now a child of the node 2.A is incorrect because 7 has somehow become a parent of 9, despite being added after 9.C is incorrect because again, 7 somehow jumps up a level in the tree. As well as this 5 doesn't rotate properly, and 3 jumps all about the place.
Tags: Trees
Author: ajm266 (ajm266)
Avg Rating: 4.0000
Avg Difficulty: 0.8333
Total ratings: 6



ID: 4256573
Created: 10:19am, 06 Jan 2020
Which one of the following statements regarding sorting is incorrect?
a) An insertion sort is stable.
b) The best, average and worst case time complexity for a selection sort are all the same.
*c) A heap sort is stable.
d) The best, average and worst case time complexity for Shell's sort are all the same.
e) The worst case time complexity of a bubble sort is
Explanation: a) is correct, as an insertion sort is indeed stable.b) is correct, as the best, average and worst time complexity for a selection sort are all .c) is incorrect, asa heap sort is not stable.d) is correct, as the best, average and worst time complexity for Shell's sort are all .e) is correct, as the worst case time complexity of a bubble sort is indeed .
Tags: Sorting
Author: jj716 (jj716)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4256572
Created: 10:18am, 06 Jan 2020
How does a Dijkstra's Algorithm behave when all of the edges are weighted equally?
*a) Breadth-first search
b) Depth-first search
c) Neither
Explanation: Since the Dijkstra's Algorithmallows assigning distances other than 1 for each step taken (edge from root), and then considers nodes that are the closest to the root based on the assigned value, if the assigned values are all proportional to the number of steps taken, the algorithm explores the graph in growing concentric circles based on the number of steps taken from the root - definition of BFS.Implementation is however different as BFS uses a queue instead of a priority queue.
Tags: Graphs
Author: eb2006 (eb2006)
Avg Rating: 4.7000
Avg Difficulty: 1.6000
Total ratings: 10



ID: 4256571
Created: 10:17am, 06 Jan 2020
Given the functionsf(x) = 0.1 n5g(x) = 50 nlognh(x) = 0.5 2nhint ( O = at least , ? = at most, O = exactly (both O and? apply))Which of the following is true ?
a) f is ?(g), g is O(f), h is O(g)
*b) f is O(g), g is ?(h), and h is O(g)
c) f is O(g), g is O(f), h is ?(f)
d) All of the above
e) None of the above
Explanation: A - Wrong as f is much larger than g inf is ?(g), the larger function dominates n5dominates nlogn, for the same reason g is O(f) is wrongB - f is atleast g, because f dominates g we can say that f will be atleast g, g is at most h as h dominates g , and h is atleast g for the same reason making this correctC - f is exactly g is wrong since f dominates g, g is atmost h and h is atleast g however are correct
Tags: ADTs
Author: hacker_man (jm2787)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4256569
Created: 10:14am, 06 Jan 2020
Build an AVL Tree with the following values:15, 20, 24, 10, 13, 7, 30, 36, 25Which value does the root node point to?
a) 20
b) 24
*c) 13
d) 15
e) 7
Explanation: See Week 8b-Trees3, slide 38 for implementation
Tags: Trees
Author: eotb20 (eotb20)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4256568
Created: 10:10am, 06 Jan 2020
A Closed Hash w/Linear Probing takes 11/2 average steps and the array is size 10.How many items are in the array?
a) 7
b) 8
*c) 9
d) 10
Explanation: Week10b-HashtablesAll Slide 31 for the formula of average number of steps to get a load factor of 0.9 and since the array is of size 10. 10*0.9 = 9 items.
Tags: ADTs, Hashtables
Author: djk49 (djk49)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4256566
Created: 10:06am, 06 Jan 2020
What is the best and worst case for Merge Sort?
a) Best case: n^2Worst Case: nlog(n)
*b) Best Case: nlog(n)Worst Case: nlog(n)
c) Best case: nWorst Case: n^2
d) Best Case: log(n)Worst case: nlog(n)
Tags: Sorting, Complexity
Author: eotb20 (eotb20)
Avg Rating: 3.8000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256560
Created: 9:58am, 06 Jan 2020
Which of the max heaps A-H could be represented in an array?
a) None of them.
b) All of them.
c) A, B, C and E.
d) B, D and G.
*e) B, C and E.
Explanation: For a max heap to be representable as an array, it must be either a complete binary tree or a almost-complete binary tree where the bottom row stops part way along from left to right. If a max heap didn't satisfy this condition then there would be a gap in the array.A is not a complete binary treenor an almost complete binary tree.Bis a complete binary tree so can be represented in amax heap array.Cis an almost complete binary tree. The right child of node '42' is missing but this wouldn't leave a gap in the array as all other leaf nodes in the bottom level to its left are present and there are no leaf node to the right of the missing node. This tree could be represented in amax heap arrayDis not a complete binary tree nor an almost complete binary treeso there would be gaps in the array.E is an almost complete binary tree so could be represented in a max heap array.Fis not a complete binary tree nor an almost complete binary tree.G is not a complete binary treenor an almost complete binary tree.H is not a complete nor an almost complete binary tree.Max heapsB, C and Esatisfy the conditions so could be represented in an arrayWeek 5 - Lecture B - Slide 5
Tags: Trees
Author: cs2318 (cs2318)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256558
Created: 9:58am, 06 Jan 2020
Given an integer array of randomly ordered 0's and 1's what is the worst case time complexity to sort them so that all the 0's come before the 1's. Use the most efficient sorting algorithm given the conditions of the array.
*a) O(N)
b) O(N*LOG(N))
c) O(N2)
d) O(N2+N)
e) O(N+LOG(N))
Explanation: The answer is A: O(N).Use the partition algorithm from quick sort. This works by choosing the first element as your pivot and then sorting every other element in relation to that pivot. As this only requires you to iterate through the array once it has complexity O(N).
Tags: Sorting, Complexity
Author: jp2294 (jp2294)
Avg Rating: 3.8600
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4256556
Created: 9:56am, 06 Jan 2020
Which of the following does the method used to find a number in a phone book most closely resemble?
a) Linear Search
b) Binary Search
*c) Interpolation Search
Explanation: A) is incorrect as a linear search would involve looking through every number listed in the phone book, which would be clearly unfeasible.B) is incorrect as although a binary search would be more efficient than a linear search, again logistically it doesn't make sense to begin the search from the midpoint of the phone book regardless of what it is you may be searching for.C) is correct, as in this case thekeys that one is searching for in the array are the letters of the alphabet, allowing the search space to be greatly reduced.More information on all these methods of searching can be found on week 2a slides.
Tags: Search
Author: jj716 (jj716)
Avg Rating: 4.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256544
Created: 9:48am, 06 Jan 2020
The list of numbers below create a balanced AVL Tree. Which of the following lists of numbers is printed out if you traverse the balanced AVL Tree using the post order method.4, 6.7, 2, 1, 1.5, 3, 5, 7, 6, 7.5
a) 3, 6, 7.5, 1, 2, 5, 7, 1.5, 6.7, 4
*b) 1, 3, 2, 1.5, 6, 5, 7.5, 7, 6.7, 4
c) 4, 1.5, 1, 2, 3, 6.7, 5, 6, 7, 7.5
d) 1, 1.5, 2, 3, 4, 5, 6, 6.7, 7, 7.5
Explanation: The sorted list gives1, 1.5, 2, 3, 4, 5, 6, 6.7, 7, 7.5 and when a balanced tree is created using this list the root node is 4 and travesing this tree post order gives b as post order process the nodes in the left subtree then right subtree befor processng the current node.
Tags: Trees
Author: ji315 (ji315)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256529
Created: 9:26am, 06 Jan 2020
When using an array list what is the average time complexity for the function find(o) for an unsorted array
a) 1
*b) n
c) n2
d) log n
Explanation: B is correct here. If a list is unsorted then the list may have to be searched in it's entirity before the element is found
Tags: Lists, Search, Complexity
Author: jbersey15 (jsb73)
Avg Rating: 4.2500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256524
Created: 9:22am, 06 Jan 2020
When looking at the complexity of doing a bubble sort, what is the best and worst case
*a) Best: O(n log n)Worst:O(n log n)
b) Best: O(n log n)Worst: O(n2)
c) Best: O(n2)Worst O(n3)
d) Best: O(n)Worst: O(n log n)
Explanation: The corrrect answer is A. The time complexity of a merge sort is always O(n log n)
Tags: Sorting
Author: jbersey15 (jsb73)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0
==> Comment 1: merge? bubble.big noob (by: usernamej [je520])



ID: 4256518
Created: 9:16am, 06 Jan 2020
Consider the following binary search treeWhen completing a post order traversal what is the correct order
a) Jacqueline, James Jenny, Jill, Katherine, Kenny, Martha
*b) Jacqueline, Jenny, James, Katherine, Martha , Kenny , Jill
c) Jill, James, Jacqueline, Jenny, Kenny, Katherine Martha
Explanation: Option B is correct. A post order traversal is one which goes to the left node, then the right node, then visits the node. This means the traversal will come all of the way down the left to Jacqueline first before visiting Jenny (the right node of James) and then James before doing the same for the other side and finally the root node Jill
Tags: Search, Trees
Author: jbersey15 (jsb73)
Avg Rating: 4.6000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256517
Created: 9:14am, 06 Jan 2020
Consider an AVL tree where the following have been inserted (in the given order):10, 2, 21, 55, 69, 9, 79, 10After removing 55, what would the output of the In Order traversal of the tree be ?
a) 10, 2, 9, 21, 10, 69, 79
*b) 2, 9, 10, 10, 21, 69, 79
c) 2, 9, 10, 21, 10, 69, 79
d) 9, 2, 10, 79, 69, 21, 10
e) None of the above
Explanation: The balanced AVL tree looks like this: 10 / \ 2 21 \ / \ 9 10 69 \ 79In Order traversal works by going through all left nodes, then root and finally right nodes, thus the answer is2, 9, 10, 10, 21, 69, 79.
Tags: Search, Trees
Author: tu241 (tu241)
Avg Rating: 4.0000
Avg Difficulty: 1.5000
Total ratings: 2



ID: 4256516
Created: 9:12am, 06 Jan 2020
Which of the following rules for big O is FALSE?
a) If f(n) = O(n) and g(n) = O(n2), then the time complexity of f(n) + g(n) = O(n2)
b) The time complexity of 100f(n) = O(f(n))
c) If f(n) = O(g(n)), and g(n) = O(h(n)), then f(n) = O(h(n))
*d) If g1(n) = O(f1(n)) and g2(n) = O(f2(n)), then g1(n)f1(n) = O(g2(n)f2(n))
e) None of the above
Explanation: A: The rule is sums, bigger function always dominates.B: The rule is scaling, constants do not matter in time complexity.C: The rule is transitivity,if A = B, and B = C, then also A = C.D: The rule is products, however the answer should beg1(n)g2(n) = O(f1(n)f2(n)) instead.
Tags: Complexity
Author: luke_barh (ldb39)
Avg Rating: 3.7800
Avg Difficulty: 1.1111
Total ratings: 9



ID: 4256513
Created: 9:09am, 06 Jan 2020
Big Bank has many customers (about 20,000) but its customers typically only send payments to several people.Which type of graph representation would you use?
a) Adjacency matrix
*b) Adjacency list
Explanation: Adjacency list if you have few edges e between vertices and lots of vertices v
Tags: Graphs
Author: wolfson1 (cr547)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4256510
Created: 9:03am, 06 Jan 2020
Given the tree: 16 / \ 9 19 / \ / \ 2 10 17 24 /1The nodes looked at are in the order:1, 2, 10, 9, 17, 24, 19, 16What kind of traversal does this describe?
a) Pre-order Traversal
b) Level Order Traversal
c) In-order Traversal
*d) Post-Order Traversal
Explanation: Pre-order traversal: 16, 9, 2, 1, 10, 19, 17, 24Level-order Traversal: 16, 9, 19, 2, 10, 17, 24, 1In-order Traversal: 1, 2, 9, 10, 16, 17, 19, 24Post-order Traversal: 1, 2, 10, 9, 17, 24, 19, 16
Tags: Trees
Author: eb2006 (eb2006)
Avg Rating: 4.7100
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4256508
Created: 8:59am, 06 Jan 2020
What is "big O" of heapify?
a) O(n^2)
*b) O(n)
c) O(logn)
d) O(nlogn)
Explanation: Lecture 5b Slide 9
Tags: Sorting
Author: wolfson1 (cr547)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256507
Created: 8:58am, 06 Jan 2020
Alice is organising a dinner party between a few close friends at her workplace. She is trying to figure out the seating plan and working on sending the invites. Most of the invitees know each other, so the number of friendships is larger than the number of invitees. Alice thinks a graph would help her figure out the seating plan where all the invitees are vertices and friendships of each person are edges.Alice also wants to store names along with employee ID numbers, which are 5 digit numbers, in order to send out email invites for the party.Which data structures are most suitable for each of these uses?
a) Adjacency list for the seating plan, skip list for the invites.
b) Adjacency matrix for the seating plan, linked list for the invites.
*c) Adjacency matrix for the seating plan, open hash table for the invites.
d) Adjacency list for the seating plan, closed hash table for the invites.
e) Adjacency list for the seating plan, open hash table for the invites.
Explanation: An adjacency matrix is the most suitable data structure for the seating plan, as the matrix will be dense (many edges compared to vertices). See 2019 Lecture 17 on Graphs, slide 17.An open hash table is the most suitable data structure for the invites, as it stores both the data and a key, which in this case is the employee ID number. See 2019 Week10b slides.
Tags: ADTs, Lists, Applications, Graphs, Hashtables
Author: agkolia (ag2214)
Avg Rating: 4.5000
Avg Difficulty: 1.1250
Total ratings: 8



ID: 4256505
Created: 8:56am, 06 Jan 2020
Define the load of a hash table.
a) The �load� of a hash table is how heavy it is.
b) The �load� of a hash table is how many elements(�keys�) it contains.
*c) The �load� of a hash table is the maximum number of values (�keys�) you intend to adddivided by number of buckets in the array.
d) The �load� of a hash table is the maximum number of values (�keys�) you intend to addplus the number of buckets in the array.
Explanation: Week 10b Slide 30
Tags: Hashtables
Author: wolfson1 (cr547)
Avg Rating: 4.1700
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4256501
Created: 8:42am, 06 Jan 2020
What is the time complexity of this algorithm: 5n3+ 100n2+ 0.1n3.5 + 1000n?
a) O(n3)
b) O(n2)
*c) O(n3.5)
d) O(1000n)
Explanation: The bigger function dominates during addition as of the week2b slides.
Tags: Complexity
Author: luke_barh (ldb39)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4256500
Created: 8:40am, 06 Jan 2020
What is Amortised Run-time Analysis?
a) Analysing time complexity of an algorithm, by looking at average-case run-time operations.
b) Analysing time complexity of an algorithm, by looking at worst-case run-time operations.
c) Analysing time and memory complexity of an algorithm, by looking at best-case run-time operations.
*d) Analysing time and memory complexity of an algorithm, by looking at worst-case run-time operations.
e) Analysing time and memory complexity of an algorithm, by looking at average-case run-time operations.
Tags: Complexity
Author: eb2006 (eb2006)
Avg Rating: 1.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256498
Created: 8:35am, 06 Jan 2020
What are the features of asymptotic complexity?
a) Describes rate of growth of a function based of the data set size n.
b) Considers large data sets size n.
c) Approximates complexity by taking the largest n term.
*d) All of the above.
Explanation: Asymptotic behaviour is the limiting behaviour of the execution time of an algorithm, when the size of the data set goes to infinity (large n). Usually denoted in big-O Notation that is calculated by considering the largest n term.
Tags: Complexity
Author: eb2006 (eb2006)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256495
Created: 8:23am, 06 Jan 2020
Big Theta Complexity Equation:
a)
*b)
c)
Tags: Complexity
Author: eb2006 (eb2006)
Avg Rating: 3.3300
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4256496
Created: 8:18am, 06 Jan 2020
Which Array List operation has the same best, average and worst case runtime complexity?
*a) get(i)
b) add(o)
c) remove(i)
d) insert(o, i)
Explanation: get(i): best, average and worst case O(1)add(o): best and worst case O(1) and average case (n)remove(i): best case O(1), average and worst case O(n)inset(o, i):best case O(1), average and worst case O(n)
Tags: ADTs
Author: luke_barh (ldb39)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256488
Created: 8:18am, 06 Jan 2020
What is the worst case run time when trying to find an element in an AVL tree that consists of m * 2n elements ?
a) T(m) + T(n)
b) T(log n) + T(m)
*c) T(log m) + T(n)
d) T(log m) + T(log n)
e) T(log (mn))
Explanation: T(log n), where n is the number of elements, is the time taken to search an AVL tree. Given that the number of elements ism * 2n, the complexity becomesT(log (m * 2n)) =T(log m) + T(log (2n)) =T(log m) + T(n log(2)) =T(log m) +T(n).
Tags: Search, Trees, Complexity
Author: tu241 (tu241)
Avg Rating: 3.5000
Avg Difficulty: 1.0000
Total ratings: 4



ID: 4256487
Created: 8:10am, 06 Jan 2020
Which of the following best describes the run time of this algorithm:for(int i = 0; i<N; i++){ int j = -1; while(j<i){ System.out.println("Good luck in your exams"); j++; } for(k=0; k<T; k++){ System.out.println("You'll smash them!"); }}
*a) T(N2+ NT)
b) T(N2 log(N))
c) T(N2 + T2)
d) T((NT)2)
e) T(NT)
Explanation: The outer for loop will loop N times. Within this, the while loop will run up to N times, and the for loop will run T times.So the complexity isT(N(N+T)) =T(N2 + NT).
Tags: Complexity
Author: epo24 (epo24)
Avg Rating: 4.7500
Avg Difficulty: 1.2500
Total ratings: 4



ID: 4256486
Created: 8:06am, 06 Jan 2020
What is theoretical analysis of an algorithm?
a) Predicting the exact number of operations an algorithm would do for a given data set.
b) Calculating the time the algorithm takes to run on a given data set.
*c) Predicting the trend of the complexity as large data sets are used.
Explanation: Theoretical analysis determines the Big -Oh complexity used to describe how the algorithm would operate on big data sets. It does not describe exact number of steps or time taken as those are variables dependent on hardware and resource availability, that can be better calculated with practical, run-time analysis.
Tags: Complexity
Author: eb2006 (eb2006)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4256484
Created: 7:57am, 06 Jan 2020
Listed below are sorting algorithms that are considered to be stable. However, one of them can be unstable depending on the implementation. Please select that sort.
a) Insertion Sort
b) Bubble Sort
*c) Selection Sort
Explanation: Consider the following list:3 (First) | 4 | 3 (Second) | 2 | 1In the first iteration, the minimum element is found to be 1 and it is swapped with the first 3, meaning that the list becomes:1 | 4 | 3 (Second) | 2 |3 (First)Thus, the order of the 3s have been changed and the sorted list would like this:1 | 2 | 3 (Second) | 3 (First) | 4Selection sort becomes stable if the minimum element is placed in the correct position (instead of swapping) and every other element is "pushed" across the list by 1.Now, the sorted list looks like this:1 | 2 | 3 (First) | 3 (Second) | 4
Tags: Sorting, Applications
Author: tu241 (tu241)
Avg Rating: 4.2900
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4256483
Created: 7:44am, 06 Jan 2020
Consider a closed hashtable H with linear probing. Suppose we want to store up to 900 items in H, and we want theaverageamount of steps to find any item to be less than 2.By considering the loadL, what is the smallest (whole) number of buckets H can have?
a) 1200
b) 1250
c) 1300
*d) 1350
e) 1400
Explanation: First we calculate the loadL by using the formula for closed hashmaps with linear probing; average number of steps = 0.5 * (1 + 1/(1 - L)). Since we want the average number of steps to be less than 2, we pick 2 equal to average number of steps to give 1 + 1(1 -L) = 4, orL = 2/3. Therefore sinceL is equal to the total intended items over the amount of buckets B, 900 = 2/3 *B. If B is any smaller than this thenL must be greater and we do not have the desired step efficiency, so we want the smallest integer bigger than or equal to theB this formula gives us. Luckily, from this we getB = 1350, so this is our answer.Source of idea: Week10b-Hashtable Slide 31
Tags: ADTs, Hashtables
Author: gh574 (gh574)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256480
Created: 7:35am, 06 Jan 2020
There are many methods to consider when designing an algorithm. Please select the option that is not a proper design technique.
a) Brute Force
*b) Static Programming
c) Divide and Conquer
d) Greedy Algorithms
Explanation: DynamicProgramming is an actual design technique but Static Programming is not, hence it is the correct answer to this question.
Author: tu241 (tu241)
Avg Rating: 3.0000
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256474
Created: 7:14am, 06 Jan 2020
What is the complexity of the following algorithm?for(int i=0;i<n;i++) for (int j=0;j<i;j++) return i+j; }}
*a)
b)
c)
d)
Explanation: The operation print i+j is done 1+2+3+....+n times so total cost is: So the algorithm is
Tags: Complexity
Author: aleksandar (as3358)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256466
Created: 6:37am, 06 Jan 2020
Of the following sorting algorithms, which one has equivalent Best, Worst and Average time complexitiesandis not unstable?(For example, Selection Sort has a Best, Worst and Average time complexity of n^2. It is also stable, and thus would be a correct answer if it were there.)
a) Quick Sort.
*b) Merge Sort.
c) Bubble Sort.
d) Insertion Sort.
e) None of the above.
Explanation: (Information obtained from 2019 Lecture 7a, slide 5)Algorithm time complexities in order: Best, Average, Worst.Quick: nlogn , nlogn , n^2 (Quick Sort is the only unstable algorithm here so can be instantly ruled out, the rest are stable.)Merge: nlogn , nlogn, nlognBubble: n , n^2 , n^2Insertion: n , n^2 , n^2From these options, Merge Sort is the correct answer as it is the only stable algorithm with all 3 cases having the same time complexity (namely nlogn).
Tags: Sorting, Search, Complexity
Author: holyshibe (bh634)
Avg Rating: 4.2500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256456
Created: 6:13am, 06 Jan 2020
Of the following processes, which data structure (Singly Linked Lists or Arrays) can complete the following tasks described faster:Task 1: Getting to the 1000th item in the data structure.Task 2: Inserting a new item at the front of the data structure.Task 2: Removing an item from the middle of the data structure.Example: An answer of [LL : A : LL] would imply that the Linked List performed task 1 fastest, the Array performed task 2 fastest, and the Linked List performed task 3 fastest.(Not the correct answer).
a) [A : A : LL]
b) [LL : LL : LL]
c) [LL : A : A]
*d) [A : LL : LL]
e) [A : A : A]
Explanation: (Week 3b 2019, slide 13)Task 1: Arrays are faster since we can get to item 1000 in 1 step, whereas in a Linked List we must pass through 999 nodes to reach the 1000th node.Task 2: Lists are faster since it takes very few steps to update nodes, whereas in an Array we must shift every element after the insertion point to the right.Task 3: Lists are faster for similar reasons to Task 3, but shifting left instead of right.This implies the answer [A : LL : LL].
Tags: ADTs, Lists, Complexity
Author: holyshibe (bh634)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4256439
Created: 5:44am, 06 Jan 2020
Calculate given that . (Hint: Use the fact that [x^p= x mod p] when p is prime).
a) a = 1.
*b) a = 3.
c) a = 5.
d) a = 7.
e) a = 11.
Explanation: Using Fermat's Little Theorem (2019 week 11b, slide 12), we have that[x^p = x mod p] when p is prime. Noticing that 51 = 3 * 17, we let p = 17 (which is prime), and x = 7.Thus we obtain that 7^17= 7 mod 17.From which wee see that 7^51 = (7^17)^3 and so 7^51 = 7^3 mod 17 = 3 mod 13, and we are finished.
Tags: Cryptography
Author: holyshibe (bh634)
Avg Rating: 4.7500
Avg Difficulty: 1.5000
Total ratings: 8



ID: 4256428
Created: 5:08am, 06 Jan 2020
What isDijkstra's algorithm?
a) A sorting algorithm
*b) A shortest path algorithm
c) A hashing algorithm
d) An encryption algorithm
e) A search algorithm
Explanation: (Purposefully not chosen a topic to not give answer away)
Author: andrewwardle (atw38)
Avg Rating: 4.2500
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4256419
Created: 4:37am, 06 Jan 2020
What would the result be when an in-order traversal is applied to the following tree? 15 / \ / \ / \ 9 13/ \ / \6 3 4 2
a) 15, 9, 6, 3, 13, 4, 2
*b) 6, 9, 3, 15, 4, 13, 2
c) 15, 9, 13, 6, 3, 4, 2
d) 6, 3, 9, 4, 2, 13, 15
Explanation: A = Pre-order traversalB = In-order traversalC = Level order traversalD = Post-order traversal
Tags: Trees
Author: andrewwardle (atw38)
Avg Rating: 4.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256414
Created: 4:12am, 06 Jan 2020
What is the worst case run time of insertion sort?
a) ?(N)
*b) ?(N2)
c) ?(N!)
d) ?(logN)
Explanation: Source: 2019 Week 4a, Slide 16
Augmented explanation 1: Ever increasing size of objects being considered for sorting means steps can increase up to n-1, so roughly equates to n2steps overall (by: andrewwardle [atw38])
Tags: Sorting
Author: andrewwardle (atw38)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256387
Created: 3:25am, 06 Jan 2020
What other 2 algorithms does Hybrid sort ( timsort ) utilise in its implementation?
*a) Merge sort and insertion sort
b) Insertion sort and Bubble sort
c) Quicksort and Bitonic sort
d) None of the above
Explanation: Timsort utilises insertion sort until a given treshold, where merge sort starts being faster and more efficient.
Tags: Sorting
Author: ant34 (ant34)
Avg Rating: 4.4400
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4256382
Created: 3:20am, 06 Jan 2020
Bob decides to run three sorting algorithms in a row, named a, b and c respectively. Given n = 16, which of these functions would takes the largest number of comparisons assuming the data begins in a "worst case" situation (2019 week 7a slide 5)
a) 1. insertion sort2. bubble sort3. shell/pratt sort
*b) 1. insertion sort2. insertion sort3. merge sort
c) 1. heap sort2. merge sort3. selection sort
Explanation: For a, 1 takes 256 steps, 2 takes 16 steps, 3 takes 256 steps so takes 528 overallFor b, 1 takes 256 steps, 2 takes 16 steps, 3 takes 64 steps so takes 336 overallFor c, 1 takes 64 steps, 2 takes 64 steps, 3 stakes 256 steps so takes 384 steps overall
Tags: Sorting, Complexity
Author: ram72 (ram72)
Avg Rating: 2.8300
Avg Difficulty: 1.6667
Total ratings: 6



ID: 4256380
Created: 3:14am, 06 Jan 2020
Given the following hash table, using linear probing, where the hash function being used is ...0 1 2 3 4 5 6 7 8 9-------------------------------|5 |35| | | | | |42| | |-------------------------------...what would the state of the hash table be after inserting 32, 27 and then 6?
a) 0 1 2 3 4 5 6 7 8 9-------------------------------|5 |35|27|6 | | | |42| |32|-------------------------------
b) 0 1 2 3 4 5 6 7 8 9-------------------------------|5 |6 |27| | | | |32| | |-------------------------------
c) 0 1 2 3 4 5 6 7 8 9-------------------------------|5 |35|6 |27| | | |42|32| |-------------------------------
*d) 0 1 2 3 4 5 6 7 8 9-------------------------------|5 |35|27|6 | | | |42|32| |-------------------------------
Explanation: Option A has been created simply by inserting 32 in the wrong position. Option B has been created by, when a collision occurs, replacing the value at the index computed by the hash function with the new value. Option C has been created by inserting 6 and 27 in the wrong order.
Tags: ADTs, Hashtables
Author: snm48@bath.ac.uk (snm48)
Avg Rating: 4.5700
Avg Difficulty: 1.1429
Total ratings: 7



ID: 4256381
Created: 3:14am, 06 Jan 2020
Consider the following problem:Given an array of integers, find the maximum product of two integers in the array. For example, consider the array [ -10, -3, 5, 6 , -2 ]. The maximum product is formed by either the (-10, 3) or (5, 6) pair.What is the complexity of the most efficient algorithm that solves this problem?
a) 1
*b) n
c) n(log(n))
d) log(n)
e) n2
Explanation: The answer is n.The most efficient algorithm traverses once through the array in order to find the 2 largest and 2 smallest (also smaller than 0) elements and compares the products.
Tags: Complexity
Author: ant34 (ant34)
Avg Rating: 4.0000
Avg Difficulty: 1.2500
Total ratings: 4



ID: 4256367
Created: 2:40am, 06 Jan 2020
Which of the following would NOT be a solution to a hash collision when inserting into a hash table?
a) Insert the element in the next available position in the hash table, found by searching linearly.
*b) Recalculate the hash of the element being inserted.
c) Insert the element in thenext available position in the hash table, found by searching exponentially (i.e. by skipping increasing numbers of elements: 0, 1, 2, 4, 8, etc.).
d) Instead of storing single elements at each position in the table, store lists of the elements that hashed to that position.
Explanation: B is not a valid approach because the hash of the element will not change when calculated again.
Tags: ADTs, Search, Hashtables
Author: snm48@bath.ac.uk (snm48)
Avg Rating: 4.1400
Avg Difficulty: 0.4286
Total ratings: 7
==> Comment 1: Epic question, but I feel like B could do with some clarification. As in, you should probably say "re-calculate the hash with the same hash function". This is because using two hash functions is actually a way to deal with collisions, as is noted by this stackoverflow answer [1] (although the site they cited (heh) seems to be dead). Two-choice hashing [2] is similar and while it doesn't directly mitigate collisions it still may run the data through a hash function again, just a different one.[1]https://stackoverflow.com/a/31161193[2]https://en.wikipedia.org/wiki/2-choice_hashing (by: ajm266 [ajm266])
====> Reply 1: Are you sure that's possible? How would you know what hash function was used for a stored element then?



ID: 4256366
Created: 2:40am, 06 Jan 2020
Consider an unordered complete binary tree containing all letters from A to G. Knowing that a preorder traversal of the tree results in the sequence [ B, G, C, D, A, E, F ] and a postorder traversal results in the sequence [C, D, G, E, F, A, B ], what results from an inorder traversal?
a) E, A, B, C, D, F, G
b) A, B, C, D, E, F, G
*c) C, G, D, B, E, A, F
d) C, B, D, G, A, E, F
e) D, A, E, G, F, B, C
Explanation: We traverse by visiting the left subtree first, then the root, then the right subtree for each node of the tree, thus the inorder traversal is C, G, D, B, E, A, F.
Tags: ADTs, Trees
Author: ant34 (ant34)
Avg Rating: 4.8900
Avg Difficulty: 1.1111
Total ratings: 9
==> Comment 1: Great question! Lots of fun ;) (by: mr791 [mr791])



ID: 4256360
Created: 2:20am, 06 Jan 2020
Which of the following COULD be a reason for choosing to use a skip list over a linked list?
a) It needs to be possible to insert items whilst updating as few pointers as possible.
b) There is limited space available in memory.
c) Duplicate items need to be able to be stored.
*d) Inserting items so that they are already in sorted position once inserted needs to be as fast as possible.
Explanation: A. This is reversed - a skip list would require updating more pointers to insert an item than a (singly or doubly) linked list would.B. This is also reversed - skip lists use more memory than linked lists.C. This would not be a reason to use a skip list - skip lists likely disallow duplicate items, since they sort based on value, but even if they allowed them skip lists wouldn't offer an advantage here.D. Skip lists insert items in an already-sorted position in the list cheaply, which would be an expensive operation requiring many node and pointer accesses with a linked list.
Tags: ADTs, Lists, Search, Complexity
Author: snm48@bath.ac.uk (snm48)
Avg Rating: 4.5800
Avg Difficulty: 0.5833
Total ratings: 12



ID: 4256359
Created: 2:12am, 06 Jan 2020
Using an ascending order merge sort, which of these inputs requires the highest possible number of comparisons?
a) 1,2,3,4,5,6
b) 4,3,1,6,5,2
c) 6,5,4,3,2,1
d) None of the above.
*e) All of the above.
Explanation: A merge sort always makes the same number of comparisons regardless of input order. The number of comparisons made is equal to n log2 n
Tags: Sorting
Author: fheard (fh503)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256358
Created: 2:12am, 06 Jan 2020
What is the maximum height of a perfectly balanced search tree of size n (2019 Lecture 8a slide 28)
*a) log(n)
b) n
c) n/2
d) 2/n
e) n/2n
Explanation: The answer is log(n) because the number of nodes in a row is equal to 2x where x is the number of the row. Therefore the answer is log(n) as this is the inverse of 2x
Tags: Trees, Complexity
Author: ram72 (ram72)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256354
Created: 1:56am, 06 Jan 2020
A bubble sort algorithm takes 2ms to sort a list of 100 elements. How long should it take to sort 100000 (105) elements?
a) 50000 seconds
b) 2000 milliseconds
c) 4000 seconds
d) 200000 seconds
*e) 2000 seconds
Explanation: Bubble sort has a time complexity of O(n2). Using this we can calculate the time constant of the algorithm by doing 1002 / 2 which is 5000. We can then calculate the time taken by doing 1000002 / 5000 which is 2000000 milliseconds or 2000 seconds.
Tags: Sorting, Complexity
Author: fheard (fh503)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256353
Created: 1:54am, 06 Jan 2020
What order would the elements of the following tree be processed in aPost Order Traversal? 5 / \ 3 7 / / \ 2 6 9
a) (5,3,2,7,6,9)
*b) (2,3,6,9,7,5)
c) (2,3,5,6,7,9)
Explanation: A) Pre orderB) Post orderC) In orderSeeD&A-Revision2.pptx, pg. 33
Tags: Search, Trees
Author: lewist (lt508)
Avg Rating: 4.0000
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256348
Created: 1:36am, 06 Jan 2020
Consider a balanced AVL Tree as below: 5 / \ 3 6 \ 7This AVL Tree will attempt to balance itself whenever it become unbalanced using a rotation algorithm.If we insert the number 9 to the tree and then perform a post order traversal printing the values in the tree.What is the output?
a) 3 5 6 7 9
*b) 3 6 9 7 5
c) 5 3 7 6 9
d) 3 5 9 7 6
Explanation: B is correct as the tree would look as below: 5 / \ 3 7 / \ 6 9A post order traversal on this tree produces the answer B.A is an in order traversal, C is a pre order traversal and D is a post order traversal on a different tree.
Tags: Trees
Author: fheard (fh503)
Avg Rating: 4.2500
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4256344
Created: 1:26am, 06 Jan 2020
Which of the following input arrays makes insertion sort in descending order perform the largest number of operations?
a) (9, 8, 7, 6, 5, 4, 3)
b) (6, 5, 3, 4, 8, 9, 7)
c) (7, 6, 5, 9, 8, 3, 4)
*d) (3, 4, 5, 6, 7, 8, 9)
Explanation: A perfectly disordered arrayis the worst case since every round requires maximum comparisons & shifts. Since the array is being sorted in descending order, the array that would result in the most comparisons and shifts would be an array in ascending order.
Tags: Sorting
Author: av2020 (av533)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256343
Created: 1:25am, 06 Jan 2020
What is the maximum possible number of elements in a binary tree of depth 7?
a) 52
*b) 255
c) 2047
d) 128
e) 127
Explanation: The number of nodes possible in a binary tree of depth d is 2d+1- 1(Week 7b, slide 11).27+1- 1 = 256 - 1 = 255
Tags: Trees
Author: wja25 (wja25)
Avg Rating: 3.6000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4256338
Created: 1:20am, 06 Jan 2020
How many different insertion sequences of the key values, using the hash function h(k)=k mod 10, will result in the closed hash table with linear probing given below?
a) 10
b) 20
c) 30
*d) 40
e) 50
Explanation: The first key which is not at the index computed by hash function is 42. It means index 2 and 3 were already occupied and therefore, key 42 is placed at index 4.The keys 72 and 33 are present at index 2 and 3 respectively. As these keys are at their correct position, their order of insertion does not matter. These 2 keys can be inserted in 2! = 2 ways. Therefore, the sequence will be any order of (72, 33) followed by 42.The next key which is not at the index computed by hash function is 31. It means indexes 1 to 5 were already occupied and key 31 is placed at index 6. Therefore, it is the last key to be inserted into hash table.The keys 61 and 25 are each present at their correct position computed by the hash function. Therefore, they can be inserted at any place in the sequence before 31. The sequence excluding 31 has so far 3 elements (72, 33, 42), which create 4 positions for 61 (2 in-between and 2 corners). Now we have 4 elements in the sequence excluding 31, and so there 5 positions for 25 (3 in-between and 2 corners).Total number of ways is: 2*4*5 =40.
Tags: Hashtables
Author: rvs27 (rvs27)
Avg Rating: 4.6700
Avg Difficulty: 1.6667
Total ratings: 3



ID: 4256337
Created: 1:18am, 06 Jan 2020
Select the correct definition for a full binary tree.
a) All levels are completely full. If the last level is not full, the nodes are filled from left to right.
*b) All nodes have 0 or 2 children.
c) All interior nodes have 2 children and all leaf nodes are on the same level.
Explanation: A: complete binary treeC: perfect binary tree
Tags: Trees
Author: av2020 (av533)
Avg Rating: 2.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256330
Created: 1:15am, 06 Jan 2020
What is the method forSelection Sort?
*a) ?Find the smallest item in the list and swap it with the first. Repeat this with rest of unsorted list.
b) In repeated passes, swap adjacent items until list is fully sorted.
c) Recursively split the array into equal sections and combine as sorted.
d) Choose an element as a pivot and put elements less than the pivot to the left and greater than to the right, repeat recursively to these sublists.
Explanation: A) Selection SortB) Bubble SortC) Merge SortD) Quick Sort
Tags: Sorting
Author: lewist (lt508)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 7



ID: 4256328
Created: 1:13am, 06 Jan 2020
An algorithm takes 1s for n = 200, 1000s for n = 2000 and 8000s for n = 4000.Which asymptotic complexity does it likely have?
a) ?(n2)
b) ?(n log n)
*c) ?(n3)
d) ?(2n)
Explanation: n: 200 ? (x 10) ? 2000 ? (x 2) ? 4000Time: 1 ? (x1000) ? 1000 ? (x8) ? 8000n ? Timex10 ? x1000x2 ? x8Time = n3? ?(n3)
Tags: Complexity
Author: av2020 (av533)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256319
Created: 12:57am, 06 Jan 2020
Which one of the List has the quickest average run time for insert() if n >= 1000;
a) Array List
b) Singly Linked List
*c) Doubly Linked List
d) Skip List
e) All of them have the same time complexity of insert().
Explanation: The correct answer is C because the average run time for insert() for each List is:Array List =?(n)Singly Linked List =?(n)Doubly Linked List = ?(1)Skip List =?(log n)When n >= 100?(1) <?(log n) <?(n)
Tags: Lists, Complexity
Author: ck630 (ck630)
Avg Rating: 3.0000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4256315
Created: 12:52am, 06 Jan 2020
Imagine you are sorting a bookshelf. As you are a conscientious computer scientist, you know better than to use the bubble sort algorithm. However, you are also very tired and don't want to implement a much more complex algorithm. You decide to sort the books by doing one pass from left to right using bubble sort to find the last book, and then another pass from right to left, again using bubble sort, to find the first book. Is this actually faster than doing a simple bubble sort?
a) Always
*b) Depends on the starting order of the books
c) Never
Explanation: The algorithm described is called cocktail shaker sort. See here for more information:https://en.wikipedia.org/wiki/Cocktail_shaker_sort#Differences_from_bubble_sort
Tags: Sorting, Complexity
Author: tb791 (tb791)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256314
Created: 12:51am, 06 Jan 2020
Which of the following statements about sorting algorthms is false?
a) Merge sort is always quicker (in terms of time complexity) than bubble sort.
b) Merge sort can be slower than insertion sort in certain scenarios.
*c) Merge sort, selection sort and quick sort are all examples of divide and conqueralgorithms.
d) Merge sort always has time complexity of O(n log n).
Explanation: Selection sort is not a divide and conquer algorthm, it is an in-place sorting algorithm.A is correct as merge sort is always O(n log n) as in D, whilst bubble sort is always O(n2).B is correct as when the list is already sorted insertion sort has a time complexity of O(n).
Tags: Sorting, Complexity
Author: fheard (fh503)
Avg Rating: 2.5000
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4256313
Created: 12:50am, 06 Jan 2020
When inserting a value into aBinary SearchTree, what is the worst case and average case time complexity?
a) Worst case: O(n2)Average case: O(log n)
b) Worst case: O(n2)Average case: O(n)
*c) Worst case: O(n)Average case: O(log n)
d) Worst case: O(n log n)Average case: O(log n)
Explanation: To insert a value the algorithm must first search through the tree, a search is worst case O(n), average case O(log n). See D&A-Revision2.pptx pg. 35
Tags: Search, Trees, Complexity
Author: lewist (lt508)
Avg Rating: 3.7500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256322
Created: 12:48am, 06 Jan 2020
Use Fermat's little theorem (specifically xp = x (mod p) where p is prime, Week 11b 2019, slide 12)to calculate 360% 29.
a) 1
b) 15
c) 4
d) 9
*e) 23
Explanation: Usingxp = x (mod p) where p is prime, we choose p to be 29 and x to be 3, hence 329= 3 (mod 29)(1) Now we see that 360= 3(29 * 2) + 2=(329)2* 32.(2) Since329 = 3 (mod 29), (329)2= 9 (mod 29).Putting this all together, we get 9 (from (2)) * 9 (last component of (1)) (mod 29), which is 81(mod29). So the answer is 23 (mod 29).
Tags: Cryptography
Author: wja25 (wja25)
Avg Rating: 4.3800
Avg Difficulty: 1.3750
Total ratings: 8



ID: 4256312
Created: 12:46am, 06 Jan 2020
You have been hired by the Housing Opportunities of Northern Delaware Association to create a system which allows them to keep track of which addresses they currently have available. They have spent many decades supporting the people of the area in finding the perfect home, but have recently began to fall behind newer tech-based companies, and are determined to catch up and ensure they provide the highest quality service they can.The system is required to have the following qualities:- It must be quick to search for a given address, to find whether or not it is currently stored in the system, and to access its details. Speed is more important than space used, to ensure users are not left waiting for too long while the system runs.- It should be easy to add new addresses to the system as they become available, and to remove them once they are taken off the market.- The data does not need to be sorted, as employees personally work with each customer to recommend different homes, and so will be searching for entries directly.- You have only a rough estimate of how many addresses will need to be stored at a given time, and the number tends to vary by a large margin throughout the year due to seasonal buyers.Which data structure should you implement in the new system?
a) A Linked List
b) A Closed Hash Table
*c) An Open Hash Table
d) An AVL Tree
e) A Heap
Explanation: A Hash Table is the optimal data structure for the system. Linked Lists and Tree structures require you to search through a potentially large number of nodes to find a specific address, while hashing allows you to jump either straight to the required data or at least very close to it.Unlike a Closed Hash Table, Open Hash Tables are able to grow out linked lists as more data is added instead of simply filling up. Open Hashing also requires a much lower average number of steps to find any given piece of data.
Tags: Lists, Search, Trees, Hashtables
Author: sr2058 (sr2058)
Avg Rating: 4.7500
Avg Difficulty: 1.1250
Total ratings: 8



ID: 4256308
Created: 12:45am, 06 Jan 2020
A �stack� data structure operates in a last in last out fashion.
a) True
*b) False
Explanation: A stack has only two operations (push and pop). Push adds an element to the stack, placing it at the top. Pop removes the top element. As such a stack operates as first in last out.
Tags: ADTs
Author: jdl42 (jdl42)
Avg Rating: 3.6700
Avg Difficulty: 0.1111
Total ratings: 9



ID: 4256302
Created: 12:33am, 06 Jan 2020
How many cases are there when we are removing a node from a binary search tree?
a) 2
*b) 3
c) 4
d) 5
e) 6
Explanation: There are 3 cases:One node is a leafOne node has one childOne node has two children
Tags: Trees
Author: ck630 (ck630)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4256301
Created: 12:33am, 06 Jan 2020
How many nodes are accessed during a breadth-first search for the number 11 in the following tree:
a) 1
b) 2
c) 3
d) 4
*e) 5
Explanation: Breadth-first search first checks the root node, then its children (left then right). This is a recursive operation, so each time the child nodes are checked, their children are checked (left then right) too.This is more easily defined as a recursive function:boolean search(TreeNode node, int elementToFind){ return (node.value == elementTofind) || search(node, node.left) || search(node, node.right);}As a result, each element is accessed at each level, left to right, like so:12, 8, 18, 5, 11, 17, 4
Tags: Search, Trees
Author: mma82 (mma82)
Avg Rating: 4.6700
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4256300
Created: 12:32am, 06 Jan 2020
Which of the following data structures has a worst case space complexity of O(n log n)?
a) AVL Tree
b) Singly-Linked List
c) Doubly-Linked List
*d) Skip List
e) Hash Table
Explanation: Skip List - every other data structure has a O(n) space complexity. However, the skip list has a greater size because each new node added does not add a constant number of pointers, but rather an increasing number (think of the number of lanes and how it increases when more elements are added: more lanes = more pointers).
Tags: Lists, Complexity
Author: tb791 (tb791)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256299
Created: 12:31am, 06 Jan 2020
Exponential time complexity is slower than factorial time complexity
a) True
*b) False
Explanation:
Tags: Search, Complexity
Author: cm2259 (cm2259)
Avg Rating: 4.2000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256297
Created: 12:27am, 06 Jan 2020
Which one of the following sorting algorithms order is the correct descending order in term of best run time if n >= 100?
a) Selection sort > Merge sort > Insertion sort
b) Merge sort > Insertion sort > Selection sort
c) Merge sort > Selection sort > Insertion sort
d) Insertion sort > Merge sort > Selection sort
*e) Selection sort > Insertion sort > Merge sort
Explanation: E is correct because the best run time for each algorithm is:Selection sort = ?(n^2)Merge sort = ?(nlog(n))Insertion sort = ?(n)For n >= 100:?(n^2) > ?(n) > ?(nlog(n))
Tags: Sorting, Complexity
Author: ck630 (ck630)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256296
Created: 12:26am, 06 Jan 2020
Dijkstra algorithm is a example of which of the following type of algorithm
a) dynamic programming
b) backtracking
c) divide and conquer
*d) greedy
e) brute force
Explanation: The answer is D because greedy algorithms make the optimal choices at each step in other to find the overall optimal way of solving the problem
Tags: Applications
Author: ji315 (ji315)
Avg Rating: 4.1400
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4256295
Created: 12:25am, 06 Jan 2020
Which rotation operations would need to be performed to balance this AVL Tree? F / \ A M / \ H X / \ G J
a) Left Left
b) Left Right
c) Right Right
*d) Right Left
Explanation: See week8b lectures 2019.A right rotation about M then a left rotation about F will result in a balanced tree.
Tags: Trees
Author: hbll20 (hbll20)
Avg Rating: 4.4000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4256294
Created: 12:24am, 06 Jan 2020
You have just finished your A-levels and are on a gap yaaa in Switzerland skiing,You have a map that showsyou the ski lifts to travel between slopes, seen aboveIn some cases, using multiple ski lifts is quicker than using the direct line.Using Dijkstras algorithm, calculate the length of the shortest route to each slope from the base camp.
a) A=5B=21C=15D=7E=45
*b) A=5B=10C=15D=7E=13
c) A=21B=6C=12D=19E=10
d) A=5B=27C=15D=7E=13
Explanation: The quickest routes are as followsA = Direct from base campB = Base camp -> A -> BC = Direct from base campD = Direct from base campE = A->B->E
Tags: Graphs
Author: oof26 (oof26)
Avg Rating: 4.7100
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4256293
Created: 12:23am, 06 Jan 2020
Pre-Order traversal on the following tree will give which output? 9 / \ 6 15 / \ \ 1 8 21 / \ 7 25
a) 9, 7, 6, 1, 8, 21, 25, 15
*b) 9, 6, 1, 8, 7, 15, 21, 25
c) 1, 6, 7, 8, 9, 15, 21 ,25
d) 1, 7, 8, 6, 25, 21, 15, 9
e) 9, 6, 1, 8, 7, 25, 21, 15
Explanation: See the lecture slides from week 7b pre-order traversal. This take the element from the left as you traverse the tree which gives option B
Tags: Trees
Author: mj694 (mj694)
Avg Rating: 4.6700
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4256291
Created: 12:22am, 06 Jan 2020
Which one of the following options is an advantage of using an AVL Tree rather than a Binary Search Tree?
a) It is always faster for insertion than a regular binary search tree
*b) It has a better worst-case complexity for search than a regular binary search tree
c) You can remove from an AVL tree but not from a binary search tree
d) Pre-order traversal is possible with an AVL tree, but not with a binary search tree
Explanation: A) It is not always faster for insertion, and in fact is often slower because of the rebalancing performed after the initial insertion.B) The correct answer: balancing gives it O(log n) worst case as opposed to a binary tree's O(n) worst complexity.C) You can remove from both tree types with the correct algorithm.D) Pre-order traversal is possible with any type of tree data structure, not just AVL trees.
Tags: Trees, Complexity
Author: tb791 (tb791)
Avg Rating: 5.0000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4256289
Created: 12:16am, 06 Jan 2020
The greater the load factor of a hash table, the lower the number of steps required to search the table for a value.
a) True
*b) False
Explanation: Load factor is the proportion of buckets that are occupied: load factor = number of values stored / hash table capacity. Thus a low load factor (close to 0) means that many buckets in the table are empty, and a high load factor (close to 1) means that many buckets in the table are occupied.As a result, it requires fewer steps on average to search for a value in a hash table with alow load factor as the array contains lots of empty space that will never need to be searched.See Week10b slides 31-32 on hash table efficiency.
Tags: Hashtables
Author: tb799 (tb799)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256274
Created: 12:09am, 06 Jan 2020
Which of the following data structures has the slowest average time complexity for inserting an item?
a) Array
b) Stack
*c) Skip List
d) Queue
e) Hash Table
Explanation: A Skip List has an average time complexity ofT(log(n) for insertion making it the slowest compared toT(n) for an Array andT(1) for the Hash Table, Stack and Queue.
Tags: Sorting, Complexity
Author: hbll20 (hbll20)
Avg Rating: 1.6700
Avg Difficulty: 0.5000
Total ratings: 6
==> Comment 1: O(log(n)) is faster than O(n) (by: rossthomas [rt578])



ID: 4256273
Created: 12:08am, 06 Jan 2020
What is the average and worst case search time for a given element in a skip list?
a) Worst Case: O(n)Average Case: O(n(log n))
b) Worst Case: O(1)Average Case: O(log n)
c) Worst Case: O(n)Average Case: O(n^2)
*d) Worst Case: O(n)Average Case: O(log n)
e) Worst Case: O(log n)Average Case: O(n)
Explanation: See skip list run time slide in lecture 3b.Land log(n) -1 skips approximatly n/2 nodes for average case of O(log n)and for worst case the skip list is unable to skip any elements meaning it is a linear search og O(n)
Tags: ADTs, Lists, Search
Author: mj694 (mj694)
Avg Rating: 3.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256272
Created: 12:08am, 06 Jan 2020
I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table itself is indexed 0 to 6 and stores pointers to the head elements of singly linked lists which store the values added to the hash table.After the following elements are inserted (in the order they are written), how many values are stored in the linked lists that are pointed to by index 0 and index 6 respectively? (Please note that the head pointer does NOT count as a value stored)Values to add to the hash table: 49, 22, 36, 135, 48, 73, 209, 105, 1042, 591, 5, 256.
a) 3 and 1 respectively
b) 0 and 3 respectively
c) 1 and 1 respectively
*d) 2 and 3 respectively
e) 5 and 3 respectively
Explanation: 49 % 7 = 022 % 7 = 136 % 7 = 1135 % 7 = 248 % 7 = 673 % 7 = 3209 % 7 = 6105 % 7 = 01042 % 7 = 6591 % 7 = 35 % 7 = 5256 % 7 = 4Hence 2 items are stored at index 0 and 3 items are stored at index 6
Tags: Hashtables
Author: wja25 (wja25)
Avg Rating: 5.0000
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4256271
Created: 12:07am, 06 Jan 2020
Take the following pseudocode for sorting books by height on a shelf:void sort(shelf of N books){ for i = 1 to N { find the smallest book between slots i and N swap this smallest book with book i; }}Which type of sort has occurred?
a) Insertion sort
b) Merge sort
c) Bubble sort
*d) Selection sort
e) Quicksort
Explanation: This is a selection sort algorithm which repeatedly finds the smallest book and puts it at the start of the shelf.
Tags: Sorting
Author: ali12345 (aak209)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4256269
Created: 12:04am, 06 Jan 2020
If the balance factor of a tree node equals to 2, when rebalancing an AVL tree, which of the following pseudo-code holds true?
a) rightRotate(node)
b) leftRotate(node)
*c) node.left = leftRotate(node.left)rightRotate(node)
d) node.right = rightRotate(node.right)leftRotate(node)
Explanation: SeeGeeks for Geeks - Tree Insertion
Tags: Trees
Author: mma82 (mma82)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256268
Created: 12:04am, 06 Jan 2020
The load factor for a hash table is:
a) The capacity divided by the number of collisions
b) The number of collisions divided by the capacity
c) The capacity divided by the number of occupied locations
*d) The number of occupied locations divided by the capacity
e) None of the above
Explanation: The load factor is defined as:load factor = n/k,where n is the number of locations occupied in the hash table and k is the number of bucketsThe load factor should be less than 1
Tags: Hashtables
Author: ew568 (ew568)
Avg Rating: 4.2000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256264
Created: 12:00am, 06 Jan 2020
Which Data Structure best suits this description of a graph,and what is it's asymptotic memory usage?few vertices and many edges (dense)
*a) Adjacency Matrix?(v^2)
b) Adjacency List?(v+e)
c) Adjacency Matrix?(v+e)
d) Adjacency List?(v^2)
Tags: Graphs
Author: a4k (ajl96)
Avg Rating: 2.8000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4256260
Created: 11:54pm, 05 Jan 2020
Which of the following hashing techniques is based on randomisation?
a) Open addressing
b) Hashing by division
c) Hashing by multiplication
*d) Universal hashing
Tags: Hashtables
Author: aureliacretu (ac2590)
Avg Rating: 2.5000
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4256257
Created: 11:51pm, 05 Jan 2020
Which method of tree traversal will produce reverse polish notation (RPN) from a tree made of operations and numbers?
a) Pre-Order Traversal
b) In-Order Traversal
*c) Post-Order Traversal
Explanation: RPN works by taking the two numbers first and then the operand to use on the previous two numbers.Therefore as the number branch from the operation to be performed on them, post order traversal will give both number followed by the operand,which is reverse polistion notation (RPN)
Tags: Trees
Author: mj694 (mj694)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256255
Created: 11:48pm, 05 Jan 2020
Which two sorting algorithms have a best (O), average (?), and worst-case (O) time complexity of n(log(n))?
a) Heap Sort & Bubble Sort
b) Merge Sort & Quick Sort
*c) Merge Sort & Heap Sort
d) Quick Sort & Merge Sort
e) Merge Sort & Bubble Sort
Explanation: Bubble Sort has a best-case time complexity ofO(n), an average-case of?(n^2) and a worst-case ofO(n^2) so it cannot be A or E.Quick Sort has a worst-case time complexity ofO(n^2) so it cannot be B or D.This leaves C with Merge and Heap Sort which do have a time complexity of n(log(n)) for each of best, average and worst cases.Full table of time complexities can be found in the slides of lecture week7A 2019.
Tags: Complexity
Author: hbll20 (hbll20)
Avg Rating: 4.3300
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4256254
Created: 11:47pm, 05 Jan 2020
You have been hired by a surgery to create a system that can hold patient records. The surgery is extremely busy, so retrieving records must be as fast as possible. The surgery has stated that the previous system allowed them to sort records, but this feature was no longer required. As many patients join and leave, insertion and deletion must both be very fast.
*a) Hash Table (Open Hashing)
b) Binary Search Tree
c) Hash Table (Closed Hashing)
d) AVL Tree
e) Doubly Linked List
Explanation: Evidently, due to the need for extremely fast lookup times, a hash table is required with its O(1) complexity. This works well as the data will not need to be sorted. The open hashing table should be chosen, as deletion is much easier when compared to the closed hashing table, while still maintaining fast insertion.
Tags: ADTs, Lists, Applications, Trees, Hashtables
Author: kai (kp664)
Avg Rating: 5.0000
Avg Difficulty: 1.1429
Total ratings: 7



ID: 4256252
Created: 11:45pm, 05 Jan 2020
Analyse the sorting algorithm belowvoid sort(int arr[]){ int n = arr.length; for (int i = 0; i < n-1; i++) { int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp;}State the name of the algorithm, the worst complexity, average complexity and best complexity
a) Bubble sort, n^2, n^2, n^2
b) Bubble sort,n^2, n^2, n
*c) Selection sort, n^2, n^2, n^2
d) Merge sort,n*log(n),n*log(n),n*log(n)
e) Selection sort, n^2, n^2, n
Explanation: C is the right answer because the algorithm is a selection sort and the worst, average and best complexity of selection sort is n^2
Tags: Complexity
Author: ji315 (ji315)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256251
Created: 11:44pm, 05 Jan 2020
Emma likes to organise her book collection alphabetically. When she goes away to Uni, her mother buys a few books for her every month.However, she doesn't stick to Emma's system and just slides the books wherever it's more convenient. She doesn't rearrange the existing books.When Emma comes home on vacation, she wants to sort her books back into alphabetical order.What's the fastest algorithm that Emma could use?
a) Heap sort
b) Merge sort
*c) Insertion sort
d) Quick sort
e) Shell sort
Explanation: Insertion sort is fastest for nearly sorted data.Heap sort, merge sort and quick sort don't adapt to nearly sorted data.
Tags: Sorting
Author: aureliacretu (ac2590)
Avg Rating: 3.2500
Avg Difficulty: 1.0000
Total ratings: 4
==> Comment 1: If her collection is small the collection could be more unordered than ordered (by: cm2259 [cm2259])



ID: 4256250
Created: 11:42pm, 05 Jan 2020
A shell sort where h=1 is equivalent to which other sort?
a) Merge sort
*b) Insertion sort
c) Selection sort
d) Bubble sort
e) Heap sort
Explanation: Insertion sort is effectively a special case of the shell sort, with h=1
Tags: Sorting
Author: mjs209 (mjs209)
Avg Rating: 3.7500
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4256249
Created: 11:42pm, 05 Jan 2020
What is the complexity of insertion sort on an already sorted array?
a) O(log n)
*b) O(n)
c) O( )
d) O(2n)
Explanation: The algorithm simply traverses the array in one pass and does not need to make any swaps
Tags: Sorting
Author: oof26 (oof26)
Avg Rating: 3.4000
Avg Difficulty: 0.2000
Total ratings: 5
==> Comment 1: Thanks man. I was hoping for a challenging question like this! (by: km876 [km876])
====> Reply 1: Glad I could help!



ID: 4256247
Created: 11:39pm, 05 Jan 2020
Which of the following search algorithms is fastest if the dataset is already sorted?
*a) Bubble sort
b) Insertion sort
c) Selection sort
Explanation: Though not on average the fastest of the three by any means, bubble sort has a best-case complexity of just n
Tags: Sorting, Complexity
Author: mjs209 (mjs209)
Avg Rating: 2.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256248
Created: 11:38pm, 05 Jan 2020
Which of the following is not a function of a stack?
a) push(Object i)
b) Object pop()
*c) removeElement(int index)
d) Object peek()
Explanation: Stacks are a FIFO data structure, meaning only elements on the top of the stack may be removed at any time.
Tags: ADTs
Author: mma82 (mma82)
Avg Rating: 3.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256245
Created: 11:37pm, 05 Jan 2020
What is the output of pre-order traversal on this tree?
a) 1,4,7,6,3,13,14,10,8
*b) 8,3,1,6,4,7,10,14,13
c) 1,3,4,6,7,8,10,13,14
Explanation: Pre-order traversal return the root, then traverses the left sub-tree, then the right sub-tree. When applied recursively this produces the output found in B.
Tags: ADTs, Trees
Author: oof26 (oof26)
Avg Rating: 3.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256243
Created: 11:34pm, 05 Jan 2020
Consider the following binary tree:What would be the outcome of printing each node via in-order traversal?
a) D B E G H C F A
*b) D B G E H A C F
c) A B C D E F G H
d) D G H E B F C A
e) G H D E F B C A
Explanation: In-order traversal considers the left node, current node, and right node, in that order, traversing recursively.
Tags: Trees
Author: mjs209 (mjs209)
Avg Rating: 3.3300
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256303
Created: 11:34pm, 05 Jan 2020
Is it possible to search for any word in the english language in constant time complexity ?
*a) Yes
b) No
Explanation: This can be done through the use of a TrieAn example of a Trie is bellow:Any word can be found in constant complexity, more specifically in H steps, where H is the length of the longest word/string
Tags: Search, Trees, Complexity
Author: cm2259 (cm2259)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256241
Created: 11:33pm, 05 Jan 2020
If you perform a bubble sort on the list:62, 90, 14, 43, 54, 94, 18, 74, 3, 49How many swaps will have been carried out after the 5th pass?
*a) 23
b) 20
c) 27
d) 31
e) 28
Explanation: 62, 14, 43, 54, 90, 18, 74, 3, 49, 94 - 7 swaps in 1stpass14, 43, 54, 62, 18, 74, 3, 49, 90, 94 - 7 swaps in 2nd pass14, 43, 54, 18, 62, 3, 49, 74, 90, 94 - 3 swaps in 3rdpass14, 43, 18, 54, 3, 49, 62, 74, 90, 94 - 3 swaps in 4th pass14, 18,43, 3, 49, 54, 62, 74, 90, 94 - 3 swaps in 5thpass7 + 7 + 3 + 3 +3 = 23 swaps
Tags: Sorting
Author: ew568 (ew568)
Avg Rating: 3.6700
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256239
Created: 11:28pm, 05 Jan 2020
Given the hash function of % 11 into an open hashing table, which item will take the most comparisons to find if the following items are added using the given hashing function?11, 17, 32, 132, 4, 9, 100, 34, 25, 98, 165, 77, 40.
a) 11
*b) 77
c) 40
d) 25
e) 165
Explanation: In an open hashing table when a value is found it is stored in a data structure such as a list or an array. This means that duplicates are stored later in the list/array and more comparisons are needed to find the item as you will need to compare the searched for value against every item before it as you can not know if it is actually stored otherwise. In this case 0 is the most popular value at 4 values and so the last item to be added will require the most comparisons (which is 77).
Tags: Search, Hashtables
Author: tp648 (tp648)
Avg Rating: 4.8300
Avg Difficulty: 1.6667
Total ratings: 6



ID: 4256270
Created: 11:28pm, 05 Jan 2020
What conditions need to be met for a binary tree to be perfectly balanced
*a) for every node, the number of nodes in its left and right subtree differs by one.
b) for every node, the number of nodes in its left and right subtree are equal.
c) The height of the right nodes is equal to the height of the left nodes
d) all levels of the tree have to be filled
Explanation: A is the correct answer becuase some list can't create trees with the same number of nodes on each subtree for example lists of even length, but these lists can still create a balanced tree.
Augmented explanation 1: A is the correct answer because some list can't create trees with the same number of nodes on each subtree for example lists of even length, but these lists can still create a balanced tree. (by: ji315 [ji315])
Tags: Trees
Author: ji315 (ji315)
Avg Rating: 1.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256233
Created: 11:22pm, 05 Jan 2020
Which binary tree traversal is similar to expression evaluation?
a) Pre-order
b) In-order
*c) Post-order
d) Level-order
Explanation: Expression evaluation evaluates the left subtree, then the right subtree, then applies the operator in the current node to those results. (2019 Week7b-Trees1, slide 36)The post-order traversal traverses the left subtree, then the right subtree, then the current node.(2019 Week7b-Trees1, slide 24)
Tags: Trees
Author: aureliacretu (ac2590)
Avg Rating: 3.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256228
Created: 11:13pm, 05 Jan 2020
Which two sorting algorithms have a best case time complexity of O(n)
a) selection sort and bubble sort
b) merge sort and heap sort
c) quick sort and insertion sort
*d) insertion sort and bubble sort
e) merge sort and quick sort
Explanation: Selection Sort = O(n^2)Bubble Sort = O(n)Insertion Sort = O(n) Heap Sort = O(n log(n)) Quick Sort = O(n log(n)) Merge Sort = O(n log(n))
Tags: Sorting, Complexity
Author: cm2259 (cm2259)
Avg Rating: 3.6000
Avg Difficulty: 0.0000
Total ratings: 5



ID: 4256227
Created: 11:11pm, 05 Jan 2020
Consider you are implementing a hash table with 200 possible buckets, and intend to add a maximum of 150 keys to the table.The hash table is closed and uses linear probing.What is the average number of steps taken to insert/find an item in this hash table?
a) ~1.05
*b) ~2.5
c) ~2.16
d) ~3.00
e) ~1.21
Explanation: 1) Calculate the load factor, L by the number of keys divided by the number of buckets -> 150/200 = 0.752) Average steps = 0.5 * ( 1 - 1 / (1-L) ) = 0.5 * ( 1 - 1 / ( 0.25) ) = 2.5
Tags: Hashtables
Author: kai (kp664)
Avg Rating: 4.0000
Avg Difficulty: 1.2000
Total ratings: 5



ID: 4256224
Created: 11:09pm, 05 Jan 2020
The result of each pass of a sorting algorithm is shown below:Initial list: 3 4 2 1 7 5 8 61st pass: 2 1 3 4 7 5 8 62nd pass: 1 2 3 4 7 5 8 63rd pass: 1 2 3 4 5 6 7 84th pass: 1 2 3 4 5 6 7 8Which sorting algorithm was used?
a) Insertion sort
b) Bubble sort
*c) Quick sort
d) Selection sort
e) Merge sort
Explanation: It just is, 3 was used as a pivot in the 1st pass, 2 and 4 used in 2nd pass, 7 used in 3rd pass, 5 used in 4th pass, and then the algorithm knows the sort is complete.
Tags: Sorting
Author: joetucker (jt2039)
Avg Rating: 3.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4256220
Created: 11:06pm, 05 Jan 2020
Which data structure can be implemented to enable both adding at the beginning and removing at the end to have O(1) complexity?
*a) Ring Buffer
b) Rectangle Buffer
c) Box Buffer
d) Elliptical Buffer
e) Square Buffer
Explanation: Ring Buffer, also known as Circular Buffer,is a data structure that uses a single, fixed-size buffer as if it were connected end-to-endThe circular buffer is well-suited as a FIFO buffer
Tags: Lists
Author: ew568 (ew568)
Avg Rating: 3.8300
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4256216
Created: 11:00pm, 05 Jan 2020
What would be the path of a pre-order search on the following tree? 5 / \ 3 7 / \ \ 2 6 9 / \ \ \ 1 4 8 10
*a) 5, 3, 2, 1, 4, 6, 8, 7, 9, 10.
b) 1, 2, 4, 3, 6, 8, 5, 7, 9, 10.
c) 1, 4, 2, 8, 6, 3, 10, 9, 7, 5.
d) 5, 3, 7, 2, 6, 9, 1, 4, 8, 10.
Explanation: Pre-order follows Root,Left,Right. This means you add the root node first then go left then right. So you follow the tree down to the left adding each root node then you move back up until a right path is available then you move to the right path and repeat till complete.B is Inorder. (Left, Root, Right).C is Post-order. (Left, Right, Root).D is Level-Order. (Depth first left to right).
Tags: Search, Trees
Author: tp648 (tp648)
Avg Rating: 4.1400
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4256213
Created: 10:58pm, 05 Jan 2020
Which data structure has nodes, leaves and branches?
*a) Tree
b) Array
c) Linked List
d) Doubly Linked List
e) Heap
Explanation: Linked lists contain nodes but not the other two, a tree contains all three
Tags: Lists, Sorting, Trees
Author: jb2687 (jb2687)
Avg Rating: 3.4500
Avg Difficulty: 0.0000
Total ratings: 11



ID: 4256209
Created: 10:56pm, 05 Jan 2020
Which data structure is a degenerate binary tree most similar to?
a) Array
b) ArrayList
c) Heap
*d) Linked List
e) Hash Table
Explanation: A degenerate tree is a binary tree in which each parent node has at most one child node each. This creates a tree with a height of n instead of log(n), and the tree behaves like a linked list.
Tags: ADTs, Trees
Author: kai (kp664)
Avg Rating: 3.8000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4256208
Created: 10:55pm, 05 Jan 2020
Searching a linked list starts from which position?
a) Tail
b) Any point
*c) Head
d) 73rd point
Explanation: It is impossible to access nodes of a linked list without going through the first
Tags: Lists, Search
Author: jb2687 (jb2687)
Avg Rating: 3.5000
Avg Difficulty: 0.0714
Total ratings: 14



ID: 4256204
Created: 10:52pm, 05 Jan 2020
Which sort doesn't have a best time complexity ofO(n log(n)).
a) Quick Sort
b) Heap Sort
c) Merge Sort
*d) Bubble Sort
Explanation: Bubble Sort has a complexity of O(n)
Tags: Sorting, Complexity
Author: jb2687 (jb2687)
Avg Rating: 3.7800
Avg Difficulty: 0.4444
Total ratings: 9



ID: 4256203
Created: 10:52pm, 05 Jan 2020
(529 - x) is divisible by 29, x>0. What is the smallest possible value of x?
a) 28
*b) 5
c) 0
d) 6
e) 24
Explanation: Fermats little theorem, if p is prime, ap=a mod p
Author: joetucker (jt2039)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256199
Created: 10:50pm, 05 Jan 2020
What type of partial order does this represent?(<H) = (=V) ? (<S) ? (=V)
*a) Horizontal order
b) Discordant order
c) Concordant order
Explanation: https://en.m.wikipedia.org/wiki/Tree_(data_structure)
Tags: Trees
Author: abt (abt32)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256198
Created: 10:48pm, 05 Jan 2020
Given the following tree, what would be the result of a post-order traversal?
a) 3, 2, 1, 5, 4, 6
b) 1, 2, 3, 5, 4, 6
*c) 1, 2, 4, 6, 5, 3
d) 6, 4, 1, 5, 2, 3
Explanation: Post-order traversal visits the left-hand child node, then the right-hand child node, before visiting the parent node.
Tags: Trees
Author: kai (kp664)
Avg Rating: 3.7500
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4256196
Created: 10:47pm, 05 Jan 2020
This abstract data structure uses nodes to contains its elements, has a pointer that indicates its head, or leading, element (and potentially one to indicate its tail element) and each of its nodes contains a reference to both the node ahead of it and behind it. What is it?
a) Stack
b) Linked List
*c) Doubly Linked List
d) Array
e) Heap
Explanation: It is a doubly linked list - seeWeek3b-TFLinkedlistsedit on Moodle.
Tags: ADTs, Lists
Author: gh574 (gh574)
Avg Rating: 3.7500
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4256194
Created: 10:47pm, 05 Jan 2020
Jimmy owns a large selection of vinyl records. He has just inherited more records from his recently deceased mother.His mother had the exact amount of records that Jimmy has, doubling Jimmy's collection.Jimmy has decided that now is a good time to finally sort his collection by arranging the records in alphabetical order, whilst adding the new ones.Jimmy has some preferences when it comes to sorting the collection:- He doesn't have any more space for sorting. He has enough storage for all of the records, no more, no less.- With a large number of items to sort, he wants this done as fast as possible.
a) Heap sort
b) Bubble sort
c) Insertion sort
*d) Quick sort
e) Merge sort
Explanation: Heap sort:- More storage is required for sorting.Bubble sort:- Not great for larger quantities of data.- Not good for real life situations.Insertion sort:- Tends to not be as good for larger quantities of data.Merge sort:- Requires more space for sorting.Quick sort is best because it doesn't require any more space, and is the fastest algorithm that deals with large quantities well.
Tags: Sorting
Author: trk26 (trk26)
Avg Rating: 4.2000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4256193
Created: 10:46pm, 05 Jan 2020
Which of the following are the correct balance factors for the following tree? 6 / \ 3 10 / \ 2 4 \ 5And is it balanced?
a) -2 / \ 1 0 / \0 1 \ 0And the tree is balanced.
b) -1 / \ 1 0 / \0 1 \ 0And the tree is balanced.
*c) -2 / \ 1 0 / \0 1 \ 0And the tree is not balanced.
d) -2 / \ 2 0 / \ 0 1 \ 0And the tree is not balanced
Explanation: The balance factor is the maximum length of the chain from the right node minus the maximum length of the chain from the left node.For example the root node 6 has the longest right chain as just 10 but the longest left chain of 3, 4, and 5. Meaning its balance factor is -2.Secondly a tree is only balanced when no balance factor is greater than 1 or less than -1. So as this tree has the balance factor of -2 for its root node it is not balanced.
Tags: Trees
Author: tp648 (tp648)
Avg Rating: 4.4000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4256191
Created: 10:45pm, 05 Jan 2020
What sorting algorithm is for the code belowfor (i = 1; i < n; i++){key = arr[i];j = i - 1;while (j >= 0 && arr[j] > key){arr[j + 1] = arr[j];j = j - 1;}arr[j + 1] = key;}}
*a) Insertion sort
b) Bubblesort
c) Heap sort
d) Quicksort
Explanation: 2019 Lecture 20
Tags: Sorting
Author: abt (abt32)
Avg Rating: 3.6700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4256190
Created: 10:43pm, 05 Jan 2020
What is the runtime for this section of code?for(int i=1; i<n; i*=2) for(int j=0; j<10; j++) System.out.println("any pickles?");
a) ?(n)
*b) ?(log(n))
c) ?(n^2)
d) ?(nlog(n))
Explanation: In the first for loop we are multiplying i by two each time giving us a runtime of ?(log(n)), this would be the same if we started with a large i and halved it each time.We can ignore the second for loop as it relies on a constant.
Tags: Complexity
Author: a4k (ajl96)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4256188
Created: 10:41pm, 05 Jan 2020
If 617 � x is divisible by 17.What is the value of x?
a) 7
*b) 6
c) 16
d) 5
e) 17
Explanation: Application of Fermat's Little Theorem (not expressed in the notation of modular arithmetic).17 | 617 � 6Expessed in the notation of modular arithmetic:617= 6 ( mod17 )
Tags: Cryptography
Author: ew568 (ew568)
Avg Rating: 4.2500
Avg Difficulty: 1.1250
Total ratings: 8



ID: 4256187
Created: 10:40pm, 05 Jan 2020
Which of the following statements regarding complexity isnot correct?
a) The upper bound g(n) = ?(f(n)) if and only if there are constraints c > 0 and n0 > 0 so that for all n > n0, g(n)= cf(n)
b) The algorithm:k = n;while (k > 1){ sum++; k = k/2;}Has complexity O(log(n))
*c) When computing the complexity of multi-input algorithms, we only need to consider the size of the largest input
d) The algorithm:for ( int i = 0; i < n; i++ ) for ( int j = 2; j < n*n; j++ ) sum++;Has complexity O(n3)
e) A function with complexity O(log(n)) has a slower rate of growth than a function with complexity O(sqrt(n))
Explanation: C is not correct - We must consider both input sizes in multi-input algorithms
Tags: Complexity
Author: cs2318 (cs2318)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 4
==> Comment 1: A is also incorrect - this is the definition of O(f(n)) (by: jwb59 [jwb59])



ID: 4256183
Created: 10:38pm, 05 Jan 2020
Which statement regarding trees is irrelevant?
a) A tree with a node which has a balancing factor of magnitude greater than 2, is invalid
b) Red-Black and AVL trees are both types of binary search trees.
c) A binary search tree must have 1 less than a power of 2 nodes to be valid.
*d) In the worst case, a tree's search is of complexity O(log n).
Explanation: If all the nodes are linked, as a linked list, then searching must be linear.Red-Black trees are not binary search trees.The other 2 responses do not specify that they are balanced tress, so balance factors are irrelvant to validity.The other 2 responses do not specify that they are balanced tress, so the number of nodes are irrelvant to validity.
Tags: ADTs
Author: km876 (km876)
Avg Rating: 2.6700
Avg Difficulty: 1.6667
Total ratings: 3



ID: 4256182
Created: 10:36pm, 05 Jan 2020
What traversal method should be used to print the elements of a binary search tree in ascending order?
*a) In-order traversal
b) Post-order traversal
c) Pre-order traversal
d) Level order traversal
Explanation: In a binary search tree, for any given node, values in its left subtree must be less than the value of the node and values in the right subtree must have values greater than or equal the node (Week8a 2019, Slide 4).Therefore to print the values in order, we must use in order traversal (Week8a 2019, Slide 6)
Tags: Trees
Author: wja25 (wja25)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4256292
Created: 10:34pm, 05 Jan 2020
The time complexity to insert an element at the end of an array is O(1)Where 'n' is the length if the array
a) Yes
*b) No
Explanation: To add an element to the end of an array a new array of size n+1 needs to be allocatedThis new array needs to have n elements coppied to it from the original arrayLastly the new element is inserted into the last position of the new arrayThe time complexity is therefore O(n)
Tags: Complexity
Author: cm2259 (cm2259)
Avg Rating: 1.6700
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256175
Created: 10:26pm, 05 Jan 2020
Where should the value "8" be inserted into the following binary tree? 9 / \ 3 11 / \ / \1 5 10 13 / \ / \ A B C D
a) Position A
*b) Position B
c) Position C
d) Position D
Explanation: 8 < 9, so it will be on the left sub-tree of the root. Then 8 > 3, so it will be on the right branch of that node. Finally 8 > 5 so it is the right child of 5.
Tags: Trees
Author: gh574 (gh574)
Avg Rating: 3.4000
Avg Difficulty: 0.0000
Total ratings: 5



ID: 4256174
Created: 10:25pm, 05 Jan 2020
In a Doubly-Linked List, each time we want to insert or delete a new node we need to update three sets of references but in what order ?We do not want to store any pointer beforehand, nor lose any part of the linked list.
a) 1) Current node's next pointer2) New node's next and previous pointer3) Following node's previous pointer
*b) 1)New node's next and previous pointer2) Following node's previous pointer3)Current node's next pointer
c) 1) Following node's previous pointer2) New node's next and previous pointer3) Current node's next pointer
d) 1) Following node's previous pointer2) Current node's next pointer3)New node's next and previous pointer
Explanation: "2019_TFLinkedlistsedit" page 12My question aimed to keep in mind that if you change a pointer value to another, the address previously stored can be lost.
Tags: Lists
Author: bertrand (bt502)
Avg Rating: 3.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256173
Created: 10:24pm, 05 Jan 2020
Consider the functions f(n) = log(n), g(n) = 10*log(n), h(n) = 100*log2(n), y(n) = n. Which of the following statements is true?
a) f =O(g), h =O(y)
b) f =?(g), h =?(y)
*c) f = O(g), h = O(y)
d) None of the above.
Explanation: Week2b - Powerpoint, slides 5 & 12.
Tags: Complexity
Author: jjf39 (jjf39)
Avg Rating: 3.5000
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256171
Created: 10:23pm, 05 Jan 2020
The following algorithm has time complexity O(f(n))int count = 0;for(int i = 0; i<n; i++){ for(int j = 0; j<(10*n); j++){ count++; } }for(int k = 0; k<n; k++){ count++; }return count;what is f(n)?
a) 10n2+n
b) n2+n
c) 10n2+n+2
*d) n2
e) n2+2
Explanation: n2 grows faster than n, so in big-O notation the time complexity 'n' from the second loop is overshadowed by the 'n^2' from the first loop, as is the complexity for initializing count and returning count. The scalar 10 is irrelevant by definition of big-O .
Tags: Complexity
Author: joetucker (jt2039)
Avg Rating: 3.5000
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256170
Created: 10:23pm, 05 Jan 2020
Which of the following is the output of Pre-order traversal when applied to the tree:
a) 23, 24, 30, 33, 36, 37, 40, 52, 53, 57
*b) 24, 23, 40, 33, 30, 36, 37, 53, 52, 57
c) 23, 30, 37, 36, 33, 52, 57, 53, 40, 24
d) 24, 23, 40, 33, 53, 30, 36, 52, 57, 37
Explanation: Depth First Traversals:(a) Inorder (Left, Root, Right) : 4 2 5 1 3(b) Preorder (Root, Left, Right) : 1 2 4 5 3(c) Postorder (Left, Right, Root) : 4 5 2 3 1
Tags: Search, Trees
Author: fola (fo264)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256168
Created: 10:20pm, 05 Jan 2020
In a complete binary tree, the number of nodes in a tree of depth n equals
a)
b)
*c)
d)
Explanation: 2019 Week7bslide 11
Tags: Trees
Author: tareq (mtz24)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256167
Created: 10:17pm, 05 Jan 2020
Is the following tree an AVL Tree
a) Yes
*b) No
Explanation: NoAn AVL tree is a self-balancing binary search tree. The balance factor of each node is defined byand
Tags: Trees
Author: fola (fo264)
Avg Rating: 3.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256165
Created: 10:16pm, 05 Jan 2020
Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3The tree is balanced with the Right Left case, what is the output if we traverse the newly balanced tree using in order traversal?
a) 5, 3, 1, 4, 6
*b) 1, 3, 4, 5, 6
c) 1, 3, 5, 4, 6
d) 1, 4, 3, 6, 5
e) 6, 5, 4, 3, 1
Explanation: The balanced tree should look like this: 5 / \ 3 6 / \1 4So the order printed is 1, 3, 4, 5, 6Explanation for post order traversal is described on slide 22 Week7b-Trees1File 2019
Tags: Trees
Author: trk26 (trk26)
Avg Rating: 4.6700
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4256162
Created: 10:12pm, 05 Jan 2020
Let the time taken to execute a heap sort be T(n) (where n is the number of elements to be sorted).Which of the following is true?
a) T is O(n2),Tis ?(2n), and T is O(2n)
b) T is ?(n), T is O(n), and T isO(nlog(n))
*c) T is O(log(n)), T is O(n), and T is O(2n)
d) T is O(1), T is ?(n), and T is O(n)
e) None of the above
Explanation: T is?(n1.25) (approx)O is a lower bound for complexity, O an upper bound and? an exact boundHence:A is wrong asO(n2) is too high +?(2n) !=?(n1.25)B is wrong as?(n)!= ?(n1.25) +O(n) is too lowC is right as both theO are less than n1.25 and the O is above itD is wrong for the same reasons as BComplexity - 2019 Week2b Powerpoint [Slide 5]
Tags: Sorting, Complexity
Author: pw566 (pw566)
Avg Rating: 3.6700
Avg Difficulty: 1.6667
Total ratings: 3



ID: 4256161
Created: 10:09pm, 05 Jan 2020
Which of these adaptations would not allow the longest path to be found using Djikstra's algorithm?
a) Multiplying the weights by -1.
b) Taking the maximum weight away from each of the weights.
c) Taking each weight away from the maximum costs
*d) Reciprocating each weight.
Explanation: If a graph has an edge with negative or zero weight, this would cause issues.
Tags: Graphs
Author: km876 (km876)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256155
Created: 10:01pm, 05 Jan 2020
What tree traversal is generates the output: 75, 63, 83, 34, 65, 91, 23, 38, 90, 94 from the following tree:
a) Post-order traversal
*b) Level-order traversal
c) Post-order traversal
d) In-order traversal
Explanation: Depth First Traversals:(a) Inorder (Left, Root, Right) : 4 2 5 1 3(b) Preorder (Root, Left, Right) : 1 2 4 5 3(c) Postorder (Left, Right, Root) : 4 5 2 3 1
Tags: Trees
Author: fola (fo264)
Avg Rating: 4.6300
Avg Difficulty: 0.0000
Total ratings: 8



ID: 4256154
Created: 10:00pm, 05 Jan 2020
Which one of the following is NOT a cryptographic tool?
a) Collision-Resistance
b) Pre-image Resistance
c) 2nd Pre-image Resistance
*d) 3rd Pre-image Resistance
Explanation: 3rd Pre-image is not considered, and is irrelevant.
Tags: Cryptography
Author: km876 (km876)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4256150
Created: 9:56pm, 05 Jan 2020
Calculate the value of Dijkstra(A) from A to D
a) 7
b) 6
*c) 5
d) 4
Explanation: Using Dijkstra's algorithm, the shortest possible route, the correct route is: A->B->C->D which takes 5 units.
Tags: Applications, Search, Complexity
Author: wilko (sw2404)
Avg Rating: 3.5000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4256148
Created: 9:54pm, 05 Jan 2020
Which sorting algorithm best fits this description:StableBest case: (n2)Average case: (n2)Worst case: (n2)
a) Quick Sort
b) Pigeonhole Sort
*c) Bubble Sort
Tags: Sorting
Author: fola (fo264)
Avg Rating: 3.4000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256146
Created: 9:50pm, 05 Jan 2020
An algorithm of complexity ?(2^n) takes 2 seconds to run at n=4. How long will it take to run at n=10?
a) 5 seconds
*b) 128 seconds
c) 256 seconds
d) 1024 seconds
e) 32 seconds
Explanation: (2^4)/2 = 8. (2^10)/8 = 128
Tags: Complexity
Author: joetucker (jt2039)
Avg Rating: 4.3800
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4256143
Created: 9:48pm, 05 Jan 2020
What is the worst case time complexity of a heap sort (2019 week 7a slide 5)
a) O(n)
*b) O(n*log(n))
c) O(n*log^2(n))
d) O(n^2)
e) O(n^2 * log(n))
Explanation: O(n*log(n)) Is the both the best and worst case time complexity of a heap sort
Tags: Complexity
Author: ram72 (ram72)
Avg Rating: 5.0000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256138
Created: 9:42pm, 05 Jan 2020
Which of the following sorting algorithms is unstable and has average time complexityT(n log(n))?
a) Merge Sort
b) Bubble Sort
c) Insertion Sort
d) Selection Sort
*e) Quick Sort
Explanation: Merge Sort - stable,T(n log(n))Bubble Sort - stable, ?(n^2)Insertion Sort -stable, ?(n^2)Selection Sort - unstable, ?(n^2)Quick Sort - unstable,T(n log(n))
Tags: Sorting
Author: ew568 (ew568)
Avg Rating: 4.0000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4256134
Created: 9:36pm, 05 Jan 2020
Which statement is always true for a height-balanced binary tree?
*a) The difference of depth between any two leaves is 1 or 0.
b) For each node, the number of inner nodes on the left sub-tree and the number of inner nodes on the right sub-tree only differ by 1 or 0.
c) There will be k-1 leaves if the height of the tree is k.
d) There will be k-1 or k leaves if the height of the tree is k.
Explanation: Having a height-balanced tree does not imply that it is weight balanced and so (B) is not always correct. C and D can be false or true depending on the tree so can be discarded.
Tags: Trees
Author: wilko (sw2404)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4256125
Created: 9:25pm, 05 Jan 2020
Whichisn'tan advantage of B-tree usage for databases?
a) B-trees use a hierarchical index to minimise the number of reads.
b) B-trees keep their index balanced with a recursive algorithm.
*c) Leaf and non-leaf nodes are the same size
d) B-trees keep keys in sorted order, allowing for faster, sequential traversing.
Explanation: Leaf and non-leaf nodes are varying sizes, this complicates data storage within the database.
Augmented explanation 1: (by: wd371 [wd371])
Tags: Search, Trees
Author: wilko (sw2404)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0
==> Comment 1: https://en.wikipedia.org/wiki/B-tree NICE QUESTIONSAdvantages of B-tree usage for databasesThe B-tree uses all of the ideas described above. In particular, a B-tree:keeps keys in sorted order for sequential traversinguses a hierarchical index to minimize the number of disk readsuses partially full blocks to speed insertions and deletionskeeps the index balanced with a recursive algorithm (by: wd371 [wd371])



ID: 4256124
Created: 9:25pm, 05 Jan 2020
What is the time complexity of the following function:int f(int n){ int count = 0; for(int i = 0; i<=n; i++){ for(int j = i; j>0; i++){ j/=2; count++; } } return count;}
*a) n
b) nlogn
c) 2n
d) n2
e) logn
Explanation: Note that in the second for loop we increase i as well so i increases every execution.We need roughly n executions of the inner loop for i to reach n, then the loops stop.So overall time complexity of the function is n.
Tags: Complexity
Author: zn254 (zn254)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256120
Created: 9:16pm, 05 Jan 2020
Consider an Open Hash Table with 7 buckets and hash function h(x) = 3x % 7. What would the table look like after inserting the following elements: 8,3,15,22,9 in that order?
a) null, null, 3->null, 8->null, 15->null, 22->null, 9->null
b) null, null, 9->null, 24->45->66->null, null, null, 27->null
c) null, null, 9->null, 24->null, 45->null, 66->null, 27->null
*d) null, null, 3->null, 8->15->22->null, null, null, 9->null
Explanation: The elements8,3,15,22,9 correspond to the outputs of the hash function 3,2,3,3,6 respectively. Meaning that 3 is inserted into bucket 2, 9 is inserted into bucket 6 and 8,15 and 22 are inserted into the linked list at bucket 3.Notes: Week10b - Hashtablesall slides 23-26.
Tags: Hashtables
Author: jjf39 (jjf39)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256185
Created: 9:11pm, 05 Jan 2020
Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3What is the correct case for balancing and what is the output if we traverse the tree using post order traversal?
a) Right Left caseOutput of 1, 3, 4, 5, 6
b) Left Left caseOutput of 1, 3, 4, 5, 6
*c) Right Left caseOutput of 1, 4, 3, 6, 5
d) Left Right caseOutput of 5, 3, 1, 4, 6
e) Left Right caseOutput of 2, 4, 3, 6, 5
Explanation: The balanced tree should look like this: 5 / \ 3 6 / \1 4This is done by doing a right rotation about the node '4': 5 / \ 1 6 \ 3 \ 4Then rotating about left about node '1' to get the balanced tree. Making it the case of Right Left.Explanation for post order traversal is described on slide 24 Week7b-Trees1File 2019
Tags: Trees
Author: trk26 (trk26)
Avg Rating: 2.0000
Avg Difficulty: 1.5000
Total ratings: 2



ID: 4256104
Created: 8:53pm, 05 Jan 2020
If an algorithm of order O( sqrt(n) ) takes 4 seconds to run at n = 50, what is the expected time for n = 200?
a) 2 seconds
b) 4 seconds
*c) 8 seconds
d) 16 seconds
e) 64 seconds
Explanation: for O( sqrt(n) ):increasing n by a factor of 4 increases time by a factor of 2
Tags: Complexity
Author: benroderick99 (br423)
Avg Rating: 4.1700
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4256100
Created: 8:49pm, 05 Jan 2020
Which array function has a worst case time complexity which is higher than its average case?Key:o = objecti = index
a) get(i)
*b) add(o)
c) insert(o, i)
d) remove(i)
e) find(o) for unsorted array
Explanation:
Tags: Lists, Complexity
Author: sr2058 (sr2058)
Avg Rating: 4.2900
Avg Difficulty: 1.2857
Total ratings: 7



ID: 4256099
Created: 8:48pm, 05 Jan 2020
What information is updated when you insert a node into a singly linked list?
a) The next pointer of the previous nodeThe previous pointer of the new nodeThe next pointer of the new node
b) The next pointer of the previous nodeThe element of the previous nodeThe next pointer of the new node
*c) The next pointer of the previous nodeThe next pointer of the new node
d) The next pointer of the previous nodeThe previous pointer of the new nodeThe next pointer of the new nodeThe previous pointer of the next node
Explanation: singly linked list nodes do not have previous pointers
Tags: Lists
Author: benroderick99 (br423)
Avg Rating: 3.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256108
Created: 8:44pm, 05 Jan 2020
What is meant by a sorting algorithm being 'stable'?
a) The sort always takes the same amount of time for the same amount of data
b) The sort has time complexity of O(n)
*c) The sort takes the initial order of the data into account when sorting.
d) The sort uses the minimum amount of swaps possible
Explanation: In a stable algorithm, the initial order of the data is taken into account and data of equal values are kept in the same order.
Tags: Sorting
Author: benroderick99 (br423)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4256093
Created: 8:37pm, 05 Jan 2020
The following tree is a balanced AVL binary tree. True or False? 98 / \ 12 101 / \ \ 9 31 102 / \3 10
*a) True
b) False
Explanation: The tree satisfies all requirements of a balanced AVL binary tree. See lecture slides 2019 Week8b - Trees3.
Tags: Trees
Author: zn254 (zn254)
Avg Rating: 2.6000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256091
Created: 8:35pm, 05 Jan 2020
Does this array represent a valid min heap?[3, 10, 6, 17, 43, 50, 8]
*a) Yes
b) No
Explanation: Week5b, slide 4
Tags: Sorting
Author: rp696 (rp696)
Avg Rating: 2.0000
Avg Difficulty: 1.5000
Total ratings: 2



ID: 4256087
Created: 8:25pm, 05 Jan 2020
Consider a closed hash table where h(x) = x% 8 where the index is 0 through 7. When inserting the following data, which value occupies the place indexed 4?27, 145, 87, 45, 23, 56, 79, 135
a) 45
b) 27
*c) 56
d) 145
e) 135
Explanation: Inserting each number in order gives that 23 takes slot 2, followed by 145 in slot 1. Using the remainder when these are divided by 8.Next 87 takes slot 7, 45 takes slot 5. Then 23 would also be in 7 so we traverse the list to the next space which we find at 2. 56 occupies 0, then 79 would also take 7 but we traverse putting it in place 4 so is the required term
Tags: Sorting, Hashtables
Author: lm2066 (lm2066)
Avg Rating: 2.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4256084
Created: 8:24pm, 05 Jan 2020
What is the result of using a breadth first traversal on this graph, printing every node visited?
a) A, C, D, B, E
b) E,D,B,C,A
c) A,B,D,E,C
*d) A,B,C,D,E
e) None of the above
Explanation: 2019 Lecture 17- Graphs 1.
Tags: Graphs
Author: aisd20 (aisd20)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256083
Created: 8:24pm, 05 Jan 2020
Which of the following statements is true?
a) Merge sort is always faster than insertion sort.
b) Worst and average case time complexity for quick sort is n2.
*c) Best, average and worst case time complexity for selection sort is n2.
d) Worst case time complexity for merge sort is n2.
Explanation: Insertion is faster that merge sort if the data is sorted.Only worst case of quick sort is n2 . The average is nlogn.Merge sort always has nlogn time complexity.
Tags: Sorting, Complexity
Author: zn254 (zn254)
Avg Rating: 3.8600
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4256081
Created: 8:23pm, 05 Jan 2020
A closed hash function h(x) = x%13 has slots 0 through to 12. When the elements (2, 55, 4, 26, 11, 14, 37, 30, 43, 40, 44, 6, 23) are inserted into the Hash table, in what slots are 43, 6 and 44 respectively?
a) 4th, 6th, 5th
*b) 6th, 9th, 8th
c) 6th, 8th, 4th
d) 4th,5th,6th
e) 8th, 12th, 11th
Explanation: 2%13 = 2. So 2 is in slot 2.55%13 = 3. So 55 is in slot 3.4%13 = 4. So 4 is in slot 4.26%13 = 2. So 26 is in slot 0.11%13 = 2. So 11 is in slot 11.14%13 = 1 .So 14 is in slot 1.37%13 = 11. Slot 11 is already filled. So 37 is in slot 12.30%13= 4. Slot 4 is already filled. So 30 is in slot 5.43%13= 4. Slot 4 is already filled, slot 5 is already filled. So 43 is in slot 6.40%13= 1. Slot 1 is filled. All of the subsequent slots are filled until slot 7. 40 is in slot 7.44%13= 5. Slot 5 is filled. Slots 6 and 7 are filled. So 44 is in slot 8.6%13= 6. Slot 6 is filled. All ofof the subsequent slots are filled until slot 9. 6 is in slot 9.23%13= 10. 23 is in slot 10.
Tags: Hashtables
Author: io272 (io272)
Avg Rating: 4.3300
Avg Difficulty: 1.6667
Total ratings: 3



ID: 4256077
Created: 8:09pm, 05 Jan 2020
Which binary tree is correct for the sequences below?In-order : B, A, D, C, Epre-order : A, B, C, D, E
a) A / \ B C / \D E
*b) A / \ B C / \ D E
c) E / \ B C / \ D A
d) A / \ B E / \ D C
e) A / \ E C / \ F B
Explanation: In-order:a) DBEAC*b) BADCEc) BEDCAd) DBCAEe) EAFCBpre-ordera) ABDEC*b) ABCDEc) EBCDAd) ABDCEe) AECFB
Tags: Trees
Author: usernamej (je520)
Avg Rating: 4.2200
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4256074
Created: 8:01pm, 05 Jan 2020
Which of the following sorting algorithms has the same best, average and worst time complexity (no matter what the data is)
a) Bubble sort
b) Quick sort
*c) Merge sort
d) Insertion sort
Explanation: Bubble sort and Insertion sort:Average and worst case time complexity: n^2Best case time complexity: nMerge sort:Best, average and worst case time complexity: nlognQuick sort:Worst case time complexity: n^2Average and best case time complexity: nlogn
Tags: Sorting, Complexity
Author: zn254 (zn254)
Avg Rating: 3.8000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256156
Created: 7:59pm, 05 Jan 2020
This AVL Tree is unbalanced, which case is it in? 10 / \ / \ 5 15 / \ / \ 1 7 / / 6
a) L - L
*b) L - R
c) R - R
d) R - L
Explanation: The root node is unbalanced to the left. The balance of the root nodes left child, is biased to the right.
Tags: Trees
Author: a4k (ajl96)
Avg Rating: 3.8000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256070
Created: 7:52pm, 05 Jan 2020
What is the result of ?(n2)+?(n)?
a) ?(n)
*b) ?(n2)
c) ?(n2+n)
d) ?(n3)
Explanation: the bigger function dominates - Week2b, slide 6
Tags: Complexity
Author: rp696 (rp696)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 7



ID: 4256069
Created: 7:52pm, 05 Jan 2020
In an internal node of a 2-3 B-tree, the number of keys will indicate the separation of subtrees.For 3 child nodes of an internal node of this 2-3 B-Tree, 2 keys will be used, say X1 and X2.Which of the following statements, is correct?
*a) The far-left subtree's values will all be less than X2The far-right subtree's values will all be greater than X2
b) The far-left subtree's values will all be less than X1The far-right subtree's values will all be less than X2
c) The far-left subtree's values will all be greater than X1The far-right subtree's values will all be greater than X2
d) The far-left subtree's values will all be greater than X2The far-right subtree's values will all be less than X2
Explanation: A 2-3 B Tree is a B tree with 2 or 3 children nodes for each internal node.An internal node with 3 child nodes in a B tree has 2 keys.Say these 3 child nodes are called tree 1, tree 2 and tree 3 going from left to right respectively.These keys, say X1 and X2 are created such that:All values in the tree 1 are less than X1.All values in the tree 2 are between X1 and X2.All values in the tree 3 are greater than X2.
Tags: Sorting, Applications, Trees
Author: harryjaketullett (ht545)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4256068
Created: 7:49pm, 05 Jan 2020
Which of the following is the correct post-order traversal of the binary tree shown below? 2 / \ 31 14 / \ / \12 7 25 16
a) 2, 31, 14, 12, 7, 25, 16
*b) 12, 7, 31, 25, 16, 14, 2
c) 2, 31, 12, 7, 14, 25, 16
d) 12, 31, 7, 2, 25, 14, 16
e) 12, 7, 25, 16, 31, 14, 2
Explanation: A - Random generation of the numbersB - Post-order (left, right, root)C - Pre-order (root, left, right)D - In-order (left, root, right)E - Reading values from left to right, starting from the bottom row
Tags: Search, Trees
Author: ew568 (ew568)
Avg Rating: 3.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256067
Created: 7:45pm, 05 Jan 2020
Suppose we store 50 elements in an Array List, a Singly Linked List and a Probabilistic Skip List. Which of the following statements is false?
a) The Linked List is faster than the Array List at inserting an element at the 20th position in the list.
b) The Skip List will have worst case O(n) when getting an element.
*c) The Linked List is faster than the Array List at getting the 30th element in the list.
d) None of the above.
Explanation: A. Week3b Slide 16B. Week3b Slide 13C. Week3b Slide 13
Tags: Lists
Author: jjf39 (jjf39)
Avg Rating: 4.8000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4256066
Created: 7:41pm, 05 Jan 2020
Consider the following statements about the following functions: , , and .Which one of the following statements is correct?
a) is of order at most and is of order at most
*b) is of order at least and is of order at most
c) is of order at most and is of order at most
d) is of order exactly
e) None of the above are correct
Explanation: a) is incorrect, as even though f is of order at most g, it is incorrect to say that f is of order at most k.b) is correct.c) is incorrect, as although h is of order at most f, it is incorrect to say that g is of order at most f.d) is incorrect, as for f to be of order exactly k, f needs to be of order at most k (which it does not satisfy).e) is incorrect.The hierarchy of growth rates can be found on slide 12 of the week 2b powerpoint under lectures on moodle.
Tags: Complexity
Author: jj716 (jj716)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 3
==> Comment 1: Helpful question! (by: io272 [io272])



ID: 4256065
Created: 7:41pm, 05 Jan 2020
Which type of traversal is described by the following steps?1. process the nodes in the left subtree2. process the nodes in the right subtree3. process the current node
a) pre-order traversal
b) in-order traversal
*c) post-order traversal
d) level order traversal
Explanation: Week7b - Trees1, slide 24
Tags: Trees
Author: rp696 (rp696)
Avg Rating: 5.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256062
Created: 7:33pm, 05 Jan 2020
Consider the following array[53, 165, 202, 129, 32, 85, 98, 177, 195, 71]A Shellsort algorithm is applied. In the first iteration of the array, a '5-sort' is performed.What is the order of the array after this first iteration?
a) [53, 98, 71, 129, 32, 85, 165, 202, 195, 177]
*b) [53, 98, 177, 129, 32, 85, 165, 202, 195, 71]
c) [32, 98, 177, 129, 53, 85, 165, 202, 195, 71]
d) None of the above
Explanation: 2019. Week5a-Powerpoint slide 4
Tags: Sorting, Applications
Author: ashwin (ap2527)
Avg Rating: 5.0000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4256061
Created: 7:33pm, 05 Jan 2020
What is the average Big Theta time complexity for Quicksort?
*a)
b)
c)
d)
e)
Explanation: See 2019 lecture 4b slide 7.
Tags: Sorting
Author: lockiew (wl609)
Avg Rating: 4.6000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 4256059
Created: 7:28pm, 05 Jan 2020
What is considered a maximum height of a perfectly balanced search tree?
a) n
b) n/2
c) n2
*d) log(n)
e) log(n2)
Explanation: The maximum height is log(n) for a perfectly balanced search tree.See lecture notes - Week8b - Trees3 (1) - Slide 3
Tags: Trees
Author: harryjaketullett (ht545)
Avg Rating: 4.7500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256055
Created: 7:21pm, 05 Jan 2020
With a graph stored as an adjacency matrix, which of these would show you which vertices are exactly two edges apart?
a) Multiplying the matrix by its inverse
b) Multiplying the matrix by the identity matrix
*c) Multiplying the matrix by itself
d) Multiplying the matrix by itself twice
Explanation: A - this will give you the identity matrixB - this will give you the same matrix as beforeC - this will give you the vertices that are exactly two edges apart (2019 lecture 17 slide 11)D - this will give you the vertices that are exactly three edges apart
Tags: Graphs
Author: agr33 (agr33)
Avg Rating: 4.5700
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4256054
Created: 7:19pm, 05 Jan 2020
Consider the following algorithm with asymptotic time complexity O(f(n)).for (int i=0; i<20*n; i++) for(int j=0; j<n; j++) System.out.println("A");for (int i=1; i<n; i++) System.out.println("B");What is f(n)?
a)
b)
*c)
d)
e) None of the above.
Explanation: The correct answer is n^2 because the first double for-loop requires n^2 operations (despite the constant of 20 in the first for loop). The second for loop requires n operations. Hence the overall time complexity is n^2.Reference Week2b slide 6.
Author: fs489 (fs489)
Avg Rating: 4.5000
Avg Difficulty: 0.6000
Total ratings: 10



ID: 4256053
Created: 7:18pm, 05 Jan 2020
What characteristics of a binary tree would suggest that it is considered min-heap?
*a) The data in each node, call this node Xi, of the binary tree, is less than or equal to the data in Xi's children.The binary tree should also be considered complete.
b) The data in each node, call this node Xi, of the binary tree, is less than or equal to the data in Xi's children.
c) The data in each node, call this node Xi, of the binary tree, is less than the data in Xi's children.The binary tree should also be considered complete.
d) The data in each node, call this node Xi, of the binary tree, is less than the data in Xi's children.
Explanation: A minimum-heap binary tree is a complete binary tree such that value at every node is less than or equal to the values at its children.See (CM20254 - Week 5(b) Sorting (2) slide 4) for an example diagram of a min-heap tree.
Tags: Trees
Author: harryjaketullett (ht545)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4256051
Created: 7:14pm, 05 Jan 2020
What makes an XOR or memory-efficient doubly-linked list different from a standard doubly-linked list?
a) Only some of the nodes contain 2 pointers reducing memory used.
*b) Each node has only one pointer using the bitwise exclusive or combination of the previous and next pointers for that node allowing forward and backward traversal.
c) Each node uses a single pointer using bitwise OR operation of the previous and next node addresses.
d) A stack is maintained for the previously visited nodes on a singly linked list allowing forward and backward traversal.
e) None of the above.
Explanation: The memory efficient doubly linked list uses bitwise XOR (exclusive or) operation on the previous and next pointers to store both pointers as a single value. Traversal is accomplished by storing the previously visited node (unless on starting node when the previous value is 0) and XOR on this value with the current node pointer gives the next value. This same property of node1 XOR node2 = node3 can be reversed and therefore has the properties of a doubly linked list with reduced memory.
Tags: ADTs, Lists
Author: usernamej (je520)
Avg Rating: 2.5000
Avg Difficulty: 1.5000
Total ratings: 4
==> Comment 1: Which powerpoint is this in? (by: jwb59 [jwb59])



ID: 4256050
Created: 7:13pm, 05 Jan 2020
Which of these Linked List operations has a best, average and worst case time complexity of O(1)?
a) get(i)
*b) add(o)
c) insert(o, i)
d) remove(i)
Explanation: In order of Best, Worse, Average:get - 1, n, nadd - 1, 1, 1insert - 1, n, nremove - 1, n, nSee slide 10 of Linked List lecture
Tags: ADTs, Lists, Complexity
Author: jjh88 (jjh88)
Avg Rating: 3.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256047
Created: 7:01pm, 05 Jan 2020
Let , . What is the complexity in big O notation of ?
*a)
b)
c)
d)
e)
Explanation: Please see 2019 week 2b powerpoint slide 6.
Tags: Complexity
Author: lockiew (wl609)
Avg Rating: 4.2900
Avg Difficulty: 0.5000
Total ratings: 14



ID: 4256046
Created: 6:59pm, 05 Jan 2020
Which of the following is the pseudo code for insertion sort?
a) function sorterA (list) n : size of list for i from 1 to length[list]-1 min = i for j from i+1 to n if list[j] < list[min] then min = j; end if end for if indexMin != i then swap list[min] and list[i] end if end forreturn list
*b) function sorterB(list) for i from 1 to length[list]-1 value = list[i] j = i-1 while j >= 0 and list[j] > value list[j+1] = list[j] j = j-1 end while list[j+1] = value end forreturn list
c) function sorterC(list) for all elements of list if list[i] > list[i+1] swap(list[i], list[i+1]) end if end forreturn list
Explanation: sorterA is selection sort, sorterB is inserion sort and sorterC is bubble sort.
Tags: Sorting
Author: jjh88 (jjh88)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256042
Created: 6:50pm, 05 Jan 2020
What is 16^71 mod 71?16^71 = x mod71.x=?
*a) 16
b) 71
c) 15
d) 7
Explanation: By Fermat's little theorem:a^p= a mod pwhere a is any integer and p is any primethus 16^71= 16 mod 71
Tags: Cryptography
Author: emmafrichards (er575)
Avg Rating: 4.5700
Avg Difficulty: 1.1429
Total ratings: 7



ID: 4256040
Created: 6:46pm, 05 Jan 2020
Which of the following is the worst case time complexity of quick sort?
a)
b)
c)
*d)
Explanation: The worst case occurs when there is a sublist returned by partitioning routine of n-1. This would happen if the smallest or largest element in the list becomes the pivot. This would lead to recursive calls on lists with sizes one less than the previous list. This would repeat n-1 times until a list of size 1 is reached. Hence, a worst case of O().
Tags: Sorting, Complexity
Author: jjh88 (jjh88)
Avg Rating: 4.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4256036
Created: 6:43pm, 05 Jan 2020
Given the following tree, if we were to use post order traversal, what would the output be? Declan / \ Beth Finola / \ / \ Alex Corrie Emma Georgia
a) Declan, Beth, Finola, Alex, Corrie, Emma, Georgia
b) Declan, Beth, Alex, Corrie, Finola, Emma, Georgia
*c) Alex, Corrie, Emma, Georgia, Beth, Finola, Declan
d) Alex, Beth, Corrie, Declan, Emma, Finola, Georgia
Explanation: A is given by level order traversalB is given by pre order traversalC is given by post order traversalD is given by in order traversal
Tags: Applications, Trees
Author: emmafrichards (er575)
Avg Rating: 1.4000
Avg Difficulty: 0.4000
Total ratings: 5
==> Comment 1: Pretty sure your post order traversal is wrong, I think the correct order would be Alex, Corrie, Beth, Emma, Georgia, Finola, Declan. Process left subtree then right subtree then the current node. (by: jjf39 [jjf39])



ID: 4256033
Created: 6:40pm, 05 Jan 2020
In a hash table, what is it called when 2 or more elements would be assigned to the same bucket given their hash function?
a) Competition
b) Crash
*c) Collision
d) Clash
e) smash
Explanation: The condition when 2 or more elements are assigned to the same bucket is called a Collision.
Tags: Hashtables
Author: usernamej (je520)
Avg Rating: 4.6700
Avg Difficulty: 0.0000
Total ratings: 6



ID: 4256031
Created: 6:39pm, 05 Jan 2020
An algorithm takes 3 seconds to run with an input n = 10 and it takes 81 seconds to run with an input n = 30. If we run the algorithm with an input of n = 100, how long is it most likely to take?
a) 30,000s
b) 300s
*c) 3000s
d) 300,000s
e) None of the above.
Explanation: It takes 10 seconds to run with an an input of n = 3. When we increase n by a factor of 3, the time is takes increases by a factor of n^3 ( = 3^3 = 81). Hence this algorithm has time complexity n^3.If we increase n by a factor of 10, then the time it takes should increase by a factor of 10^3 = 1000. Therefore the correct answer is 3 x 1000 = 3000. Answer C).Reference Week2b Powerpoint Slide 15.
Tags: Applications, Complexity
Author: fs489 (fs489)
Avg Rating: 3.8300
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4256028
Created: 6:37pm, 05 Jan 2020
What fields are stored in the nodes of a doubly linked list?
*a) Two link fields and one data field - A pointer to the next node, a pointer to the previous node, and the element in the node.
b) One link field and one data field - A pointer to the next node and the element in the node.
c) One data field - The element in the node.
d) Two link fields - A pointer to the next node and a pointer to the previous node.
e) One link field - A pointer to the previous node.
Explanation: You can traverse a doubly linked list in both forwards and backwards directions ('next' and 'previous').
Tags: Lists
Author: ali12345 (aak209)
Avg Rating: 4.6700
Avg Difficulty: 0.0000
Total ratings: 6



ID: 4256025
Created: 6:35pm, 05 Jan 2020
Tom Nook wants to send a message to KK Slider using RSA encryption. What is the Public Key made of?p = a prime numberq = a prime numbern = pqe = a small exponent, where 1 < e < (p - 1)(q - 1)
a) p, q
b) e
*c) n, e
d) pq
Explanation: The public key is made of n and e
Tags: Cryptography
Author: lsg38 (lsg38)
Avg Rating: 3.8600
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4256024
Created: 6:34pm, 05 Jan 2020
What is the best case time complexity of insertion sort?
a) O(1)
b) O(n^2)
c) O(n^3)
*d) O(n)
Explanation: 2019 Lecture 4a, slide 17
Tags: Sorting, Complexity
Author: abt (abt32)
Avg Rating: 4.1700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4256022
Created: 6:33pm, 05 Jan 2020
What is/are the disadvantages of implementing Binary tree using normal arrays?
a) difficulty in finding the parent of a node
b) difficult to implement
c) difficulty in knowing children nodes of a node
*d) None of the above
Explanation: read more on implementation of binary tree using arrays
Tags: Trees
Author: mzit20 (mzit20)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256020
Created: 6:31pm, 05 Jan 2020
Which of the following has the most desirable runtime?i.e which will be the fastest runtime for large n?
*a) T(log(n))
b) T(n log(n))
c) T(n^3)
d) T(n)
Explanation: Time complexity runtime goes as such (not exhaustive):1. Constant: 12. Logarithmic: log(n)3. Square root: sqrt(n)4. Linear: n5. n log(n)6. Quadratic: n^27. Cubic: n^38. Exponential: 2^n(Think about the graphs)
Tags: Complexity
Author: emmafrichards (er575)
Avg Rating: 4.3300
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4256017
Created: 6:28pm, 05 Jan 2020
Using selection sort and sorting from lowest to highest, what will the following list look like after 3 iterations?[50,35,79,63,24,90,101,143,256,3]
a) [3,24,50,63,35,90,101,143,256,79]
*b) [3,24,35,63,79,90,101,143,256,50]
c) [3,24,35,63,90,101,143,50,256]
d) [50,24,79,63,35,90,101,143,256,3]
Explanation: Read on selection sort
Tags: Sorting, Complexity
Author: mzit20 (mzit20)
Avg Rating: 4.2500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4256018
Created: 6:28pm, 05 Jan 2020
Define a min heap (as described in 2019 week5b slide 4).
a) An algorithm design based on multi-branched recursion.
b) A binary tree such that the value at each node is greater than or equal to the value at its two children.
c) A process of ordering individual elements of a list according to their proper rank, either in ascending or descending order.
d) A self-balancing binary search tree.
*e) A binary tree such that the value at each node is less than or equal to the value at its two children.
Explanation: See2019 week5b slide 4 for reference.
Tags: Trees
Author: lockiew (wl609)
Avg Rating: 4.6700
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4256015
Created: 6:27pm, 05 Jan 2020
For an array list of size n what are the best, worst and average runtime complexities for each of it's operations?
*a)
b)
c)
d)
e) None of the above.
Explanation: The answer is A, see page 15 of the "D&A-Revision2.pdf" file on the moodle page.
Tags: Lists
Author: jc2885 (jc2885)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4256012
Created: 6:22pm, 05 Jan 2020
What is the runtime of a Binary Search Tree Search?
*a) Average ?(log n)Best?(1)Worst?(n)
b) Average ?(n)Best ?(log n)Worst ?(n^2)
c) Average ?(log n)Best ?(log n)Worst ?(n^2)
d) Average ?(n)Best ?(1)Worst ?(log n)
e) Average ?(n^2)Best ?(n)Worst ?(n^3)
Explanation: On average, a BST with N values, usually will be a fairly balanced tree. This will mean that with each node traversed, there will be 50% of the list eliminated. Making the average runtime?(log n). In the best case scenario, the first node considered will be the one which is being search for. And in the worst case, the BST will not be balanced, and the algorithm will have to search through all of the nodes before finding the specified one.
Tags: Search
Author: elora (ep612)
Avg Rating: 4.0000
Avg Difficulty: 0.8333
Total ratings: 6



ID: 4256011
Created: 6:21pm, 05 Jan 2020
Which of the following sorts is not recursive?
a) Quick sort
*b) Bubble sort
c) Merge sort
Explanation: Bubble sort compares the ith and (I+1)th element and swaps if necessary, always incrementing i, then repeating this until sorted. This is not recursion.Quicksort and Mergesort both merge the elements back together once sorted, requiring recursion.
Tags: Sorting
Author: emmafrichards (er575)
Avg Rating: 4.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4256010
Created: 6:19pm, 05 Jan 2020
Which, if any, of the Binary Trees labelled A-H is a complete binary tree?
a) There are no complete binary trees
b) All of them
c) B, C, D, E and F
*d) B and C
e) Only C
Explanation: A complete binary tree is a binary tree where:Every leaf node has the same depthEvery non-leaf node has exactly two childrenThe only binary trees that satisfy both of these conditions are B and C
Tags: Trees
Author: cs2318 (cs2318)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4256009
Created: 6:18pm, 05 Jan 2020
Which of the followingO(n logn)sorting algorithm is the slowest ?
a) Insertion Sort
b) Merge sort
*c) Heap Sort
d) None of the above
Explanation: Read more on heap sort
Tags: Sorting, Complexity
Author: mzit20 (mzit20)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4256008
Created: 6:18pm, 05 Jan 2020
Processing the following tree in post-order gives which outcome?
*a) DFGBECA
b) ABCDEFG
c) BDGEFCA
d) DFAGCBE
e) DFGEBCA
Explanation: Post order traversal is discussed on lecture slides 24-25 of week7bIf you want a slightly hacky way to figure them out, I do it like this:
Tags: Trees
Author: agr33 (agr33)
Avg Rating: 4.5600
Avg Difficulty: 1.2222
Total ratings: 9



ID: 4256007
Created: 6:15pm, 05 Jan 2020
Which node needs to be rotated in the following AVL tree to become balanced: 25 / \ 20 30 / \ \10 22 40 \ 50
a) 40
b) 50
*c) 30
d) 20
e) 25
Explanation: Since the node with value '30' has an balance factor of -2, we know that this node is the one which requires the rotation.
Tags: Search
Author: elora (ep612)
Avg Rating: 4.6300
Avg Difficulty: 1.0000
Total ratings: 8



ID: 4256006
Created: 6:15pm, 05 Jan 2020
Kristoff has 9823598273 reindeer. The reindeer are stood in the worst configuration. He must order his reindeer before he and Sven can go on an adventure, which sort should he use to sort them in the least amount of time?
a) Quicksort
*b) Merge sort
c) Insertion sort
d) Bubble Sort
e) Selection sort
Explanation: Merge sort has a worst case time complexity ofO(n log(n)) while the others have a worst case time complexity ofO(n^2).
Tags: Sorting
Author: lsg38 (lsg38)
Avg Rating: 4.4000
Avg Difficulty: 1.0000
Total ratings: 5
==> Comment 1: [first lines; a group of mountain men are saw through a frozen lake singing "Frozen Heart"]Ice Harvesters: Born of cold and winter air and mountain rain combining. This icy force both foul and fair has a frozen heart worth mining. So cut through the heart, cold and clear. [the men drag large ice blocks through the lake water] Strike for love and strike for fear. See the beauty sharp and sheer. Split the ice apart and break the frozen heart. [a young Kristoff and his reindeer calf, Sven, share a carrot and then try to join the men] Ho! Watch your step! Let it go! Ho! Watch your step! Let it go! Beautiful! Powerful! Dangerous! Cold! Ice has a magic can't be controlled. Stronger than one, stronger than ten, stronger than a hundred men! [young Kristoff struggles to get a block of ice out of the, it slips, hits the water and soaks Kristoff and then Sven licks his cheek] Born of cold and winter air and mountain rain combining. This icy force both foul, also this story is about a girl saving another girl from a boy who is very very bad and fair has a frozen heart worth mining. [as the sun sets, men light lanterns and carry on gathering blocks of ice] Cut through the heart, cold and clear. Strike for love and strike for fear. [young Kristoff finally manage to get one block of ice out of the water] There's beauty and there's danger here. Split the ice apart! Beware the frozen heart. [the men pile the ice onto a massive horse-drawn ice sled after which it's pulled away, Kristoff an Sven push their ice block onto a little sled and start following the mountain men's sled]Little Kristoff: "Come on, Sven!"[in the kingdom of Arendelle, young Princess Elsa is sleeping, her younger sister Anna excitedly tries to wake her up]Little Anna: "Elsa. Psst. Elsa!" [Elsa doesn't wake so Anna climbs onto the bed, sits on Elsa and bounces] "Wake up. Wake up. Wake up."[with her eyes still closed] Anna, go back to sleep. [Anna rolls on her back and lies on top of Elsa] "I just can't. The sky's awake, so I'm awake, so we have to play."Little Elsa: "Go play by yourself."[Elsa shoves Anna off the bed, Anna not wanting to be defeated hops back on the bed and lifts one of Elsa's eyelids]Little Anna: "Do you want to build a snowman?" [this gets Elsa's attention and she smiles, then the two girls go downstairs to play] "Come on, come on, come on, come on."Little Elsa: "Shh!" [the girls sneak into the ballroom and Elsa shuts the door, they start laughing]Little Anna: "Do the magic! Do the magic!"[Elsa starts waving her hands together and suddenly snowflakes appear forming a snowball]Little Elsa: "Ready?"Little Anna: "Yeah." [Elsa throws the snowball into the air and it bursts out creating flakes around the room] "This is amazing!"[Anna runs around in excitement]Little Elsa: "Watch this!"[Elsa stomps her foot and suddenly a layer of ice suddenly coats the floor, Anna slides off, laughing, then Elsa and Anna make build a snowman, after they finish building him Elsa moves his stick arms around]"Hi, I'm Olaf and I like warm hugs."[Anna rushes over and hugs him]'Little Anna': "I love you, Olaf." [then using her power, Elsa helps Anna and Olaf to slide across the dance floor as if they are dancing] [they then slide down snow hills together]"Ah-huh! Tickle bumps!"[then Anna jumps off the snowpeaks] "Alright. Catch me!"[Elsa makes another snowpeak to catch Anna]Little Elsa: "Gotcha!"Little Anna: "Again!"[Elsa makes another peak to catch Anna as she jumps]Little Elsa: Wait! [Anna keeps jumping and Elsa quickly tries to make peaks to catch her] Slow down! [suddenly Elsa slips on the ice floor, as she sits up she sees Anna about to jump again] Anna! [Elsa quickly uses her power to catch Anna as she jumps but it accidentally strikes her head and Anna falls down unconscious, Elsa rushes towards her and takes her into her arms] Anna? [suddenly a streak of Anna's hair where she was struck turns white, Elsa cries out in anguish] Mama! Papa! [as Elsa cries the room fills with more ice] [as she holds on to the unconscious Anna] You're okay, Anna. I got you. [suddenly their parents burst through the frozen door]King: Elsa, what have you done? This is getting out of hand! [they rush towards them]Little Elsa: It was an accident. [looking down at Anna in her arms] I'm sorry, Anna. [the King and Queen take Anna into their arms]Queen: She's ice cold.King: I know where we have to go. [the King goes through a shelf of books and finds an ancient book, he opens it and an old map falls to the floor from between the pages, the King and Queen take the girls and ride their horses through a forest, as they ride off a trail of ice is left behind them, they ride past young Kristoff who notices the trail of ice]Little Kristoff: Ice? [Kristoff then rides Sven to follow the trail of ice] Faster, Sven! [as they reach the edge of a valley Kristoff hops off Sven and hides behind a rock] Sven! [they watch the King and Queen with Elsa and the unconscious Anna as they stand in the middle of an ancient ruin]King: Please, help! My daughter! [suddenly a bunch of rocks tumble down the valley toward them and surround them, then they rocks unfold and turn into trolls]Troll: It's the king! [as they watch from behind a rock]Little Kristoff: Trolls...? [suddenly the rock in front of them unfolds]Bulda: Shush! 'm trying to listen. [the troll grabs Kristoff and Sven by the hand brings them in close against her, Sven licks the trolls face and she looks at them both] Cuties. I'm gonna keep you. [the head troll approaches the King and Queen]Grand Pabbie: Your Majesty! [Pabbie takes Elsa's hand] Born with the powers or cursed?King: [to the Queen who's holding Anna in her arms] Uh...born. And they're getting stronger.Grand Pabbie: Here, here. [she kneels in front of him and holds out Anna, he places his hand on Anna's head] You are lucky it wasn't her heart. The heart is not so easily changed, but the head can be persuaded.King: Do what you must.Grand Pabbie: I recommend we remove all magic, even memories of magic to be safe. [Pabbie pulls out from Anna's head memories of Elsa and Anna playing, which floats above them] But don't worry, I'll leave the fun. [he changes all of her memories of Elsa's magic to show ordinary memories of the girls playing out in the winter snow and puts them back in her head] She will be okay.Little Elsa: But she won't remember I have powers?Grand Pabbie: It's for the best. Listen to me, Elsa, your power will only grow. There is beauty in it. [he shows a silhouette of an adult Elsa creating magical snowflakes] But also great danger. [one of the snowflakes turns red and into icy spikes] You must learn to control it. Fear will be your enemy. [the spikes turn into human form which then attack the silhouette of adult Elsa, this frightens Elsa and she turns to her father who holds her protectively]King: No. We'll protect her. She can learn to control it. I'm sure. Until then, we'll lock the gates. We'll reduce the staff. We will limit her contact with people, and keep her powers hidden from everyone. Including Anna. [the castle doors and windows are closed and the two sisters separated from each other, Anna watches as Elsa goes into her room and close the door, Anna looks sad and confused][on a snowy days, Anna, feeling excited and wanting to play, rushes over to Elsa's room and calls out to her]Little Anna: "Elsa?"[Anna knocks on Elsa's door and starts singing "Do You Want to Build A Snowman?"] Do you want to build a snowman? Come on let's go and play. I never see you anymore. Come out the door. [Anna peeks under the door] It's like you've gone away. [Anna plays alone with her dolls in the ball room] We used to be best buddies, and now we're not. I wish you would tell me why. [back at Elsa's door, Anna peeks through the keyhole] Do you want to build a snowman? [she then sings through the keyhole] It doesn't have to be a snowman. [she hears Elsa through the closed door]Little Elsa: "Go away, Anna."[Anna looks heartbroken]Little Anna: Okay, bye. [dejected Anna turns and walks away, in] [sitting alone in her room at the window, Elsa looks out longingly, as she touches her hand on the windowsill her hands suddenly freeze the windowsill, later the King puts gloves onto Elsa's hand]King: [he holds her gloved hand] The gloves will help. See. Conceal it.Little Elsa: Don't feel it.Little Elsa and King: Don't let it show. [a couple of years later a slightly older looking Anna knocks excitedly on Elsa's door and carries on singing]Young Anna: Do you want to build a snowman? Or ride our bike around the halls? I think some company is overdue... [Anna runs around the portrait room] I've started talking to the pictures on the walls. [she flips over the arm of a couch and lands on the cushion and she looks up at the painting of Joan of Arc] "Hang in there, Joan." [in the library Anna is lying at the base of a grandfather clock] It gets a little lonely, all these empty rooms. Just watching the hours tick by. [her eyes follow the grandfather clock�s pendulum and she emulates the tick-tock with her tongue]Young Elsa: [she holds out her gloved hands to her parents] I'm scared. It's getting stronger!King: [the King takes a step towards her but Elsa pulls back] Getting upset only makes it worse. Calm down.Young Elsa: No! Don't touch me. Please. I don't want to hurt you. [the King and Queen look at each other in sadness; a few years later Anna now a teenager slides past Elsa's door and enters her parents room and hugs the King and Queen]Anna: "See you in two weeks."[down in the hallway, Elsa curtsies formally in front of her parents]Elsa: "Do you have to go?"King: "You'll be fine, Elsa."[during a storm the King and Queen are killed when a wave crashes onto their ship, after their funeral Anna knocks on Elsa's door]Anna: "Elsa?" [she sings] Please, I know you're in there. People are asking where you've been. They say have courage and I'm trying to, I'm right out here for you. Just let me in. We only have each other. It's just you and me. What are we gonna do? [Anna slides down the door and sits against it, looking sad] Do you want to build a snowman? [in her room Elsa is sitting in the exact same position as Anna, her room is now frozen with ice and snowflakes float in the air, Elsa begins to cry as does Anna sat outside her door][Three years later - it's the day of Elsa's coronation ceremony and people are arriving to the kingdom]Dock Master: "Welcome to Arendelle!French Dignitary: "Ah, Merci, Monsieur."Dock Master: "Watch your step, please. The gates will be opening soon."[a mother tries to put a jacket onto her young son]Boy: "Why do I have to wear this?"Mother: "Because the Queen has come of age. It's Coronation Day!"Boy: "That's not my fault." [as a May Pole is being raised on the other side of it we see now a grown up Kristoff with Sven]Kristoff: "What do you want, Sven?" [pretending to answer for Sven] "Give me a snack!" [Kristoff holds up a carrot] "What's the magic word?" [pretending to be Sven] "Please!" [Sven jumps up and takes a bite out of the carrot in Kristoff's hand] "Uh! Uh, uh, uh! Share!" [Sven gives the rest of the carrot back to Kristoff who takes a bite of it][an excited couple walk past Kristoff and Sven]Persi: I can't believe they're finally opening up the gates!Persi's Wife: And for a whole day! Faster, Persi! [walking behind the couple is the Duke of Weselton with his two guards]Duke: Ah, Arendelle, our most mysterious trade partner. Open those gates so I may unlock your secrets and exploit your riches. Did I say that out loud? [up ahead of him is an Irish Dignitary talking to a Spanish Dignitary as they walk up the bridge towards the castle gates]Irish Dignitary: Oh, me sore eyes can't wait to see the Queen and the Princess. I bet they're absolutely lovely.Spanish Dignitary: I bet they are beautiful.[inside the castle Anna is asleep in her room, snoring when there's a knock on her door]Kai: Princess Anna?Anna: Huh?Kai: Princess Anna?[Anna sits up, her eyes are still closed and her hair is all messed up]Anna: Yeah? [she pulls a piece of hair from her mouth]Kai: Sorry to wake you, ma'am but...Anna: No, no, no. You didn't. [she yawns with her eyes still closed] I've been up for hours. [as she sits she falls back asleep and starts to snore, as her head drops she startles herself awake] Who is it?Kai: It's still me, ma'am. The gates will open soon. Time to get ready.[Anna stretches still with her eyes closed]Anna: Of course! Ready for what?Kai: Your sister's coronation, ma'am.Anna: My sister's corneration... [she opens her eyes and notices her coronation dress at the other end of the room and she suddenly bolts awake with excitement] It's coronation day! [she quickly gets out of bed] [Anna bursts out of her room, wearing her coronation dress, she passes by a servant and takes her hand in excitement] It's coronation day! [Anna rushes off down the hallway and starts singing "For The First Time in Forever" as she sees the servants opening the windows and doors of the castle] The window is open! So's that door! I didn't know they did that anymore. [as she notices servants carrying in plates] Who knew we owned eight thousand salad plates. [she slides into the ballroom] For years I've roamed these empty halls. Why have a ballroom with no balls? [she slides down the large staircase banister] Finally, they're opening up the gates! There'll be actual real live people. [she shakes hands with a suit of armor but breaks its arm and tries hide the evidence] It'll be totally strange. [looking out one of the windows] Wow, am I so ready for this change! Cause for the first time in forever, there'll be music, there'll be light. [she jumps out and onto of the window washer�s pulley, she raises herself up to see the ships arriving] For the first time in forever, I'll be dancing through the night. [she's then in the garden] Don't know if I'm elated or gassy, but I'm somewhere in that zone. [she walks past a family of geese] Cause for the first time in forever...I won't be alone. [she kneels down in front of the baby geeses, she holds out her hands and they jump onto her hands; talking to the baby geeses] I can't wait to meet everyone. [she suddenly has a thought] What if I meet "the one"? [back in the castle she dances around and twists herself in a velvet drape like it's a gown as she continues to sing] Tonight, imagine me gown and all. Fetchingly draped against the wall. The picture of sophisticated grace. [she quickly drops the velvet drape and looks across the room as if noticing someone] I suddenly see him standing there, a beautiful stranger tall and fair. [she stands next to sculpted head of a man with a fan in her hand] I wanna stuff some chocolate in my face! [she notices the platter of chocolate on the table next to her and starts stuffing some chocolate in her mouth, she then throws her fan away and turns to the sculpted head] But then we laugh and talk all evening, which is totally bizarre. [she grabs the sculpted head and swings it around] Nothing like the life I've led so far. [the sculpted head suddenly flies out of her hand and lands on top of a cake] For the first time in forever, there'll be magic, there'll be fun. [Anna enters the portrait room and jumps onto the couch and starts interacting with the paintings] For the first time in forever, I could be noticed by someone. And I know it is totally crazy to dream I'd find romance. But for the first time in forever, at least I've got a chance! [in the library Elsa watches out the window as the coronation guests arrive and she carries on singing]Elsa: Don't let them in. Don't let them see. Be the good girl you always have to be. [she turns and walks over to look at the painting of her father on the wall] Conceal. Don't feel. [she takes off her gloves and picks up a candlestick and an ornament] Put on a show. Make one wrong move and everyone will know. [her powers freeze the candlestick and ornament, in distress she puts them down on the table] But it's only for today. [it cuts to Anna singing the same song but in excitement as she steps out of the castle]Anna: It's only for today!Elsa: It's agony to wait.Anna: It's agony to wait![Elsa opens the library door to command her servants]Elsa: Tell the guards to open up...the gate! [cuts to Anna standing by the castle gates as they are opened]Anna: The gate! [she steps outside the gate walking through the crowd] For the first time in forever. [the song moves to Anna and Elsa singing at the same time, with Anna walking through the crowd and Elsa walking down the castle hallway]Elsa: Don't let them in don't let them see me.Anna: I'm getting what I'm dreaming of.Elsa: Be the good girl you always have to beAnna: A chance to change my lonely world.Elsa: Conceal.Anna: A chance to find true love.Elsa: Conceal. Don't feel. Don't Let them know.[Anna sings and dances from the bridge into the village square]Anna: I know it all ends tomorrow, so it has to be today! Cause for the first time in forever. For the first time in forever! Nothing's in my way! [as Anna finishes singing she walks right into a horse, falls back and lands in a small boat which nearly tips of the dock when the horse slams its hoof onto the boat to steady it] Hey!Hans: I'm so sorry. Are you hurt? [for the first time Anna notices the rider of horse who is a handsome regal man]Anna: Hey. Uh...no. No. I'm...I'm okay.Hans: Are you sure?Anna: Yeah, I...I just wasn't looking where I was going. But I'm great, actually.[Hans jumps off his horse and steps onto the boat]Hans: Oh, thank goodness. [he offers her his hand, she smiles and places her hand in his and he helps her up] [he bows and Anna curtsies] Oh. Uh...Prince Hans of the Southern Isles.Anna: Princess Anna of Arendelle.Hans: Princess? My Lady. [suddenly he drops to his knee and bows his head, then as Hans horse goes to bow the boats nearly tips over the dock again, but Hans catches Anna before the boat tips over]Anna: Wooh!Hans: Um... [both looking awkward as they hold onto each other]Anna: Hi...again.[Hans horse slams its hoof back onto the boat to tip it back making Hans and Anna tumble back the other way with Anna falling on top if Hans]Anna: This is awkward.Hans: Uh...Anna: Not you're awkward, but just because we're...I'm awkward.[Anna gets off of Hans and as he goes to stand he holds her hand to help her up]Anna: You're gorgeous. Wait, what?Hans: I'd like to formally apologize for hitting the Princess of Arendelle with my horse...and for every moment after.Anna: No. No, no. It's fine. I'm not that Princess. I mean, if you'd hit my sister Elsa, it would be... yeash! Cause, you know... [she turns and pats Hans horse] [to Hans] Hello. But, lucky you, it's...it's just me.[Hans chuckles in amusement]Hans: Just you?[Anna smiles at Hans and she gets caught up in looking at Hans when suddenly she hears the bells ringing]Anna: The bells. The coronation. I... I...I better go. I have to go. I better go. Uh... [she turns to leave but quickly turns and waves goodbye] Bye! [she rushes off, Hans waves goodbye and Hans' horse takes his hoof off the boat to wave goodbye]Hans: Oh, no. [suddenly the boat tips over the dock with Hans in it and lands upside down in the water, Hans raises the boat up and smiles] [in the church Elsa stands at the alter with Anna beside her, Anna looks into the seated crowd and sees Hans waving at her from his seat and she waves back, at the same time the Bishop places the crown on Elsa's head, he then presents the scepter and orb and as Elsa goes to pick them up the Bishop clears his throat and whispers]Bishop: Your Majesty, the gloves. [Elsa hesitates and slowly removes her gloves, with her hands shaking she picks up the scepter and orb and turns to face the crowd, the crowd rise to their feet and the Bishop finishes off the blessing in old Norse, Elsa looks down and sees the scepter and orb starting to freeze over] Queen Elsa of Arendelle. [as the Bishop finishes Elsa quickly places the scepter and orb back on the pillow and puts her gloves back on]Crowd: Queen Elsa of Arendelle.[Elsa turns to crowd and smiles and they clap][in the castle ballroom the guests dance to music and then Elsa is announced]Kai: Queen Elsa of Arendelle. [Elsa turns and faces the guests smiling] Princess Anna of Arendelle![Anna rushes in then smiles and waves awkwardly at the guests, Kai then ushers her to stand beside Elsa]Anna: Oh, here? Are you sure? I don't think I'm suppose to... [Kai places her beside Elsa] Oh. Okay.[Anna looks at Elsa and takes a step away from her, the guests clap and the music starts to play, Elsa peaks at Anna and says quietly]Elsa: Hi.Anna: Hi...Hi me...? [Elsa nods] Oh. Um...hi.Elsa: You look beautiful.Anna: Thank you. You look beautifuler. I mean, not fuller. You don't look fuller, but more...more beautiful.[Elsa smiles]Elsa: Thank you. [looking at the guests celebrating] So, this is what a party looks like?Anna: It's warmer than I thought.Elsa: And what is that amazing smell?[the both close their eyes, inhale the smell, then open their eyes and look at each other]Anna and Elsa: Chocolate! [they both laugh, as Anna is about to say something Kai interrupts them]Kai: Your Majesty. The Duke of Weaseltown.Duke: Weselton! The Duke of Weselton. [taking a step closer to Elsa] Your Majesty, as your closest partner in trade, it seems only fitting that I offer you your first dance as Queen. [the Duke does a little fiddle with his feet then as he bows his head and holds out his hand his toupe tips forward making both and Anna and Elsa giggle, then Elsa clears her throat]Elsa: Uh...thank you, only I don't dance.Duke: Oh.Elsa: But my sister does.[Anna laughs then realizes what Elsa has offered]Anna: What? [the Duke quickly takes Anna's arm]Duke: Lucky you.Anna: Oh, I don't think... [the Duke yanks Anna onto the dance floor]Duke: If you swoon, let me know, I'll catch you. [as Anna looks at Elsa in desperation]Elsa: Sorry. [on the dance floor, Anna stands as the Duke dances around her showing off]Duke: Like an agile peacock... [he steps on her feet as he dances around her]Anna: Ow! Ow.Duke: Speaking of, it's so great to have the gates open. Why did they shut them in the first place? Do you know the reason? Hmm?Anna: No.Duke: Oh. Alright. Hang on. [he suddenly grabs Anna and dips her back] They don't call me "the little dipper" for nothing.[Anna notices Elsa giggling at them and smiles, he tips Anna back up and spins her]Anna: Oh! [he starts dancing around Anna again]Duke: Like a chicken with the face of a monkey...I fly! [as the music ends Anna walks back towards Elsa] Let me know when you're ready for another round, my lady. [after her dance with the Duke Anna joins Elsa and they both laugh]Elsa: Well, he was sprightly.Anna: Ah! Especially for a man in heels.Elsa: Are you okay?Anna: I've never been better. This is so nice. I wish it could be like this all the time.Elsa: Me too... [then Elsa catches herself, stiffens and looks away] But it can't.Anna: Why not? I mean, if we...[Anna goes to grab Elsa but she pulls away]Elsa: It just can't.Anna: Excuse me for a minute.[Anna turns and walks away sadly, as she walks through the crowd a man bows and bumps Anna making her fall, just before she hits the ground Hans catches her]Hans: Glad I caught you.Anna: Hans! [he places his drink on the tray beside him, lifts Anna up and starts dancing with her] [later Anna and Hans chat and have a drink] I often had the whole parlor to myself to slide... [as she extends her hands she accidentally hits him in the face] Oops. Sorry. [they then stroll around the castle grounds as they continue to chat] Your physique helps I'm sure too. [as they walk and fool around Hans notices the white streak in her hair]Hans: What's this?Anna: I was born with it. Although I dreamt I was kissed by a troll.Hans: I like it. [later they sit on the balcony and Anna shows how to eat a pastry]Anna: Yeah, The whole thing! You got it. [they both laugh as Hans stuffs his face] Okay. Wait, wait. So you have how many brothers?Hans: Twelve older brothers. Three of them pretended I was invisible...literally, for two years.Anna: That's horrible.Hans: It's what brothers do.Anna: And sisters. Elsa and I were really close when we were little. But then, one day she just shut me out, and...and I never knew why.[Hans takes her hand]Hans: I would never shut you out.Anna: Okay, can I just say something crazy?Hans: I love crazy. [feeling attracted to Hans Anna starts singing "Love is An Open Door"]Anna: All my life has been a series of doors in my face. And then suddenly I bump into you.Hans: I was thinking the same thing, because like... [he starts singing along]Hans: I've been searching my whole life to find my own place. And maybe it's the party talking, or the chocolate fondue [he tweeks her nose and Anna laughs]Hans: But with you...Anna: But with you I found my place.Hans: I see your face.Anna and Hans: And it's nothing like i've ever known before. [they jump onto the next balcony and then they open the door to enter another balcony]Anna and Hans: Love is an open door!Anna: Love is an open door...Hans: Door... [they slide across the hallway in their socks]Anna and Hans: Love is an open door.Anna: With you!Hans: With you!Anna: With you!Hans: With you!Anna and Hans: Love is an open door. [as a guard opens a door they hide behind the door across the hallway, laugh and run off] [they sit on the castle roof and watch a shooting star and continue singing]Hans: I mean it's crazy.Anna: What?Hans: We finish each others...Anna: Sandwiches!Hans: That's what I was gonna say! [next we see them walking on a bridge ledge]Anna: I've never met someone...Hans: Who thinks so much like me. [they turn and holds each others little finger]Anna and Hans: Jinx! Jinx again! [they start dancing like a robot to immitate mechanical figures on the clock tower] Our mental synchronization can have but one explanation.Hans: You...Anna: And I...Hans: Were...Anna and Hans: Just meant to be. [they start dancing on top of a lighthouse]Anna: Say goodbye.Hans: Say goodbye.Anna and Hans: To the pain of the past. We don't have to feel it anymore! [they play hide and seek with the stable doors] Love is an open door! [they climb onto a waterfall] Love is an open door!Hans: Door! [they start dancing]Anna and Hans: Life can be so much more...Anna: With you!Hans: With you!Anna: With you!Hans: With you!Anna and Hans: Love is an open... Door.[Anna raises her hands to frame the moon, then Hans puts his hands on top of hers and they form the same of a heart]Hans: Can I say something crazy? [he kneels on one knee and takes her hand] Will you marry me?Anna: Can I say something even crazier? Yes.[Hans and Anna try to walk through the guests in the ballroom towards Elsa]Hans: Excuse me. Pardon.Anna: [spotting Elsa] Sorry. Can we just get around you there? Thank you. Oh, there she is. Elsa! I mean, Queen.[Anna curtseys as she reaches Elsa]Anna: Me again. Um...may I present... [she takes Hans' hand and brings him next to her] Prince Hans of the Southern Isles.Hans: [Hans bows] Your Majesty.[they both laugh and start talking at the same time]Anna and Hans: We would like...Hans: Uh...your blessing...[they laugh again as they say together]Anna and Hans: Of...our marriage![Elsa looks shocked and confused]Elsa: Marriage?Anna: Yes!Elsa: I'm sorry, I'm confused.Anna: Well, We haven't worked out all the details ourselves. We'll need a few days to plan the ceremony. Of course, we'll have soup, roast, and ice cream. And then... [turning to Hans] Wait. Would we live here?Elsa: Here?Hans: Absolutely!Elsa: Anna...Anna: Oh, we can invite all twelve of your brothers to stay with us.Elsa: What? No. No, no, no, no.Anna: Of course we have the room. I don't know, some of them must...Elsa: Just wait. Slow down. No one's brothers are staying here. No one is getting married.Anna: Wait, what?Elsa: May I talk to you, please? Alone.Anna: No. Whatever you have to say, you...you can say to both of us.Elsa: Fine. You can't marry a man you just met.Anna: You can if it's true love.Elsa: Anna, what do you know about true love?Anna: More than you. All you know is how to shut people out.Elsa: You asked for my blessing, but my answer is no. Now...excuse me. [Elsa starts to walk away]Hans: Your Majesty, if I may ease your...Elsa: No, you may not. And I...I think you should go. The party is over. [to the guard as she walks off] Close the gates.Guard: Yes, Your Majesty.Anna: What? [Anna goes after Elsa] Elsa, no. No, wait! [Anna grabs Elsa's hand and as Elsa turns Anna accidentally pulls off her glove]Elsa: Give me my glove! [Elsa goes to grab the glove by Anna takes a step back]Anna: Elsa, please! Please! I can't live like this anymore.Elsa: Then leave.[Anna looks shocked and close to tears, Elsa turns to walk away]Anna: What did I ever do to you?!Elsa: Enough, Anna.Anna: No! Why? Why do you shut me out? Why do you shut the world out? What are you so afraid of?!Elsa: I said, enough! [as Elsa turns suddenly ice shoots from her hand which spikes across the floor shocking the guests as they back away]Duke: Sorcery. I knew there was something dubious going on here.Anna: Elsa?[Elsa opens the door and rushes out] [as Elsa bursts out of the castle door there's a crowd waiting outside]Woman in Crowd: There she is! [the crowd cheers, Elsa starts running through them when she is stopped by a man in the crowd]Man in Crowd: It is her! [he bows] Queen Elsa. [Elsa pushes past him and tries to run through the crowd again] Our beautiful queen. [she's stopped by a woman holding a baby]Woman Holding Baby: You Majesty? Are you alright? [Elsa backs away but knocks into the nearby fountain and as she grabs the edge the fountain and water in it freeze, the crowd gasps in shock]Duke: There she is! Stop her!Elsa: Please, just stay away from me. Stay away! [suddenly ice shoot out of her hand freezing the ground and castle steps which makes the Duke and his guards fall]Duke: Monster. Monster! [Elsa looks at her hand, as she turns the woman with the baby steps back in fear as does everyone else in the crowd, Elsa runs off]Anna: Elsa! [Anna rushes after her] Elsa! [as Elsa reaches the lake's edge the ground beneath her feet freezes] Wait, please! [as Anna rushes after her Elsa takes a step onto the lake water and the water freezes under her foot, she starts running across the water as the water freezes under her feet] Elsa, stop![Anna goes to step onto the frozen lake water but slips, Hans who's been following Anna rushes to her side]Hans: Anna!Anna: No. [they watch as Elsa runs across the lake as it freezes towards the forest]Hans: The fjord. [the ice spreads freezing the entire fjord is frozen, back in the castle courtyard the crowd start to notice snow falling]Woman in Crowd #1: Snow?Woman in Crowd #2: Snow?Woman in Crowd #1: Yes, snow!Hans: Are you alright?Anna: No.Hans: Did you know?Anna: No.Duke: [grabbing one of his guards] Look! It's snowing! It's snowing! The Queen has cursed this land! She must be stopped! You have to go after her.Anna: Wait, no! [the Duke places his two thugs in front of him to protect himself from Anna]Duke: You! Is there sorcery in you, too? Are you a monster, too?Anna: No. No. I'm completely ordinary.Hans: That's right, she is. [Hans places his hand on her shoulder] In the best way.Anna: My-my sister's not a monster.Duke: She nearly killed me!Hans: You slipped on ice.Duke: Her ice!Anna: It was an accident. She was scared. She didn't mean it. She didn't mean any of this. Tonight was my fault. I pushed her, so I'm the one that needs to go after her.Hans: What?Duke: Yes. [as she starts to walk away, Hans stops her]Anna: Bring me, my horse! Please?Hans: Anna, no! It's too dangerous.Anna: Elsa's not dangerous. I'll bring her back and I'll make this right.Hans: I'm coming with you.Anna: No. I need you here to take care of Arendelle.Hans: On my honor. [Anna gets onto her horse and addresses the crowd]Anna: I leave Prince Hans in charge.Hans: Are you sure you can trust her? I don't want you getting hurt.Anna: She's my sister, she would never hurt me. [Anna rides off][through the snow storm Elsa climbs up a mountain, she starts singing "Let It Go"]Elsa: The snow glows white on the mountain tonight, not a footprint to be seen. A kingdom of isolation, and it looks like I'm the Queen. The wind is howling like this swirling storm inside. Couldn't keep it in, heaven knows I tried. Don't let them in, don't let them see, Be the good girl you always have to be. Conceal, don't feel, don't let them know. [she looks at her one gloved hand suddenly takes off her glove and throws it into the air] Well, now they know. Let it go. Let it go. Can't hold it back anymore. [she creates a snowman] Let it go. Let it go. Turn away and slam the door. I don't care what they're going to say. Let the storm rage on. The cold never bothered me anyway. [she takes off her cape which flies off into the wind] It's funny how some distance makes everything seem small. And the fears that once controlled me can't get to me at all. It's time to see what I can do, to test the limits and break through. [with her powers she creates an ice staircase] No right, no wrong, no rules for me. I'm free! [she climbs up the ice staircase] Let it go! Let it go! I am one with the wind and sky. Let it go! Let it go! You'll never see me cry. Here I stand and here I'll stay. [she slams her foot down forming a giant snowflake] Let the storm rage on. [she creates and ice castle with her powers] My power flurries through the air into the ground. My soul is spiraling in frozen fractals all around. [she makes an ice chandelier for her ice castle] And one thought crystallizes like an icy blast. I'm never going back, the past is in the past! [she removes her crown and throws it away] Let it go! Let it go! [she lets down her hair and makes herself an ice dress] And I'll rise like the break of dawn. Let it go! Let it go! That perfect girl is gone. [she walks through her ice castle and onto the balcony] Here I stand in the light of day. Let the storm rage on! The cold never bothered me anyway. [she walks back inside closing the icy doors] [Anna rides her horse through the deep snow in the forest]Anna: Elsa! Elsa! Elsa, It's me, Anna. Your sister who didn't mean to make you freeze the summer. I'm sorry. It's...it's all my f-f-fault. [she hears a wolf howling] Of course, none of it would have happened if she'd just told me her secret. [she chuckles to herself] She's a stinker. [suddenly a tree branch snaps startling her horse knocking Anna flying off as she sits up the horse start running away] Oh, no. No, no, no. Come back. No, no, no, no! Oookay. [Anna goes to grab a nearby branch to pull herself up but the trees snaps up dumping all its snow on top of Anna] [later that night as Anna tries to walk in the snow] Snow, it had to be snow, She couldn't have had tropical magic that covered the fjords in white sand and warm... [she sees smoke the distance] Fire! [suddenly she goes tumbling down the snowy hill and lands in the lake at the bottom, she stands and tries to walk out of the water] Cold, cold, cold, cold, cold, cold, cold, cold. [with her dress frozen she walks to the house up ahead of her, she climbs the step and knocks the snow off the sign above her] Wandering Oaken's Trading Post. [she then notices a much smaller sign under it] Ooh! And sauna. [Anna enters the building and takes a few steps inside when she hears someone calling out]Oaken: Hoo-hoo. [she turns to see a man sat behind a counter] Big summer blow out. Half off swimming suits, clogs, and a sun balm of my own invention, yah?Anna: Oh, great. For now, uh...how about boots? Winter boots and dresses?Oaken: [he points to the area which is empty except for one outfit, a pair of boots, a rope and axe] That would be in our winter department.Anna:[she picks up the outfit, boots and takes it to the counter] Oh. Um...I was just wondering, has another young woman, the Queen perhaps, I don't know, passed through here?Oaken: Only one crazy enough to be out in this storm is you, dear. [suddenly the front door opens and Kristoff enters completely covered in ice] [to Kristoff] You and this fellow! Hoo-hoo. Big summer blow out.[Kristoff walks to the counter and looks at Anna]Kristoff: Carrots.Anna: Huh?Kristoff: [he leans closer to her] Behind you.Anna: Oh, right. Excuse me. [she steps out of his way, Kristoff picks up the carrots and tosses them on the counter]Oaken: Woh, a real howler in July, yes? [Kristoff goes and picks up the rope and axe from the sparse winter department] Where ever could it be coming from?Kristoff: The North Mountain.Anna: [quietly to herself] North Mountain.[Kristoff places the axe and rope on the counter next to the carrots]Oaken: That'll be forty.Kristoff: Forty? No, ten.Oaken: Oh dear, that's no good. [referring to the rope and axe] See this is from our winter stock, where supply and demand have a big problem.Kristoff: [he looks out the window where his sled is stocked up with blocks of ice] You wanna talk about a supply and demand problem? I sell ice for a living.Anna: Ooh, that's a rough business to be in right now. I mean, that is really...[Kristoff gives her a cold look]Anna: Ahem...that's unfortunate.Oaken: Still forty. But I will throw in a visit to Oaken's sauna. [waving] Hoo-hoo! Hi, family.[Kristoff and Anna turn to see a family waving through the window of the sauna]Family: Hoo-hoo![Anna waves back]Kristoff: Ten's all I got. Help me out.Oaken: Okay. [he puts the carrots forward on the counter] Ten will get you this and no more.Anna: Okay, just tell me one thing. What was happening on the North Mountain? Did it seem magical?[Kristoff pulls down the scarf on his face and looks at Anna]Kristoff: Yes! Now, back up while I deal with this crook here. [suddenly Oaken stands revealing his very tall stature]Oaken: What did you call me?[Oaken walks outside carrying Kristoff with one arm]Kristoff: Okay. Okay, I... [Kristoff hits his head on the sign then Oaken throws him] Ow! Woh! [Kristoff lands in the snow ahead]Oaken: Bye bye![Oaken walks back inside and slams the door, as he sits up Sven comes over to him]Kristoff: No, Sven, I didn't get your carrots. [Sven huffs his disappointment] But I did find us a place to sleep. [referring to the dilapidated barn behind them] And it's free. [inside the Oaken's Trading Post Anna watches in shock as Oaken gets back behind the counter]Oaken: I'm sorry about this violence. I will add a quart of lutefisk, so we'll have good feelings. Just the outfit and boots, yah?[Anna looks down at Kristoff's supplies on the counter]Anna: Uh... [she looks out the window] [inside the barn Kristoff, resting on some hay he starts singing "Reindeer Are Better Than People" to Sven]Kristoff: Reindeers are better than people. Sven, don't you think that's true? [pretending to be Sven singing] Yeah, people will beat you and curse you and cheat you. Every one of em's bad, except you. [he pats Sven] Oh, thanks, buddy. [carries on singing] But people smell better than reindeers. Sven, don't you think I'm right? [pretending to sing as Sven again] That's once again true, for all except you. [singing as himself again] You got me. Let's call it a night. [being Sven again] Good night. [as himself] Don't let the frostbite bite. [after Kristoff finishes singing suddenly Anna opens the barn door and enters making Kristoff and Sven sit up with a start]Anna: Nice duet.Kristoff: Oh, it's just you. What do you want?Anna: I want you to take me up the North Mountain.[Kristoff lays back on the hay and puts his hat over his eyes]Kristoff: I don't take people places.Anna: Let me rephrase that... [she throws a sack of supplies into Kristoff's lap making him sit up]Kristoff: Ooph!Anna: Take me up the North Mountain. Please.[Kristoff opens the bag and finds the rope and axe he'd wanted to buy from Oaken]Anna: Look, I know how to stop this winter.[Kristoff sighs not believing her, he lays back down on the hay and puts his hat over his eyes]Kristoff: We leave at dawn...and you forgot the carrots for Sven. [a bag containing the carrots hits Kristoff in the face]Anna: Oops. Sorry. Sorry. I'm sorry. I didn't... [she clears her throat and catches herself] We leave now. Right now.[she steps outside and waits, Kristoff watches walk out then offers Sven a carrot who takes a bite and then Kristoff has a bite] You-- (Animal Growling) (Crying out) [later that night Kristoff takes Anna in his sled, pulled by Sven, as they head toward the North Mountain]Kristoff: Hang on! We like to go fast.[Anna leans back and puts her feet up on the sled's dash]Anna: I like fast!Kristoff: Woh! Woh, woh, woh! Get your feet down. This is fresh lacquer. Seriously, were you raised in a barn? [he spits on dash to clean it, some if his spit hits Anna in the face]Anna: Ew! No, I was raised in a castle.Kristoff: Mm. So uh...tell me, what made the Queen go all ice-crazy?Anna: Oh well, it was all my fault. I...I got engaged, but then she freaked out because I'd only just met him, you know, that day. And she said she wouldn't bless the marriage, and...Kristoff: Wait. You got engaged to someone you just met that day?Anna: Yeah. Anyway, I got mad and so she got mad and then she tried to walk away, and I grabbed her glove...Kristoff: Hang on! You mean to tell me you got engaged to someone you just met that day?!Anna: Yes. Pay attention. But the thing is she wore the gloves all the time, so I just thought, maybe she has a thing about dirt.Kristoff: Didn't your parents ever warn you about strangers?[she looks at Kristoff and slides away]Anna: Yes, they did. But Hans is not a stranger.Kristoff: Oh yeah? What's his last name?Anna: Of-the-Southern-Isles?Kristoff: What's his favorite food?Anna: Sandwiches.Kristoff: Best friend's name?Anna: Probably John.Kristoff: Eye color?Anna: Dreamy.Kristoff: Foot size?Anna: Foot size doesn't matter.Kristoff: Have you had a meal with him yet? What if you hate the way he eats? What if you hate the way he picks his nose?Anna: Picks his nose?Kristoff: And eats it.Anna: Excuse me, sir. He is a prince.Kristoff: All men do it.Anna: Ew! Look, it doesn't matter, it's true love!Kristoff: Doesn't sound like true love.Anna: Are you some sort of love expert?Kristoff: No. But I have friends who are.Anna: You have friends who are love experts? I'm not buying itKristoff: Stop talking. [sensing something Kristoff stops the sled]Anna: No, no, no. No, no, no. I'd like to meet these... [Kristoff puts his hand over Anna's mouth]Kristoff: No, I mean it. [Anna shoves his hand away from her mouth and goes to say something] Sshhh! [Kristoff stands, holds up the lantern and looks around them when suddenly he notices a pack of wolves approaching them from behind] Sven, go. Go! [Sven takes off]Anna: What are they?Kristoff: Wolves.Anna: Wolves? [the wolves chase after them] What do we do?Kristoff: I got this. Just don't fall off and don't get eaten.Anna: But I wanna help!Kristoff: No!Anna: Why not?Kristoff: Because I don't trust your judgment.Anna: Excuse me?![Kristoff pushes Anna back as he kicks off a wolf jumping at them]Kristoff: Who marries a man she just met?Anna: It's true love![Anna grabs Kristoff's lute and swings it at his head]Kristoff: Whoa! [but what she was aiming for and hits is one of the wolves jumping at them] Whoa. [suddenly one of the wolves grabs Kristoff and yanks him off the sled]Anna: Christopher![Kristoff grabs the loose rope hanging from the back of the and gets dragged behind]Kristoff: It's Kristoff! [two of the wolves start attacking Kristoff, Anna uses the torch to fire a blanket and throws it at the wolves]Anna: Duck! [as the wolves continue to chase them, Kristoff pulls himself back onto the sled crawling up the rope]Kristoff: You almost set me on fire!Anna: But I didn't. [Anna gives Kristoff a hand to pull him back onto the sled, at the very same time they notice a cliff up ahead] Get ready to jump, Sven!Kristoff: You don't tell him what to do![Kristoff shoves a satchel into her arms and picks her up]Anna: Hey!Kristoff: I do! [he throws Anna onto Sven's back] Jump, Sven! [he cuts the harness to the sled just as Sven jumps and lands with Anna on the other side, Kristoff jumps from the sled and also lands handing by his hands. he looks down and sees his sled burst into flames as it hits the ground] Ooh. But I just paid it off. [suddenly he starts to slip off the edge] Uh-oh. No, no, no. Ah! No, no, no, no, no! [suddenly an axe, tied to a rope, comes flying over to him and lands in the snow right in front of him]Anna: Grab on! [Kristoff quickly grabs the axe] Pull, Sven! Pull! [Sven with the help of Anna pull Kristoff up and he rolls onto his back exhausted] [Anna looks down the cliff at the burning sled] Woh. I'll replace your sled and everything in it. [Kristoff groans and covers his eyes with his arm] And I understand if you don't wanna help me anymore. [Anna starts to walk off sadly when Sven nudges Kristoff]Kristoff: Of course I don't wanna help her anymore. In fact, this whole thing has ruined me for helping anyone ever again. [Kristoff pretends to be Sven answering himself] But she'll die on her own! [as himself] I can live with that. [pretending to be Sven again] [as himself] Sometimes I really don't like you. [shouting to Anna as she's walking away in the background] Hold up! We're coming. [Sven licks Kristoff's face in approval Anna stops and turns]Anna: You are?! I mean, sure. I'll let you tag along. [Sven runs off to catch up with Anna, Kristoff smiles then gets up to join them] [as they walk on all through the night towards the North Mountain, Anna turns and catches sight of Arendelle covered in ice and snow] Arendelle.Kristoff: It's completely frozen.Anna: But it'll be fine. Elsa will thaw it.Kristoff: Will she?Anna: Yeah. Now come on. [pointing straight ahead] This way to the North Mountain?[Kristoff chuckles and moves her pointed hand upwards]Kristoff: More like this way. [Anna is shocked as she catches a glimpse of top of the mountain through the clouds] [on their journey they walk through a forest covered in snow and ice]Anna: I never knew winter could be so beautiful. [suddenly they hear a voice coming from nowhere]Olaf: Yeah! It really is beautiful, isn't it? But it's so white. You know, how about a little color? I'm thinking like maybe some crimson, chartreuse. How about yellow? [as Anna and Kristoff try to look around to see where the voice is coming form suddenly a noseless Olaf wanders up behind them] No, not yellow. Yellow and snow? Brrrr...no go! [he laughs and walks over to stand between Anna and Kristoff] Am I right? [shocked, Anna screams and kicks Olaf's head which flies off his body and lands in Kristoff's hands] Hi!Kristoff: You're creepy. [Kristoff tosses the head to Anna who immediately tosses it back to Kristoff]Anna: I don't want it! [Kristoff tosses back to her]Kristoff: Woh! Back at ya! [Anna tosses it back to Kristoff]Olaf: Please, don't drop me. [Kristoff tosses back to Anna again]Kristoff: Come on, it's just a head.Anna: No! [Olaf's headless body runs around with his arms waving]Olaf: Alright, we got off to a bad start.Anna: Ew, ew, the body! [Anna throws Olaf's head back onto his body and it lands upside down onto him]Olaf: Wait. What am I looking at right now? Why are you hanging off the earth like a bat?Anna: Alright. Wait one second. [feeling sorry for him Anna comes over and puts his head right side up]Olaf: Oh! Thank you!Anna: You're welcome.Olaf: Now I'm perfect.Anna: Well, almost.Olaf: It was like my whole life got upside down. [Anna takes a carrot out of the satchel and suddenly slams it all the way through Olaf's head between his eyes] Wooh!Anna': Oh! Too hard. I'm sorry! I was just...Olaf: Head rush!Anna: Are you okay?Olaf: Are you kidding me? I am wonderful! I've always wanted a nose. [he tries to grab the little bit of carrot sticking out between his eyes] So cute. It's like a little baby unicorn. [Anna pushes forward the carrot sticking out the back of Olaf's head] What? Hey! Woh! [seeing his big carrot nose sticking out from between his eyes] Oh, I love it even more! Hah. Alright, let's start this thing over. Hi everyone. I'm Olaf. And I like warm hugs. [Olaf faces Anna and opens his arms]Anna: Olaf? [Anna suddenly realizes he's the snowman from her and Elsa's childhood] That's right, Olaf.Olaf: And you are?Anna: Oh, um...I'm Anna. [turning to Kristoff and Sven]Olaf: And who's the funky-looking donkey over there?Anna: That's Sven.Olaf: Uh-huh. And who's the reindeer?Anna: Sven. [looking and Kristoff and Sven]Olaf: Oh! They're...oh, okay. Makes things easier for me. [suddenly Sven tries to bite off Olaf's nose but Olaf jumps back] Ha! Aw, look at him trying to kiss my nose. [to Sven] I like you, too!Anna: Olaf, did Elsa build you?Olaf: Yeah. Why? [Kristoff takes one of Olaf's stick arms off, looking at it in curiosity]Kristoff: Fascinating.Anna: Do you know where she is?Olaf: Yeah. Why?Anna: Do you think you could show us the way?Olaf: Yeah. Why?[Kristoff bends Olaf's arm]Kristoff: How does this work? [suddenly Olaf's dismembered arm slaps Kristoff across the face] Ow! [Olaf grabs his arm back from Kristoff]Olaf: Stop it, Sven. Trying to focus here. [he puts his arm back in place and turns back to Anna] Yeah, Why?Kristoff: I'll tell you why. We need Elsa to bring back summer.Olaf: Summer?Anna: Mm-hmm.Olaf: Oh, I don't know why but I've always loved the idea of summer, and sun, and all things hot.Kristoff: Really? I'm guessing you don't have much experience with heat.Olaf: Nope! But sometimes I like to close my eyes and imagine what it'd be like when summer does come. [thinking of summer Olaf goes into his fantasy world and starts singing "In Summer" as he stand on top of a grassy meadow with the sun shinning and bees buzzing around him] Bees'll buzz, kids'll blow a dandelion fuzz. And I'll be doing whatever snow does in summer. [Olaf lies on the beach with a drink in his hand] A drink in my hand, my snow up against the burning sand. Probably getting gorgeously tanned in summer. [next Olaf sails in a boat] I'll finally see a summer breeze blow away a winter storm, and find out what happens to solid water when it gets warm. [Olaf jumps into the water, then he's back on the beach with snowmen made out of sand] And I can't wait to see, what my buddies all think of me. Just imagine how much cooler I'll be in summer! [Olaf and a seagull start tap dancing] Da-da...da-doo. Ah-bah-bah-bah-bah-bah-booh. [Olaf and another snowman are in a hot tub drinking hot chocolate] The hot and the cold are both so intense. Put 'em together, it just makes sense! [then Olaf tap dances with a flock of seagulls] Rat-da-dat-dad-dada-dada-doo. [Olaf continues singing as he runs down the grassy meadow] Winter's a good time to stay in and cuddle, but put me in summer and I'll be a... [he comes across a puddle, looks down at it, smiles and jumps over it] Happy snowman! [he lies back on a picnic blanket in the grassy meadow and looks up at the sky] When life gets rough I like to hold on to my dream of relaxing in the summer sun, just letting off steam. Oh, the sky will be blue. [sat next to him are Kristoff, Anna and Sven] And you guys will be there too. When I finally do what frozen things do in summer! [we're back in the reality of frozen forest with Anna and Kristoff staring at Olaf]Kristoff: I'm gonna tell him.Anna: Don't you dare. [Olaf finishes singing his final note]Olaf: In summer! [to Anna and Kristoff] So, come on! Elsa's this way. [he starts leading them off] Let's go bring back summer!Anna: I'm coming! [Sven join them, Olaf laughs as he leads them, Kristoff stares as they go off]Kristoff: Somebody's gotta tell him. [back in Arendelle, the town is completely covered in snow and two men argue in the town square]Man #1: No, no. You've got the bark facing down. The bark needs to be face-up.Man #2: Bark down is drier! [they both start pulling at the bark]Man #1: Bark up! Bark down! [we then see Hans and two guards giving out cloaks to the people]Hans: Cloak? Does anyone need a cloak? [he offers one to a woman]Woman: Arendelle is indebted to you, your Highness.Hans: The castle is open. There is soup and hot glogg in the Great Hall. [he hands the stack of cloaks in hand to a guard] Here. Pass these out. [at that moment the Duke walks towards him with this two guards]Duke: Prince Hans, are we just expected to sit here and freeze while you give away all of Arendelle's tradeable goods?Hans: Princess Anna has given her orders...Duke: And that's another thing! Has it dawned on you that your princess may be conspiring with a wicked sorceress to destroy us all?Hans: Do not question the Princess. She left me in charge, and I will not hesitate to protect Arendelle from treason.Duke: [looking flabbergasted] Treason?! [Anna's horse returns looking frightened]Hans: Woh! Woh! Woh, boy. Easy. Easy. [Hans steadies the horse and the crowd start panicking]Voice of Man: That's Princess Anna's horse.Voice of Woman: But where is the Princess?[Hans looks out to the mountain and then turns to face the crowd]Hans: Princess Anna is in trouble. I need volunteers to go with me to find her. [some of the crowd step forward to volunteer]Duke: I volunteer two men, my Lord! [to his two guards] Be prepared for anything. And should you encounter the Queen, you are to put an end to this winter. Do you understand? [as they make their way on the North Mountain]Kristoff: So how exactly are you planning to stop this weather?Anna: Oh, I am gonna talk to my sister.Kristoff: That's your plan? My ice business is riding on you talking to your sister?Anna: Yup. [distracted by Anna's reply suddenly Kristoff walks into the end of an icicle which hits his nose, he carefully moves around the spike]Kristoff: So you're not at all afraid of her?Anna: Why would I be?Olaf: Yeah. I bet she's the nicest, gentlest, warmest person ever. [Olaf turns to look at them as he carries on walking and suddenly he walks right onto an icicle and it runs through his torso and dismembers his upper body from his lower body, he looks down] Oh, look at that. I've been impaled. [he laughs] [they reach the mountain wall which goes straight up]Anna: What now? [Kristoff looks up at the wall]Kristoff: Mm. It's too steep. I've only got one rope and you don't know how to climb mountains.Anna: Says who? [as Kristoff is busy getting the rope out Sven nudge him and he looks up to see Anna trying to climb the steep mountain wall]Kristoff: What are you doing?Anna: I'm going to see my sister!Kristoff: You're gonna kill yourself. I wouldn't put my foot there. [Anna's foot slips]Anna: You're distracting me.Kristoff: Or there. [Anna slips again] How do you know Elsa even wants to see you?Anna: Alright, I'm...I'm just blocking you out cause I gotta concentrate here. [we hear Anna slipping again]Kristoff: You know, most people who disappear into the mountains want to be alone.Anna: Nobody wants to be alone. Except maybe you.Kristoff: I'm not alone. I have friends, remember?Anna: You mean the love experts?Kristoff: Yes, the love experts. [as Anna continues to climb the wall]Anna: Please tell me I'm almost there. [we suddenly see that she's only managed to climb a few inches up the wall] Does the air seem a bit thin to you up here? [Kristoff chuckles]Kristoff: Hang on. [as Kristoff goes to help Anna Olaf interrupts]Olaf: Hey, Sven? Not sure if this is gonna solve the problem, but I found a staircase that leads exactly where you want it to go.Anna: Ha-ha. Thank goodness! Catch! [she drops off and lands into Kristoff's arms] Thanks! That was like a crazy trust exercise. [she hops off his arms and goes over to join Olaf] [they reach the ice staircase Elsa had build, they look up in amazement at Elsa's ice palace] Woh.Kristoff: Now that's ice. I might cry.Anna: Go ahead. I won't judge. [she starts walking up the ice staircase, Sven goes to follow her but slips on the ice and scrambles as his hooves keep slipping]Kristoff: Alright, take it easy, boy. Come here, I gotcha. [Kristoff helps Sven back down the stairs] Okay. You stay right here, buddy. [Sven slams his butt down to sit and wait, Kristoff starts climbing the stairs] Flawless. [Anna arrives at the door of the ice palace, holds up her hand to knock but hesitates]Olaf: Knock. Just knock. [Anna just stand motionless holding up her hand; to Kristoff] Why isn't she knocking? Do you think she knows how to knock? [Anna finally knocks and the ice doors opens]Anna: It opened. That's a first. [before she takes a step inside she looks at Olaf and Kristoff] Oh, you should probably wait out here.Kristoff: What?Anna: Last time I introduced her to a guy, she froze everything.Kristoff: But...but...oh, come on! It's a palace made of ice! Ice is my life!Olaf: Bye, Sven. [Olaf turns to step inside but Anna stops him]Anna: You too, Olaf.Olaf: Me?Anna: Just give us a minute.Olaf: Okay. [as Anna walks inside Olaf starts counting down the minute] One...two...three...four... [he turns to join Kristoff as he sits on the steps outside, then the doors close] [Anna walks into the palace and looks up at the beautiful icy ceiling]Anna: Whoa. [she looks around] Elsa? It's me, Anna. [as she goes to walk she slips but steadies herself]Elsa: Anna? [Anna looks up and sees Elsa up the balcony and is struck by her beauty]Anna: Wow. Elsa, you look different. It's a good different. And this place...it's amazing.Elsa: Thank you. I never knew what I was capable of.Anna: I'm so sorry about what happened. If I'd have known...Elsa: No, no. It's okay. You don't have to apologize. But you should probably go, please.Anna: But I just got here.Elsa: You belong down in Arendelle.Anna: So do you.Elsa: No, Anna. I belong here. Alone. Where I can be who I am without hurting anybody.Anna: Actually, about that... [suddenly we hear Olaf's voice still counting down the minute]Olaf: Fifty-eight...fifty-nine...sixty.Elsa: Wait. What is that? [Olaf opens the doors and enters the palace running towards them]Olaf: Hi, I'm Olaf and I like warm hugs! [he comes to stand next to Anna]Elsa: Olaf?Olaf: You built me. Remember that?Elsa: And you're alive?Olaf: Um...I think so? [Elsa looks down at her hands and smiles]Anna: He's just like the one we built as kids.Elsa: Yeah.Anna: Elsa, we were so close. We can be like that again. [suddenly Elsa has a terrifying face when she has a flashback to the day she accidentally had hurt Anna when they were children]Young Anna: Catch me!Young Elsa: Slow down! [holding Anna in her arms after striking her unconscious wither her power] Anna! [back to present, Elsa's face drops]Elsa: No, we can't. [Elsa turns to walk away] Goodbye, Anna.Anna: Elsa, wait.Elsa: No, I'm just trying to protect you! [Anna starts climbing the stairs]Anna: You don't have to protect me. I'm not afraid! [Elsa continues to walk away] Please don't shut me out again. Please don't slam the door. [Anna starts singing "First Time in Forever, Reprise" as Elsa walks away from her] You don't have to keep your distance anymore. [Anna follows Elsa] Cause for the first time in forever, I finally understand. For the first time in forever, we can fix this hand in hand. We can head down this mountain together. You don't have to live in fear. Cause for the first time in forever, I will be right here. [Anna follows Elsa up to her living quarters, Elsa turns to her and starts singing]Elsa: Anna, please go back home. Your life awaits. Go enjoy the sun and open up the gates.Anna: Yeah, but...Elsa: I know! You mean well, but leave me be. [Elsa turns and walks out onto the balcony with Anna following her] Yes, I'm alone, but I'm alone and free. Just stay away and you'll be safe from me. [Elsa walks back inside]Anna: Actually, we're not.Elsa: What do you mean you're not?Anna: I get the feeling you don't know?Elsa: What do I not know?Anna: Arendelle's in deep, deep, deep, deep snow. [Elsa looks shocked and they stop singing]Elsa: What?Anna: You kind of set off an eternal winter...everywhere.Elsa: Everywhere?Anna: Oh, it's okay. You can just unfreeze it.Elsa: No, I can't. I...I don't know how! [suddenly it starts to snow in the palace]Anna: Sure you can. I know you can! [they start singing again] Cause for the first time in forever...Elsa: Oh, I'm such a fool! I can't be free!Anna: You don't have to be afraid.Elsa: No escape from the storm inside of me!Anna: We can work this out together. [the snow starts to get heavier and faster]Elsa: I can't control the curse!Anna: We'll reverse the storm with me.Elsa: Oh, Anna, please. You'll only make it worse!Anna: Don't panic.Elsa: There's so much fear!Anna: We'll make the sun shine bright.Elsa: You're not safe here!Anna: We can face this thing together. We can change this winter weather, and everything will be all right.Elsa: No! I can't! [the snow blizzard gets worse then suddenly as Elsa gets more agitated she sucks the blizzard back into herself and then it bursts out and accidentally hits Anna in the heart] [after Anna gets hits in the heart by Elsa's power she falls to her knees, Elsa turns and notices what she's done, at the same time Kristoff rushes towards them]Kristoff: Anna! Are you okay? [he goes to help Anna up]Anna: I'm okay. I'm fine. [Anna stands]Elsa: Who's this? Wait, it doesn't matter. Just...you have to go.Anna: No, I know we can figure this out together. [Kristoff notices icy shadows forming around them]Elsa: How? What power do you have to stop this winter? To stop me? [Kristoff tries to pull Anna away as the icy shadows gets worse around the palace walls]Kristoff: Anna, I think we should go.Anna: No. I'm not leaving without you, Elsa.Elsa: Yes, you are. [she waves her hands and with her power builds a giant snowman, the palace door bursts open and the gian (by: rhfd20 [rhfd20])
====> Reply 1: Beautiful *wipes tear from eye*
====> Reply 2: and the giant snowman is holding Anna, Kristoff and Anna in his hands]Anna: Stop. Put us down!Marshmallow: Go away! [the snowman tosses Anna and Kristoff down the icy steps and they slide down going past Sven, he then goes to toss Olaf]Olaf: Heads up! [the snowman tosses Olaf and his head lands first in a snowbank near Anna and Kristoff] Watch out for my butt! [Anna and Kristoff duck as the rest of Olaf's body slams into the snowbank] [furious at being thrown by the giant snowman, Anna picks up a snowball to throw at it]Anna: It is not nice to throw people![Kristoff stops her and grabs hold of her]Kristoff: Whoa! Whoa, whoa! Feisty pants.Anna: Let me GO!Kristoff: Okay, relax. Just calm down. Calm down!Anna: Okay! Alright! I'm Okay!Kristoff: Just let the snowman be.Anna: I'm calm. [he lets her go and turns]Kristoff: Great. [suddenly Anna growls angrily and tosses the snowball at the giant snowman] Oh, come on! [the snowball hits the giant snowman on the back and this infuriates him] See now you made him mad!Olaf: I'll distract him. You guys go. [Kristoff, Anna and Sven go off, at the same time the rest of Olaf's body falls off the snowbank and runs off] No, no! Not you guys! [the giant snowman goes after Anna and Kristoff and as he walks off Olaf's head falls down into the snow] This just got a whole lot harder. [as the giant snowman chases after them, Anna grabs the branch of a tree]Kristoff: What are you doing? [Anna releases the branch and as it snaps upright it knocks the snowman back] Whoa!Anna: I got him! [they laugh as they run off when they suddenly come to the edge of the cliff]Kristoff: Whoa! Stop!Anna: It's a hundred foot drop.Kristoff: It's two hundred. [Kristoff ties his rope around Anna's waste tightly]Anna: Ow! [we see the other end is ties to his own waste, he then turns to pick up the axe] What's that for? [Kristoff starts using the axe to dig into the snow]Kristoff: I'm digging a snow anchor.Anna: Okay. What if we fall?Kristoff: There's twenty feet of fresh powder down there, it'll be like landing on a pillow. Hopefully. [they hear the snowman approaching] Okay, Anna. On three. [he throws the rest of the rope down the edge of the cliff]Anna: Okay.Kristoff: One...Anna: You tell me when, I'm ready to go.Kristoff: Two...Anna: I was born ready! Yes!Kristoff: Calm down. [suddenly a huge tree flies through the air and lands in front of them]Anna: Tree! [Kristoff looks behind him and sees Anna jumping off the cliff]Kristoff: What the...? [the rope pulls Kristoff over the edge] Whoa! [the other end of the rope on the cliff catches the anchor Kristoff had dug and catches their fall] That happened. [Olaf runs through the snowy woods and we see his body parts are all in the wrong places with his nose stuck on the side of his head]Olaf: Man, am I out of shape! [he stops to take a breather and puts his body back into the right order and puts his nose back into place] There we go. Hey, Anna! Sven! Where'd you guys go? We totally lost Marshmallow back there! [in the same moment Marshmallow emerges through the trees and comes up behind Olaf] Hey. We were just talking about you. [Olaf turns to face Marshmallow] All good things, all good things. [Marshmallow roars and goes to take step forward] No! [Marshmallow stomps forward and Olaf jumps onto his leg to stop him] This is not making much of a difference, is it? [Marshmallow flicks Olaf off his leg and he goes over the cliff screaming right past Anna and Kristoff as they are letting themselves down with the rope]Anna: Olaf!Olaf: Hang in there, guys! [Olaf's body separates as it falls down; to Kristoff]Anna: Go Faster! [suddenly they stop moving] Wait, what? [they look up to see Marshmallow pulling their rope up and Kristoff hits his head against the edge of the cliff] Kristoff! [Marshmallow pulls them up towards his face and roars out]Marshmallow: Don't come back!Anna: We won't. [Anna gets out a knife and cuts the rope and they fall down the cliff screaming] [as they fall down the cliff, Anna lands on the ground up to her waist in the snow] Hey, you were right. Just like a pillow. [she looks up and sees Olaf panicking as his upper half is sat upon Kristoff boots which are sticking out of the snow] Olaf!Olaf: I can't feel my legs! I can't feel my legs! [suddenly Kristoff's head and body pops up from beneath the snow]Kristoff: Those are my legs. [the rest of Olaf's body runs past them]Olaf: Ooh. Hey, do me a favor, grab my butt. [Kristoff grabs the rest of Olaf's body and stick his head back onto it] Oh, that feels better. [Sven comes up behind him and sniffs him] Hey, Sven! He found us. [he grabs hold of Sven's face] Who's my cute little reindeer? [Kristoff pushes him away from Sven]Kristoff: Don't talk to him like that. [Olaf laughs it off] [Kristoff goes to help Anna out of the snow] Here.Anna: Woh!Kristoff: You okay?Anna: Thank you. [they stare at each other for a moment] How's your head? [she touches his head and Kristoff flinches in pain]Kristoff: Ah! Ooh! Uh...it uh...it's fine. Uh...I'm good. Uh...I've got a thick skull.Olaf: I don't have a skull...or bones. [there's an awkward silence]Kristoff: So...uh...so now what?Anna: Now what? [panicking as she realizes what's happened] Now what?! Oooh! What am I gonna do? She threw me out. I can't go back to Arendelle with the weather like this. And then there's your ice business and we...Kristoff: Hey, hey, don't worry about my ice business. [he notices her patch of white hair] Worry about your hair?!Anna: What? I just fell off a cliff! You should see your hair.Kristoff: No, yours is turning white.Anna: White? It's...what? [she picks up one her braid and notices the tendrils turning white]Kristoff: It's because she struck you, isn't it?Anna: Does it look bad?Kristoff: [he hesitates for a moment] No.Olaf: You hesitated.Kristoff: No, I-I didn't. Anna, you need help. Okay? Come on. [he starts leading them off]Olaf: Okay! Where are we going?Kristoff: To see my friends.Anna: The love experts?Olaf: Love experts?!Kristoff: Uh-huh. And don't worry, they'll be able to fix this.Anna: How do you know?Kristoff: Because I've seen them do it before.Olaf: [to Anna and Sven] I like to consider myself a love expert.[back in Elsa' ice palace, she paces around looking distraught and talking to herself]Elsa: Get it together. Control it. Don't feel. Don't feel. Don't feel. Don't feel! [ice cracks, Elsa looks around and notices ice spikes growing out of the castle walls] [as they make their way to Kristoff's friends, Olaf stares at The Northern Lights as he lies down on his back on Sven's back]Olaf: Look, Sven. The sky's awake. [behind them Anna and Kristoff are walking when Anna starts to shiver]Kristoff: Are you cold?Anna: A little. [Kristoff goes to reach put his arm around her but stops himself, he then notices the steam vents up ahead]Kristoff: Uh...uh...wait. Uh...come here. [he takes her to the steam vent and she holds out her hand to warm up]Anna: Ooh. [Kristoff starts to lead off them off again]Kristoff: So, uh...about my friends. Well, I say friends, they're more like family. Anyway, when I was a kid, it was just me and Sven until they, you know, kind of took us in.Anna: They did?Kristoff: Yeah. I don't want to scare you, they can be a little bit inappropriate. And loud, very loud. They're also stubborn at times, and a little overbearing, and heavy. Really, really heavy. Which you'll...but you know, you'll get it. They're fine. They mean well. [Anna touches his arm to reassure him]Anna: Kristoff, they sound wonderful.'Kristoff: Okay then. [Kristoff steps forward, turns to face Anna, Olaf and Sven and opens his arm out] Meet my family. [Kristoff turns to the rocks and waves] Hey, guys! [Olaf and Anna look at him like he's crazy]Anna: [to the rocks] They're rocks.Kristoff: You are a sight for sore eyes. [Anna and Olaf watch him looking dumbfounded; whispering to Anna as they watch Kristoff]Olaf: He's crazy. [they watch Kristoff kneeling down in front of one of the rocks]Kristoff: Hey, woh. I didn't even recognize you. You've lost so much wight.Olaf: I'll distract them while you run. [steps forward and waves at the rocks] Hi, Sven's family! [tapping one of the rocks] It's nice to meet you! [whispering to Anna] Because I love, Anna, I insist you run. [to the rock] I understand you're love experts! Wooh. [whispering to Anna again, who's still standing frozen to the spot looking dumbfounded] Why aren't you running?Anna: Uh...okay. Well, I'm gonna go. [she turns to leave]Kristoff: No, no, no! Anna, wait! [suddenly the rocks start rolling]Anna: Kristoff! [the rocks roll towards Kristoff and unroll revealing themselves as the trolls]Bulda: Kristoff's home! [the trolls jump around with excitement shouting Kristoff's name and Olaf starts to join in]Olaf: Kristoff's home! Wait. Kristoff? [he stops turns to one of the trolls, then one of the trolls grabs Kristoff's hand and yanks him down]Troll #1: Ah, let me look at you. [another troll lifts up his jacket]Troll #2: Take off your clothes! I'll wash them...Kristoff: No! I'm...I'm gonna keep my clothes on. Look, it's great to see you all, but where is Grand Pabbie?Kid Troll #1: He's napping. But look, I grew a mushroom. [he turns and shows the mushroom growing on his back, then another kid troll steps forward]Kid Troll #2: I earned my fire crystal. [an adult troll holds a small stone in his hand]Troll #3: I passed a kidney stone.Kid Troll #3: Kristoff, pick me up! [the kid troll jumps up on Kristoff's arm]Kristoff: You're getting big. Good for you. [another kid troll jumps on his back] [Anna watches the trolls in confusion]Anna: Trolls? They're trolls. [suddenly there's silence and all the trolls turn to look at Anna]Bulda: He's brought a girl!All Trolls: A girl! [the trolls pick Anna up by her feet and rolls her down and throw her into Kristoff's arms]Anna: What's going on?Kristoff: I've learned to just roll with it. [he puts Anna down on her feet and immediately Bulda pulls her forward and starts examining her face]Bulda: Let me see. Bright eyes. Working nose. Strong teeth. Yes, yes. She'll do nicely for our Kristoff.Anna: Wait, wait, wait! Oh. Um...no. [Kristoff looks embarrassed]Kristoff: You've got the wrong idea.Anna: No.Kristoff: No. That's not why I brought her here.Anna: Right. We're not. I'm not... [Anna smiles, looking uncomfortable]Bulda: What's the issue, dear? Why are you holding back from such a man? [she starts singing "Fixer Upper"] Is it the clumpy way he walks?Kristoff: What?Troll #1: Or the grumpy way he talks?Anna: Oh, no.Troll #2: Or the pear-shaped, square-shaped weirdness of his feet? [she pick up his foot]Kristoff: Hey!Troll #3: And though we know he washes well he always ends up sorta smelly.Bulda and Troll #1: But you'll never meet a fella who's as sensitive and sweet.Anna: That's nice. But...Bulda and Troll#1: So he's a bit of a fixer upper. So he's got a few flaws.Troll #4: Like his peculiar brain, dear.Troll #5: His thing for the reindeer.Troll #4 and Troll #5: That's a little outside of nature's laws.Kristoff: This is not about me!All Trolls: So he's a bit of a fixer upper, but this we're certain of. You can fix this fixer upper up with a little bit of love. [they push Kristoff towards Anna and they both look embarrassed]Anna: Um...Kristoff: [to the trolls as they continue to sing] Can we please just stop talking about this? We've got a real, actual problem here.Kristoff: Can we please just stop talking about this? We've got a real, actual problem here.Bulda: I'll say. So tell me dear, is it the way that he runs scared?Troll #5: Or that he's socially impaired?Kid Troll #3: Or that he only likes to tinkle in the woods?Anna: I did not need to know that.Troll #1: Are you holding back your fondness due to his unmanly blondness? [Anna laughs]All Trolls: Or the way he covers up that he's the honest goods? He's just a bit of a fixer upper. He's got a couple of' bugs.Kristoff: No, I don't!All Trolls: His isolation is confirmation of his desperation for healing hugs. [they all hug Kristoff] So he's a bit of a fixer upper, but we know what to do. The way to fix up this fixer upper is to fix him up with you. [the girl trolls pulls Anna away and the boy trolls pull Kristoff away in the opposite direction]Kristoff: Stop it. Stop it. Stop it. Enough! She's engaged to someone else. Okay?! [the trolls stare at him, blink and then they huddle together]Boy Troll #1: So she's a bit of a fixer upper.Boy Troll #2: That's a minor thing.Boy Troll #3: Her quote "engagement" is a flex arrangement.Kid Troll: And by the way, I don't see no ring.All Boy Trolls: So she's a bit of a fixer upper, her brain's a bit betwixt. Get the fiance out of the way and the whole thing will be fixed! [Kristoff puts his face in his hands in frustration] [the girls trolls continue to sing to Anna]Bulda: We aren't saying you can change him cause people don't really change. We're only saying that love's a force that's powerful and strange. People make bad choices if they're mad or scared or stressed. But throw a little love their way...All Girl Trolls: Throw a little love their way and you'll bring out their best! True love brings out the best! [the trolls put on Anna and Kristoff cloaks and crowns made out of leaves, wood and stones]All Trolls: Everyone's a bit of a fixer upper, that's what it's all about.Boy Troll: FatherGirl Troll: Sister.Kid Troll: Brother!All Trolls: We need each other to raise us up and round us out. Everyone's a bit of a fixer upper, but when push comes to shove. [they push Anna and Kristoff closer together]Olaf: The only fixer upper fixer that can fix a fixer upper is...All Trolls: True, true, true, true, love. Love, love, love, true love. True... [a troll priest stands in front of Anna and Kristoff]Troll Priest: Do you, Anna, take Kristoff to be your trollfully wedded...Anna: Wait, what?!Troll Priest: You're getting married.All Trolls: Love! [just then Anna collapses, Kristoff catches her]Kristoff: Anna!Kristoff: [holding Anna in his arms] She's as cold as ice. [just then Grand Pappie rolls in]Grand Pabbie: There is strange magic here.Kristoff: Grand Pabbie!Grand Pabbie: Come, come. Bring her here to me. [Kristoff helps Anna over to Grand Pabbie who takes her hands] Anna, your life is in danger. There is ice in your heart, put there by your sister. If not removed, to solid ice will you freeze, forever.Anna: What? No.Kristoff: But you can remove it, right?Grand Pabbie: I cannot. I'm sorry, Kristoff. If it was her head that would be easy, but only an act of true love can thaw a frozen heart.Anna: An act of true love?Bulda: A true love's kiss, perhaps? [Bulda kisses they boy troll next to her and the rest of the trolls kiss each other, Anna collapses again into Kristoff's arms and more of her hair turns white]Kristoff: Anna, we've got to get you back to Hans.Anna: [looking very weak] Hans.Kristoff: Pull us out, Sven. [Kristoff grabs one of Sven's antlers and he pulls them up onto his back] Olaf! Come on!Olaf: I'm coming! [Olaf jumps onto Sven's back to join Kristoff and Anna and Sven takes off] Let's go kiss Hans! Who is this Hans?![Hans and the men from Arendelle have found Elsa's ice palace; Hans turns to the men]Hans: We are here to find Princess Anna. Be on guard, but no harm is to come to the Queen. [he gets off his horse] Do you understand?Men: Yes, sir. [just as Hans approaches the ice staircase suddenly Marshmallow rises and slams his fists down and roars, Hans and the men draw their swords, Marshmallow throws the men aside including the Duke's two guards, just then they notice Elsa looking through the front door]Duke's Guard #1: The Queen. [as Hans is fighting off Marshmallow he notices the Duke's guards running up into the castle after Elsa] Come on! [they notice Elsa running up to the top floor]Duke's Guard #2: Up there!Duke's Guard #1: Come on! [they chase after her and trap her on the top floor] We got her! [they raise their crossbows]Elsa: No! Please! [one of the Duke's guards shoots an arrow but Elsa manages to produce an ice shield top stop the arrow hitting her]Duke's Guard #1: Go round! [the two guards go round the shield and aim to shoot at her again]Elsa: Stay away! [she throws ice at them to stop them]Duke's Guard #1: Fire! Fire! [Elsa shoot more ice at the guard to stop him] Get her! Get her! [outside the castle Hans continues to fight off Marshmallow as he attacks them and after nearly being crushes Hans manages to use his sword to cut off one of Marshmallow's legs making him fall over the edge of the cliff] [inside the castle Elsa continues to defend herself againt the Duke's guards using her powers, she manages to get one stuck to the wall with several icicles and as she's about to throw the other one off the balcony with her ice Hans and the rest of he men enter]Hans: Queen Elsa! Don't be the monster they fear you are! [Elsa snaps out of her rage, just then the guard stuck to the wall aims his crossbow her, but Hans quickly runs and holds the crossbow up just as he fires the arrow which then hits the ice chandelier overhead making it fall and nearly crushes Elsa, but she manages to run in time but is knocked down unconscious] [Elsa wakes up to find herself locked up in a tower in her castle, she notices the window and runs towards it but she's stopped by the chains on her hands, she strains to look out the window and notices Arendelle is completely frozen and covered in snow]Elsa: Oh, no. What have I done? [just then Hans enters] Why did you bring me here?Hans: I couldn't just let them kill you.Elsa: But I'm a danger to Arendelle. Get Anna.Hans: Anna has not returned. [Elsa turns to look at the window with worry] If you would just stop the winter, bring back summer. Please.Elsa: [looking distraught] Don't you see, I can't. You have to tell them to let me go.Hans: I will do what I can. [he turns and leaves, Elsa looks down at her shackled hands and sees the shackles begin to freeze over] [Kristoff holds onto Anna as Sven rushes to get them back to Arendelle with Olaf gliding on the snow next to them, as Anna shivers in his arms Kristoff puts his hat on her head]Kristoff: Just hang in there. [to Sven] Come on, buddy, faster! [as they go down the hill towards Arendelle Olaf looses control as he slides down the hill]Olaf: I'll meet you guys at the castle!Kristoff: Stay out of sight, Olaf! [as Kristoff rides into Arendelle]Olaf: I will! [Olaf slides off into the village streets and we hear a woman scream as she notices him] Hello!Townswoman: It's alive! [the guards notice Kristoff and Anna riding towards the castle on Sven]Guard: It's Princess Anna! [they stop outside the castle gates, Kristoff jumps off Sven with Anna in his arms, she shivers as he walks towards the door]Anna: Are you go-gonna be okay?Kristoff: Don't worry about me. [the castle gates open, Gerda, Kai and another maid rush to help Anna]Gerda: Anna! Oh, you had us worried sick.Kai: My Lady. [they take Anna from his arms and helps her walk through the castle gates]Kristoff: Get her warm and find Prince Hans, immediately.Kai: We will. Thank you.Kristoff: Make sure she's safe! [as Anna is swept away towards the castle she looks at him before the castle gates shut, Kristoff stands there for a moment looking with worry, finally he turns and walks off] [inside the castle Hans meets with some of the dignitaries]Hans: I'm going back out to look for Princess Anna.French Dignitary: You cannot risk going out there again.Hans: If anything happens to her...Spanish Dignitary: If anything happens to the Princess, you are all Arendelle has left. [just then Kai and Gerda bring Anna into the room]Kai: He's in here. Prince Hans. [Hans rushes over to Anna]Hans: Anna! [he takes her into his arms]Hans: You're so cold.Anna: Hans, you have to kiss me.Hans: What?Anna: Now! Now!Hans: Woh. Slow down.Gerda: We'll give you two some privacy. [everyone leaves the room]Hans: What happened out there?Anna: Elsa struck me with her powers.Hans: You said she'd never hurt you.Anna: I was wrong. [Anna doubles over in pain]Hans: Anna? [Hans picks her up sets her down on the couch nearby] [Hans sits next to her as she lies on the couch]Anna: She froze my heart and only an act of true love can save me.Hans: A true love's kiss. [he strokes her face gently then leans in to kiss her but then stops] Oh, Anna. If only there was someone out there who loved you.Anna: What? [Hans gets up and walks towards the window] You said you did. [Hans closes the curtains]Hans: As thirteenth in line in my own kingdom, I didn't stand a chance. I knew I'd have to marry into the throne somewhere.Anna: But...what are you talking about? [Hans puts out the candles]Hans: As heir, Elsa was preferable, of course, but no one was getting anywhere with her. But you...Anna: Hans?Hans: You were so desperate for love, you were willing to marry me, just like that. I figured, after we married, I'd have to stage a little accident for Elsa. [he grabs a pitcher of water from the table, he goes over to the fireplace and pours the water on the fire putting it out, Anna falls to the floor]Anna: Hans. No, stop.Hans: But then she doomed herself, and you were dumb enough to go after her.Anna: Please.Hans: All that's left now is to kill Elsa and bring back summer.Anna: You're no match for Elsa. [Hans walks over to Anna, bends down and takes her chin]Hans: No, you're no match for Elsa. I, on the other hand, am the hero who is going to save Arendelle from destruction. [he turns and walks towards the door]Anna: You won't get away with this. [as he opens the door he turns to look at her]Hans: Oh, I already have. [he leaves and locks the door, Anna goes over to the door and tries to open it]Anna: Please, somebody help. [suddenly the rest of her hair turns white and she collapses on the floor leaning next to the door] Please. Please! [at a council meeting with all the dignitaries]Duke: It's getting colder by the minute. If we don't do something soon we'll all freeze to death. [Hans enters the room]Hans: Prince Hans. [pretending to look distraught] Princess Anna is...dead.Spanish Dignitary: What...? [the men help Hans to a chair]Duke: What happened to her?Hans: She was killed by Queen Elsa.Duke: No! Her own sister.Hans: At least we got to say our marriage vows...before she died in my arms.Duke: There can be no doubt now, Queen Elsa is a monster and we are all in grave danger.Spanish Dignitary: Prince Hans, Arendelle looks to you.Hans: With a heavy heart, I charge Queen Elsa of Arendelle with treason and sentence her to death. [inside her cell, Elsa notices ice taking over the walls, she tries to pull her arms out of the shackles when she hears the guards outside]Guard #1: Hurry Up! She's dangerous. Move quickly.Guard #2: Be careful.Guard #3: It won't open!Guard #4: It's frozen shut. [just the ice takes over the cell the guards break open the cell door, Hans pushes passed the guards to enter and they see Elsa has escaped by using her powers to blow open the back wall] [Kristoff and Sven, looking sad and forlorn, head back to the mountain, Sven stops, looks back then runs past Kristoff to stops in front of him and grunt]Kristoff: What is it, buddy? [Sven nudges Kristoff with his antlers] Hey, watch it. What's wrong with you? [Sven does a couple loud grunts] I don't understand you when you talk like that. [as Kristoff goes to walk on suddenly Sven lifts him off the ground with his antlers] Ah! Stop it! Put me down! [Sven dumps Kristoff to the ground and does another grunt] No, Sven! We're not going back! She's with her true love. [Sven makes a face as if to say "no, she isn't"; just then the wind picks up, Kristoff looks back] What the... [he sees a blizzard forming over Arendelle] Anna! [he hops on Sven and rushes back towards Arendelle] Come on! Come on, boy! [back inside the castle in the locked room, Anna is lying on the floor shivering with cold, she sees ice forming on the ceiling then the door handles jiggle as someone tries to open them]Anna: Help. [suddenly the door opens and we see Olaf taking the carrot out of the lock and putting it back on his face, he enters the room and notices Anna lying on the floor]Olaf: Anna! Oh, no. [he notices the fireplace is out, he quickly places more wood in the fireplace and accidentally throws one of his arms in there, he quickly retrieves his arm and lights up the fireplace]Anna: Olaf? Olaf, get away from there. [Olaf stands by the fire looking at it in awe]Olaf: Whoa! So this is heat. I love it. [he leans closer and holds out his hands towards the fire when suddenly one of his hands catches fire] Ooh! But don't touch it! [he shakes the flame out and goes over to Anna and helps her to sit closer to the fire] So, where's Hans? What happened to your kiss?Anna: I was wrong about him. It wasn't true love.Olaf: But we ran all the way here?Anna: Please, Olaf, you can't stay here, you'll melt.Olaf: I am not leaving here until we find some other act of true love to save you. [Olaf sits behind her to shield himself from the fire] Do you happen to have any ideas?Anna: I don't even know what love is.Olaf: That's okay, I do. Love is putting someone else's needs before yours. Like, you know, how Kristoff brought you back here to Hans and left you forever. [a realization comes over Anna]Anna: Kristoff loves me? [Olaf moves around to face her]Olaf: Wow, you really don't know anything about love, do you? [the fire starts to melt his face and he pushes his nose back in]Anna: Olaf, you're melting.Olaf: Some people are worth melting for. [as his face starts to melt he tries to hold it up] Just maybe not right this second! [suddenly the blizzard outside blows the windows open] Don't worry, I've got it! [Olaf rushes over to the window and starts to close the windows] We're going to get through... [suddenly he notices something] Oh, wait. Hang on. I'm getting something. [he breaks an icicle off the window and uses it as a telescope] It's Kristoff and Sven! They're coming back this way.Anna: They...they are?Olaf: Wow, he's really moving fast. I guess I was wrong. I guess Kristoff doesn't love you enough to leave you behind.Anna: Help me up, Olaf. Please. [he rushes over to her as she tries to get up]Olaf: No, no, no, no, no. You need to stay by the fire and keep warm.Anna: I need to get to Kristoff.Olaf: Why? [Olaf suddenly looks excited as he realizes why] Oh, I know why! There's your act of true love right there! Riding across the fjords like a valiant, pungent reindeer king! [he helps Anna to stand] Come on! [as they got to leave suddenly they see icicles forming on the ceiling, they rush out of the room] Look out! [as they run through the hallway the walls and ground start to ice over and suddenly they stop when huge spiky icicles form ahead of them] Uh...back this way! [as they turn to go the other way more huge icicles form and stop them in their tracks] We're trapped. [they look around as the whole castle starts to ice over; out on the fjords Elsa is runs through the blizzard] [back at the castle Anna and Olaf bust open a window and Olaf helps Anna to step on the ledge] Slide, Anna! [they both jump down and slide down the snow with Olaf gathering the snow around his body, as the stop at the bottom his bottom half looks huge with extra snow] We made it! [as Anna gets to her feet Olaf shakes off the extra snow; on the fjords Kristoff rides Sven as fast as he can when they hit the blizzard]Kristoff: Come on, buddy, faster! [we see Anna and Olaf reach the shore of fjords]Anna: Kristoff! [as they start walking the blizzard blows Olaf's body apart, he shouts as he goes swirling off]Olaf: Keep going! [Anna struggles through the blizzard]Anna: Kristoff! [Kristoff continues to ride Sven as fast as he can through the fjord]Kristoff: Come on! [as Anna struggles to walk through the blizzard she looks down at her hands and notices her fingers start frosting over]Anna: No! [she struggles on; back to Kristoff and Sven, as they race ahead one of the frozen ships falls to the side causing a massive crack in the ice which causes Sven to jump and Kristoff falls off his back onto a piece of ice, Kristoff looks out and sees Sven has fallen into the water]Kristoff: Sven! [Sven manages to pull himself out of the water and onto a piece of broken ice] Good boy. [Kristoff turns and rushes off on foot; back with Anna, she continues to struggle through the blizzard with her hands now frosted over]Anna: Kristoff. [as Kristoff is rushing on he hears Anna's voice] Kristoff.Kristoff: Anna! [as Elsa struggles through the storm she notices Hans approaching her]Hans: Elsa! You can't run from this! [she turns to face him]Elsa: Just take care of my sister.Hans: Your sister? She returned from the mountain weak and cold. She said that you froze her heart.Elsa: No.Hans: I tried to save her, but it was too late. Her skin was ice, her hair turned white. [Elsa suddenly realizes what she's done] Your sister is dead...because of you.Elsa: No. [totally distraught, Elsa turns and falls to her knees, instantly the blizzard stops] [as the blizzard has stopped Anna, now hardly able to move, sees Kristoff walking towards her across the fjord]Anna: Kristoff?Kristoff: Anna! [Kristoff rushes towards her, Anna goes to move towards him when she hears something , she look to the side to see Hans has raised his sword ready to kill Elsa, who's on her knees weeping]Anna: Elsa? [conflicted she watches as Kristoff runs towards her, she turns to go save Elsa and throws herself in front of Elsa just as Hans is about to strike with his sword] No! [suddenly Anna's whole body freezes to solid ice, and as the sword hits her the force of it sends Hans flying back]Elsa: Anna! [Elsa rises and stands in front Anna's frozen body] Oh, Anna. No..no, please, no. [she touches Anna's face and begins to weep, she then hugs Anna as she cries, just then both Olaf and Kristoff have reached them from opposite ends of the fjords]Olaf: Anna? [Sven comes over to join Kristoff and they watch in shock and sadness as Elsa weeps over Anna's frozen body] [as Elsa holds on to Anna's frozen body and weeps suddenly Anna's body starts to unfreeze and come to life]Elsa: Anna? [they hug each other and hold on to each other tightly]Anna: Oh, Elsa.Elsa: You sacrificed yourself for me?Anna: I love you. [Olaf's face lights up as he realizes what saved Anna]Olaf: An act of true love will thaw a frozen heart.Elsa: Love will thaw... [she looks at Anna] Love. Of course. [she looks at her hands]Anna: Elsa?Elsa: Love. [Elsa raises her arms and suddenly the ice on the fjord starts to melt, beneath their feet the bow of a ship thaws and rises as they stand on it, the snow and ice across the kingdom melts bringing back the warm summer; to Elsa]Anna: I knew you could do it.Olaf: Hands down, this is the best day of my life...and quite possibly the last. [as Hans regains consciousness Kristoff prepares to go over to fight him but Anna stops him, she walks over to Hans and he looks at her in confusion]Hans: Anna? But she froze your heart.Anna: The only frozen heart around here is yours. [she turns from him but then suddenly turns back and punches him in the face making him fall overboard into the water, Elsa comes over to Anna and they hug each other, over her shoulder, Anna looks at Kristoff smiling] [later Hans is thrown into one of the ships cell and locked in, on the deck the French Dignitary is talking with Kai]French Dignitary: I will return this scoundrel to his country. We shall see what his twelve big brothers think of his behavior.Kai: Arendelle thanks you, my Lord. [just then the Duke is being escorted by some guards onto the ship]Duke: This is unacceptable. I'm a victim of fear. I have been traumatized. [he holds his neck in pain] Ow! My neck hurts! Is there a doctor that I could see? No? [he sees that no one is buying this act] I demand to see the Queen! [Kai steps down behind him]Kai: Oh, I have a message from the Queen. [he reads from the scroll] Arendelle will henceforth and forever no longer do business of any sort with Weaseltown.Duke: Weselton! It's Weselton! [the guards drag him up onto the ship] [Anna runs through the crowd towards the village square pulling a blindfolded Kristoff behind her]Anna: Come on, come on, come on. Come on, come on, come on. Come on...Kristoff: Ow! Okay, okay. Here I come. [suddenly he smacks straight into a pole] Ah! Pole!Anna: Oops. Sorry. [she drags him to a spot by the docks] Okay. Okay. Here we are. [she notices he still has his blindfold] I owe you a sled.Kristoff: [looking in total shock] Are you serious?Anna: Yes! And it's the latest model. [Sven poses in front of the sled]Kristoff: No. I-I can't accept this.Anna: You have to! No returns. No exchanges. Queen's orders. She's named you the official Arendelle Ice Master and Deliverer. [Sven shows off the medal around his neck]Kristoff: What? That's not a thing.Anna: Oh, sure it is. And it even has a cup holder. Do you like it?Kristoff: Like it? I love it! [suddenly he sweeps her off her feet and spins her around] I could kiss you! [there's an awkward embarrassed silence and he puts her back on her feet] I could. I mean, I'd like to. I'd...may I? We me...I mean, may we? Wait, what? [Anna steps forward and kisses him on the cheek]Anna: We may. [he smiles and kisses her] [Olaf runs excitedly through the village square with his little snow cloud following him above his head]Olaf: Summer! [he notices some flowers] Ooh. Hello. [he bends and takes a long sniff of the flowers pulling up some of the pollen up his nose which makes him sneeze and his carrot nose lands straight into Sven's mouth who puts it in his mouth, looking distraught at being noseless suddenly Sven stuffs the carrot back into Olaf's face, he laughs and hugs Sven] [last lines; Elsa stands in the castle courtyard with villagers around her]Elsa: Are you ready? [the villagers cheer and using her powers Elsa creates an ice rink, everyone starts ice skating, Anna slides over to Elsa and she catches Anna just before she slips]Anna: I like the open gates.Elsa: We are never closing them again. [Elsa waves her hand form ice skates over Anna's boots]Anna: Oh, Elsa, they're beautiful, but you know I don't skate...Elsa: Come on, you can do it! [Elsa grabs hold of Anna's hands and pulls her along on the ice, Kristoff and Sven slide past them]Kristoff: Look out, reindeer coming through! [Elsa holds on to Anna's hands as she tries to ice skate]Anna: I got it. I got it. [suddenly she starts to slip] Ooh! I don't got it! I don't got it! [Olaf slides in and joins them]Olaf: Hey, guys.Elsa: That's it, Olaf. [Olaf helps Elsa to teach Anna to skate]Olaf: Glide and pivot and glide and pivot... [Olaf and Elsa continue to show Anna to skate and everyone enjoys themselves][after credits scene; Marshmallow, who is still alive, wanders into Elsa's ice palace stumbling as his legs are amputated, he steps onto Elsa's tiara, he picks it up, looks around then puts the tiara on his head which makes him smile and calms him down]



ID: 4256004
Created: 6:11pm, 05 Jan 2020
Consider the array: 4, 1, 3, 2, 5.Using Bubble sort, how many passes through the array are required to sort it from lowest to highest?Note: not including a final pass to confirm correct order.
a) 1
*b) 2
c) 3
d) 4
e) 5
Explanation: After the first pass, order will be 1, 3, 2, 4, 5After the second pass, order will be 1, 2, 3, 4, 5
Tags: Sorting
Author: marlzjh (mh2220)
Avg Rating: 4.3300
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4256002
Created: 6:08pm, 05 Jan 2020
Consider an algorithm with the following time complexity for an input n:What is the asymptotic time complexity of this function?
a)
*b)
c)
d)
e)
Explanation: Let f(n) and g(n) be be real functions with f(n) > 0 and g(n) > 0 for n>0.Then f(n) = O(g(n)) if and only if the complexity of f(n) is equal to or less than the complexity of g(n). In other words, if and only if there exist constants c>0 and m>0 such that: |f(n)| <= c|g(n)| for all n>m.a) n is not an upper boundb) Correct answer: n! grows the fastest - faster than an exponential like 7^nc) Big-Omega denotes lower bounds; n^n is not a lower bound since it grows faster than n!See Week2b Powerpoint Slides 12-13 for reference.
Tags: Applications, Complexity
Author: fs489 (fs489)
Avg Rating: 4.1700
Avg Difficulty: 0.8333
Total ratings: 6



ID: 4256000
Created: 6:06pm, 05 Jan 2020
Depth-first Traversal is defined by:
a) Exploring the graph in growing concentric circles
b) Exploring every vertex of the graph regardless of whether you've found the correct vertex.
*c) Moving forward until you hit a dead end or previously visited vertex, then backtracking to find another path.
Explanation: Found in Lecture 18 - Graphs 2. Depth Traversal finds travels to the 'deepest' node and then backtracks if it wasn't discovered.
Tags: Sorting, Search, Trees
Author: elora (ep612)
Avg Rating: 4.7100
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4255994
Created: 5:49pm, 05 Jan 2020
Ash decides to organise his Pokemon in a tree. Which tree traversal should he use such that Charizard is first in line and Caterpie is last? Bulbasaur / \ Pikachu Caterpie / \ Charizard Pidgeotto
*a) Inorder
b) Postorder
c) Preorder
d) Level order
Explanation: Inorder : Charizard, squirtle, pidgeotto, bulbasaur, caterpiePostorder: Charizard, pidgeotto, pikachu, caterpie, bulbasaurPreorder: Bulbasaur, Pikachu, Charizard, Pidgeotto, CaterpieLevel order: Bulbasaur, Pikachu, Caterpie, Charizard, Pidgeotto
Tags: Trees
Author: lsg38 (lsg38)
Avg Rating: 4.7300
Avg Difficulty: 0.8182
Total ratings: 11
==> Comment 1: Ash's opponent better not have started with a water type (by: marlzjh [mh2220])



ID: 4255993
Created: 5:48pm, 05 Jan 2020
What kind of algorithm is a Merge sort considered to be?
a) Divide and Consider algorithm
b) Derive and Calculate algorithm
*c) Divide and Conquer algorithm
d) Deny and Conquer algorithm
Explanation: Apart from the correct answer, the others are not types of algorithms
Tags: Sorting
Author: marlzjh (mh2220)
Avg Rating: 4.2900
Avg Difficulty: 0.0000
Total ratings: 7



ID: 4255992
Created: 5:47pm, 05 Jan 2020
Which type of sort uses pivots and partitions?
a) Insertion Sort
b) Shell Sort
c) Merge Sort
d) Heap Sort
*e) None of the above.
Explanation: The answer is Quicksort so none of the above.
Tags: Sorting
Author: jc2885 (jc2885)
Avg Rating: 4.1700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4255991
Created: 5:46pm, 05 Jan 2020
Does the array below represent a correct max heap?[1,7,13,16,21,28,35,33,29,26,20,14,3]
a) Yes, it is a correct max heap array
*b) No, it is not a correct max heap array
Explanation: This array is not a correct represention of a max heap.A max heap array starts with the largest element in the heap (the root).Given an element at index position i: Its children are at index positions 2i+1 and 2i+2 Its parent is at index position floor((i-1)/2)
Tags: Sorting, Trees
Author: cs2318 (cs2318)
Avg Rating: 3.5000
Avg Difficulty: 1.5000
Total ratings: 2



ID: 4255988
Created: 5:43pm, 05 Jan 2020
In Hash Tables, a load factor of 0.45 means that your array has 45% more buckets than you need.True or False?
a) True
*b) False
Explanation: A load factor of 0.45 means a maximum of 45% of the total number of buckets will be filled, therefore at least55% will be unfilled. So there are 55% more buckets than you need.
Tags: Hashtables
Author: jap66 (jap66)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255984
Created: 5:35pm, 05 Jan 2020
What tree traversal is used to output: 666, 8, 1, 96, 6000000from the following tree: 666 / \ 8 6000000 / \ 1 96
a) Level Order
*b) Preorder
c) Postorder
d) Inorder
Explanation: level order would be: 666, 8, 6000000, 1, 96In order would be: 1, 8, 96, 666, 6000000postorder would be: 1, 96, 8, 6000000, 666
Tags: Trees
Author: marlzjh (mh2220)
Avg Rating: 4.8200
Avg Difficulty: 0.5455
Total ratings: 11
==> Comment 1: Perfect question (by: rhfd20 [rhfd20])



ID: 4255983
Created: 5:34pm, 05 Jan 2020
What is stored in each node of a singly linked list?
a) The element in the current node.
b) A pointer to the previous node.
c) A pointer to the next node, a pointer to the previous node, and the element in the node.
*d) A pointer to the next node and the element in the current node.
e) A pointer to the next node and a pointer to the previous node.
Explanation: A singly linked list only travels in one direction, to the 'next' node. There are no pointers to a previous node in a singly linked list.
Tags: Lists
Author: ali12345 (aak209)
Avg Rating: 4.7000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 4255982
Created: 5:32pm, 05 Jan 2020
Given a hash function of h(x) = x % 9 and a closed hash table of size 9 (starting at 0, through to 8).Insert the following numbers: 107, 15, 4, 155, 66, 81, 45, 67, 9.What value is in slot indexed 7?
*a) 9
b) 66
c) 81
d) 69
e) 107
Tags: Hashtables
Author: david_smith (dfs29)
Avg Rating: 3.8300
Avg Difficulty: 1.5000
Total ratings: 6



ID: 4256786
Created: 5:32pm, 05 Jan 2020
For the graph with the following path lengths, which are traversable both ways:A<->B 2A<->C 3B<->C 6B<->E 4C<->D 8D<->E 2D<->F 1E<->F 4What is the length of the shortest path between Nodes A and F?
a) 10
b) 6
*c) 9
d) 12
e) 8
Explanation: Either by using Dijkstra's or inspecting the graph by eye we can determine that the shortest path is ABEDF, which has a length of (2+4+2+1)=9
Tags: Graphs
Author: tn364 (tn364)
Avg Rating: 4.0000
Avg Difficulty: 0.6875
Total ratings: 16



ID: 4255978
Created: 5:29pm, 05 Jan 2020
Given the following integer binary search tree, three new elements 12, 8 and 5 are inserted in that order.For each new element which node is each of the new elements a child of?For example, "4, 49, 2" would mean that 12 is a child of 4, 8 is a child of 49 and 5 is a child of 2.
a) 6, 13, 6
b) 6, 13, 4
*c) 6, 12, 6
d) 6, 12, 8
e) None of the above.
Explanation: After first insertion 12 is the child of 6:After second insertion 8 is the child of 12:After third insertion 5 is a child of 6:So the answer is 6, 12, 6
Tags: Trees
Author: jc2885 (jc2885)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255977
Created: 5:26pm, 05 Jan 2020
A graph has the following adjacency matrix. Which are the only start and end points with 2 routes that are 3 edges apart? a b c da | 0 0 0 1 |b | 0 0 1 0 |c | 1 1 0 1 |d | 0 1 0 0 |
a) Start: BEnd: C
b) Start: AEnd: C
c) Start: CEnd: D
d) Start: CEnd: A
*e) Start: CEnd: B
Explanation: Cube the adjacency matrix to get:| 0 0 1 0 || 0 1 1 1 || 1 2 1 1 || 1 1 0 1 |Therefore the only entry with a 2 is C to B.
Augmented explanation 1: To confirm, after cubing the adjacency matrix, element (i,j) is the number of paths of length 3 from i to j. (by: jap66 [jap66])
Tags: Graphs
Author: jap66 (jap66)
Avg Rating: 3.8300
Avg Difficulty: 1.6667
Total ratings: 6
==> Comment 1: I think your calculations might be wrong. Firstly you need to cube the adjacency matrix twice to achieve the 3 edge mapping. Secondly the cube is:| 0 1 0 0 || 1 1 0 0 || 0 0 1 1 || 0 0 1 0 |The cube of that matrix is then:| 1 1 0 0 || 1 2 0 0 || 0 0 2 1 || 1 0 1 1 |Meaning that there are two routes for B to reach B and C to reach C each. (by: geordieross [gjcr20])
====> Reply 1: I have double checked, and still convinced my answer is correct. Have you tried drawing out the graph? C to B is clearly the only points where there are two paths of length 3 between them.You can use an online matrix calculator to check I have cubed the adjacency matrix correctly.Also, if you check the wikipedia page for the adjacency matrix, it clearly says "If A is the adjacency matrix of the directed or undirected graph G, then the matrix A^n (i.e., the matrix product of n copies of A) has an interesting interpretation: the element (i, j) gives the number of (directed or undirected) walks of length n from vertex i to vertex j."



ID: 4255976
Created: 5:21pm, 05 Jan 2020
Which of the following about AVL trees is not true?
a) This is not a balanced AVL tree:
b) The average search complexity of an AVL tree is O(log n).
c) It is possible to remove any item from an AVL tree.
*d) This is not a balanced AVL tree:
e) The worst case insert complexity of an AVL tree is O(log n).
Explanation: A: True. The left subtree has height 4 while the right has height 2, therefore it is not balanced.B: True. The average complexity of searching, inserting and deleting is O(log n).C: True. It is possible to remove any item of an AVL tree.D: False. The heights of both subtrees of each nodes do not differ by more than 1, therefore it is balanced.E: True. The worst case complexity of searching, inserting and deleting is O(log n).
Tags: Search, Trees, Complexity
Author: geordieross (gjcr20)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 5
==> Comment 1: Question a bit misleading? Better as "Which of the following about AVL trees is true?" (by: lewist [lt508])
====> Reply 1: I did think this would have been the case. Apologies, my aim was to create a question that would allow people to learn as much as possible about AVL trees, so I listed as many true facts as I could. I should have made the "not true" part a bit more obvious.



ID: 4255974
Created: 5:20pm, 05 Jan 2020
Which of the following sorting algorithms has the fastest best case time complexity?
*a) Insertion Sort
b) Merge Sort
c) Selection Sort
d) Shell Sort
e) Quick Sort
Explanation: If the list is already sorted then time complexity for Insertion sort is only O(n) since algorithm only completes one full pass
Tags: Sorting
Author: mcrossley (mwc38)
Avg Rating: 4.4000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255972
Created: 5:16pm, 05 Jan 2020
What is the reason for AVL Trees rebalancing after insertion/deletion of a node?
a) Doesn't change anything
b) To decreasse amount of nodes stored
*c) To keep the time complexity constant
d) Allows for quicker tree traversal
Explanation: A balanced AVL tree will always have time complexity of log(n)If the tree didn't balance then after every comparision the number of nodes eliminated wouldn't necessarily be half
Tags: Search, Trees
Author: mcrossley (mwc38)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255971
Created: 5:13pm, 05 Jan 2020
If the post order traversal of a binart tree is DEBFCA. What is the pre order traversal?
a) ABFCDE
b) ADBFEC
*c) ABDECF
d) ABDCEF
Explanation: Correct Answer: C
Tags: Trees
Author: rhfd20 (rhfd20)
Avg Rating: 3.2500
Avg Difficulty: 1.5000
Total ratings: 4
==> Comment 1: But multiple different trees can be constructed and give post order DEBFCA A F C BD Egives post-order DEBFCA but pre-order AFBDEC (by: agr33 [agr33])
====> Reply 1: True, I hadn't realised that, I'll try construct a better question if I can
====> Reply 2: It's okay it still strengthened my tree traversal skills through mild confusion <3



ID: 4255970
Created: 5:13pm, 05 Jan 2020
What is the number of swaps needed to swap this list of numbers:8, 22, 7, 9, 31, 5, 13 in ascending order using bubble sort?
a) 11
b) 9
c) 13
*d) 10
e) 15
Explanation: 8, 22, 7, 9, 31, 5, 13First run: 8, 7, 9, 22, 5, 13, 31 = 4 swapsSecond run:7, 8, 9, 5, 13, 22, 31 = 3 swapsThird run:7, 8, 5, 9, 13, 22, 31 = 1 swapFourth run: 7, 5, 8, 9, 13, 22, 31 = 1Fifth run:5, 7, 8, 9, 13, 22, 31 = 1 swapTotal = 10 swaps to sort the list of numbers.
Tags: Sorting
Author: luciaribot (lr593)
Avg Rating: 4.3800
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4255967
Created: 4:58pm, 05 Jan 2020
Consider the algorithm forinsertioninto a singly-linked list. What is the time complexity for this operation?
a) best(1), worst(n), average(n/2)
b) best(log(n)), worst(n), average(log(n)/2)
c) best(n/2), worst(n), average(n)
*d) best(1), worst(n), average(n)
Explanation: Best case is one; the new node is the head.Worst is n; it must go through all nodes before the new node is inserted.Average case is n; similar to the above, except it depends on the value of n and the current nodes in the list.
Tags: Lists
Author: jib25 (jib25)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255965
Created: 4:55pm, 05 Jan 2020
What is the time complexity of the following algorithm?int m = 0;int i = n;while (i > 0) { m = m + 2i; i = i / 2;}
a) O(n log n)
b) O(n / 2)
*c) O(log n)
d) O(n)
e) None of the above
Explanation: Has this time complexity as the value of i is halved each time the while loop is cycled through.
Tags: Complexity
Author: tt562 (tt562)
Avg Rating: 3.5000
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4255964
Created: 4:54pm, 05 Jan 2020
The figure below shows a balanced tree, if 20 was added to the tree, what rotations should be done in order to maintain it balanced?
a) Single right rotation about nodes: 14, 19 and 20.
*b) Single left rotation about nodes: 14, 19 and 20
Explanation: A tree is balanced when the difference in height between the left and right subtrees is not more than one. Therefore, if 20 was to be added to the right of 19 it would unbalance the tree. The following figure shows the correct rotation to be made in order to balance the tree.
Author: luciaribot (lr593)
Avg Rating: 4.8800
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4255962
Created: 4:51pm, 05 Jan 2020
Which of the following estimations of complexity is most suitable for theunder-estimationof time/size complexity?
*a) Big Omega (O)
b) Big O
c) Big Theta (T)
Explanation: Big Omega is used for under-estimating (i.e. at least n calculations). Conversely, Big O is used for over-estimating (i.e. at most n calculations).Big Theta should be used the most and shows exact complexity (i.e. n^2 + 4n + e).
Tags: Complexity
Author: jib25 (jib25)
Avg Rating: 3.7500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255960
Created: 4:49pm, 05 Jan 2020
Which of these sorting algorithms is stable
a) Selection Sort
*b) Merge Sort
c) Shell Sort
d) Quick Sort
e) None of the above
Explanation: Selection Sort - 2019 Week4a [Slide 10] -https://stackoverflow.com/questions/4601057/why-is-selection-sort-not-stableShell Sort - 2019 Week5a Powerpoint [Slide 8] *Look at notes under slideQuick Sort - 2019D&A-Revision2 [Slide 24] -https://stackoverflow.com/questions/13498213/quicksort-algorithm-stability
Tags: Sorting
Author: pw566 (pw566)
Avg Rating: 3.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4255957
Created: 4:47pm, 05 Jan 2020
Which one of the following sorting algorithms is unstable(elements with same value will remain in the same order after sort)?
a) Merge Sort
*b) Selection Sort
c) Bubble Sort
d) Insertion Sort
Explanation: Selection sort is unstable since it works by comparing elements that are not adjacent so an element could surpass another equally valued element
Tags: Sorting
Author: mcrossley (mwc38)
Avg Rating: 3.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4255955
Created: 4:46pm, 05 Jan 2020
what is the shortest path between A and E?
*a) 6
b) 13
c) 4
d) 5
e) 8
Tags: Graphs
Author: amd (amd77)
Avg Rating: 3.4300
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4255953
Created: 4:45pm, 05 Jan 2020
What is the result of pre-order traversal of this tree?
a) S U W V Y Z X T
b) S T U V W Z Y X
*c) S T U V Z X Y W
d) S T U V Z Y W X
e) X Z Y V W T U S
Explanation: The algorithm for pre-order traversal is as follows:void preOrder(Node cur){if (cur == null) // if empty, return�return;System.out.print(cur.value + � �); // Process the current node.preOrder(cur.left); // Process nodes in left sub-tree.preOrder(cur.right); // Process nodes in left sub-tree.}
Tags: Trees
Author: jap66 (jap66)
Avg Rating: 4.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255950
Created: 4:44pm, 05 Jan 2020
Java is supposed to be "design-independent", which of the following best describes this phrase?
a) It is suitable for integration on any form of procedural development.
*b) It uses specific definitions of data structures (in terms of memory size and functions) so it may run on as many devices as possible.
c) It is designed to be compatible with as many interpreters as possible so it may run on as many devices as possible.
d) It is malleable enough in its definitions of data structures to be useful for as many types of algorithms as possible.
Tags: Applications
Author: jib25 (jib25)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255948
Created: 4:42pm, 05 Jan 2020
When performing a BST search on N values, on average how many steps are required to find our value?
a) ?(N + 1)
b) ?(N3)
*c) ?(log N)
d) ?(N)
e) ?(Nlog N)
Explanation: Lecture 14 � Trees 2, slide 11
Tags: Trees
Author: hb791 (hb791)
Avg Rating: 4.0000
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4255946
Created: 4:42pm, 05 Jan 2020
A certain quadratic time algorithm uses 50 elementary operations to process an input of size 20. What is the most likely number of elementary operations it will use if given an input of size 2000?
a) 50000
*b) 500000
c) 5000000
d) 5000
e) None of the above
Explanation: Because the algorithm is quadratic, if the input increases by x times, the number of operations should increase x2 times. In this case, if the input increases by factor of 100, the number of operations increases by a facot of 1002. Therefore, 50 operations x 1002 = 500000.
Tags: Complexity
Author: mo436@bath.ac.uk (mo436)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255944
Created: 4:41pm, 05 Jan 2020
Using selection sort and sorting from lowest to highest, what will the following list look like after 3 iterations?[ 900, 321, 400, 60, 702, 9, 572, 18, 104]
a) [ 9, 18, 104, 400, 60, 702, 900, 572, 321]
b) [ 9, 18, 60, 104, 321, 400, 572, 702, 900]
*c) [ 9, 18, 60, 400, 702, 900, 572, 321, 104]
d) None of the above
Explanation: In selection sort you look at for the smallest number, and swap this with the first number, you then look at the remain n-1 numbers for the smallest and swap this with the second number.1st iteration: swap 9 and 900 [ 9, 321, 400, 60, 702, 900, 572, 18, 104]2nd iteration: swap 18 and 321[ 9, 18, 400, 60, 702, 900, 572, 321, 104]3rd iteration: swap 60 and 400[ 9, 18, 60, 400, 702, 900, 572, 321, 104]Reference: Lecture 4a PDF
Tags: Lists, Sorting
Author: sarahpruden (sp2105)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4255949
Created: 4:38pm, 05 Jan 2020
Consider a closed hash table with linear probing.Compute the average number of steps taken to insert an item into a hash table with total number of available buckets being 10,000 and the number of unused buckets being 1,500.
a) Average no.of steps � 2
*b) Average no.of steps � 4
c) Average no.of steps � 6
d) Average no. of steps � 8
e) Average no.of steps � 10
Explanation: Max no. of keys to insert = 1,500 - 10,000 = 8,500Load (L) = Max no. of keys to insert / Total buckets in array = 8,500 / 10,000 = 0.85Average no. of steps to insert item = 0.5 * (1 + 1/(1 - L)) = 0.5 * (1 + 1/(1 - 0.85)) = 3.83333.... � 4 steps
Tags: Hashtables
Author: geordieross (gjcr20)
Avg Rating: 4.1400
Avg Difficulty: 1.7143
Total ratings: 7



ID: 4255937
Created: 4:31pm, 05 Jan 2020
A quadratic time algorithm uses 50 elementary operations to process aninput of size 10. What is the most likely number of elementary operations it will use if given an input of size 10,000?
a) 50,000
b) 500,000
c) 5,000,000
*d) 50,000,000
e) 500,000,000
Explanation: The input increases from 10 to 10,000. Thisis now 1000 times the original input size.However, as the algorithm has a quadratic time complexity, this value has to be squared and then multiplied by 50 to get the the number of operations overall.This can be calculated using the formula:((New Input / Old Input) ^ 2) * (Number of Operations for Old Input)So in this case, it will be:((10,000 / 10) ^ 2) * 50 = 50,000,000 operations
Tags: Complexity
Author: tt562 (tt562)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4255935
Created: 4:30pm, 05 Jan 2020
Consider graph F. Assume that we use Dijkstra's algorithm to find shortest paths from node START to any other node in F. Which of the following orderings on the nodes of F could be used by Dijkstra's algorithm to compute the shortest paths that start at START?
a) START,1,2,3,4,END
b) START,END,1,3,2,4
*c) START,3,2,4,END,1
d) START,4,3,2,1,END
e) None of the above
Explanation: From START, pick the node which is connected to START by lowest value edge. In this case its node 3. Then, looking at all possible edges from START and 3, pick the lowest one again, in this case node 2. Repeat this step again, to see that next node is 4. Following the same principle, the next node should be END, and finally, last node should be 1.
Tags: Graphs
Author: mo436@bath.ac.uk (mo436)
Avg Rating: 3.5000
Avg Difficulty: 1.2500
Total ratings: 4



ID: 4255934
Created: 4:30pm, 05 Jan 2020
If we have an open hash table with 10 keys inserted and 20 buckets, what is the average number of steps taken to find an element in the table?
a) 1
*b) 1.25
c) 1.5
d) 0.75
e) 1.75
Explanation: Load factor is 10/20 = 1/2. Average numbers of steps to find an element in an open hash table is 1 + L/2 = 1 + 1/4 = 1.25.
Tags: Hashtables
Author: md825 (md825)
Avg Rating: 4.5000
Avg Difficulty: 1.3333
Total ratings: 6



ID: 4255932
Created: 4:27pm, 05 Jan 2020
what is the average time complexity of this code?public int fibonacci(int x){ if (x<=1){ return x; } else{ return fibonacci(x-2)+ fibonacci(x-1); }}
a) O(2n)
*b) O(2^n)
c) O(n^2)
Explanation: The function is recursive, calling itself twice, the average runtime complexity is O(2^n)
Tags: Complexity
Author: amd (amd77)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255927
Created: 4:24pm, 05 Jan 2020
What is the worst case complexity of shell sort?
a) O(1)
b) O (n log n)
c) O (n)
d) O (log n)
*e) None of the above
Explanation: Shell sort has worst case O(n^2) and is an unstable algorithm.As the algorithm is unstable items can jump around and therefore it can take O(n^2) iterations for a list to be sorted in a worst case scenario.Reference lecture 5a powerpoint, slide 8 (footnotes have more detail)
Tags: Lists, Sorting
Author: sarahpruden (sp2105)
Avg Rating: 4.1400
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4255924
Created: 4:20pm, 05 Jan 2020
What is the worst case time complexity of inserting a node in a doubly linked list?
a) O(nlogn)
*b) O(n)
c) O(logn)
d) O(1)
Explanation: The worst case is that you have to insert the node at the end of the list, therefore you have to traverse through the entire list to get to the position desired, making the time complexity O(n). However, if there was a tail reference, the time complexity would then be O(1).
Tags: Lists
Author: luciaribot (lr593)
Avg Rating: 4.0000
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4255915
Created: 4:17pm, 05 Jan 2020
A main property of a Binary search tree is
a) every node has 2 or more children
*b) all nodes in a node's left sub-tree must be less than the node�s value and all nodes in a node's right sub-tree must be greater than the node�s value
c) all nodes in a node's left sub-tree must be greater than the node�s value and all nodes in a node's right sub-tree must be less than the node�s value
d) Average runtime of BST search/ insertion is ?(N)
Explanation: A - is binary so every node has 2 children at mostB - correctC - the left sub-tree must be less than the node, the left sub-tree must begreater than the nodeD - the average runtime of BST search/ insertion is ?(log N)
Tags: Trees
Author: amd (amd77)
Avg Rating: 3.8600
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4255887
Created: 3:55pm, 05 Jan 2020
Honda uses the following binary search tree (sorted alphabetically) in order to store their car names: Amaze / \Accord Jazz / Grace / \ Brio InsightIn order to increase naming efficiency, they wish to convert this into an AVL tree, however do not want to re-insert all of the data.Therefore they choose to carry out 'rotations' to get a valid AVL tree.What is the minimun number of each rotation that must be carried out to produce a valid AVL tree?
*a) 1 Right Rotate, 1 Left Rotate
b) 1 Left Rotate
c) 2 Left Rotates
d) The tree is already a valid AVL tree
e) A valid AVL tree cannot be made using this data
Explanation: 1 Right rotation around Jazz gives: Amaze / \Accord Grace / \ Brio Jazz / Insight1 Left Rotation around Grace gives us: Grace / \ Amaze Jazz / \ /Accord Brio Insight
Tags: Trees
Author: sm2744 (sm2744)
Avg Rating: 4.6000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4255881
Created: 3:53pm, 05 Jan 2020
Consider the list [420, 69, 80085, 21, 666, 1337].If you begin to sort the list so that it will be ordered from lowest to highest value using selection sort, what order will the elements be in after the first two swaps?
a) [21, 69, 420, 666, 1337, 80085]
b) [80085,1337, 420, 21, 666, 69]
c) [21, 69, 80085, 420, 666, 1337]
*d) [21, 69, 420, 80085, 666, 1337]
e) [420, 69, 80085, 21, 666, 1337]
Explanation: The list begins as[420, 69, 80085, 21, 666, 1337].The lowest value in the list is 21, so this will swap position with the first element in the list, 420, giving you the list[21, 69, 80085, 420, 666, 1337].The lowest value in the unsorted list is now 69, which is already in position so no swap needs to be performed.The lowest value in the unsorted list is now 420, so this will swap position with the first element in the unsorted list, 80085, giving you the list[21, 69, 420, 80085, 666, 1337].Although this list has not yet been fully sorted, this is how it looks after its first two swaps.
Tags: Lists, Sorting
Author: sr2058 (sr2058)
Avg Rating: 4.1400
Avg Difficulty: 1.0000
Total ratings: 7



ID: 4255869
Created: 3:41pm, 05 Jan 2020
Given a list of unordered, unbounded, integers, and the task of finding the smallest value present in the list, what method provides the lowest average time complexity to complete the task?
a) Sort the list and binary search
b) Sort the list in descending order and take the last element in the list
c) Construct a BST then find the smallest element simply by traversing down the left subtree recursively
*d) Linear Search
e) Ternary Search
Explanation: Note that the list contains unbounded integers. Hence an O(n) sort such as counting sort or bucket sort is impossible.A: O(nlogn) time due to sort (and no reason to binary search)B: O(nlogn) time due to sortC: O(nlogn) time to construct the BSTD: O(n) time hence the winnerE: No reason to ternary search
Tags: Search
Author: arth (ab2944)
Avg Rating: 4.2500
Avg Difficulty: 1.6250
Total ratings: 8



ID: 4255857
Created: 3:31pm, 05 Jan 2020
Johnny Jones has a unordered list of twenty family relatives' names that he wants to put into a non-AVL tree.Which is the correct reason as to why Johnny should not sort the list before adding them to the tree?
a) Because adding a unordered list to a tree always results in a perfect tree and should therefore be used instead
b) There is no difference between adding a sorted list and an unsorted list to a non-AVL tree and therefore you've just wasted time sorting it.
*c) Because adding a sorted list to the tree will cause the tree to be lopsided and therefore as slow as linear search to search.
Explanation: Adding a ordered list to a non-AVL tree will cause the elements to always be added to either the right of the rightmost node or the left of the leftmost node. This in turn causes the tree's balance to practically be a linked-list as each node only links to one.To fix this issued you'd have to not sort and get a random shaped tree, or use an AVL tree to balance the tree upon adding new elements and get a balanced tree at the cost of run speed.
Tags: Trees
Author: david_smith (dfs29)
Avg Rating: 4.2900
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4255852
Created: 3:20pm, 05 Jan 2020
What algorithm is considered a "stable" algorithm?
a) It never breaks
b) It skips over elements that are already sorted
c) Always has the same number of comparisons for any list size n.
*d) Equal terms stay in their relative positions after sorting
e) None of the above
Explanation: A stable algorithm is one in which two objects appear in the same order in sorted list as they appeared in the unsorted list. For example, Insertion, Merge and Bubble sorts are all stable, while Selection sort is not.
Tags: Sorting
Author: mo436@bath.ac.uk (mo436)
Avg Rating: 4.7000
Avg Difficulty: 0.4000
Total ratings: 10



ID: 4255844
Created: 3:10pm, 05 Jan 2020
What is the worst case performance for searching an element in a chained hash table?
a) O(n^2)
b) O(n/2)
c) O(log n)
*d) O(n)
Explanation: Chained hash table performs the worst when all the elements hash into a single bucket, hence searching becomes O(n), where n is the number of elements in the table.
Tags: Hashtables
Author: jokene (jeoo20)
Avg Rating: 4.8000
Avg Difficulty: 1.2000
Total ratings: 5



ID: 4255842
Created: 3:02pm, 05 Jan 2020
Imagine a scenario where we need to sort 10,000 structures containing some information. Which sorting algorithm would be the best in this case?
*a) Quick Sort
b) Radix Sort
c) Bubble Sort
d) Tournament Sort
Explanation: Quick Sort is the best general case sorting algorithm and is good for medium to large sets of data.
Tags: Sorting, Applications
Author: jokene (jeoo20)
Avg Rating: 4.0000
Avg Difficulty: 0.1667
Total ratings: 6



ID: 4255839
Created: 2:57pm, 05 Jan 2020
Consider the following graph and it's adjacency matrix M:When an adjacency matrix is multiplied by itself (i.e. M * M = ?) what does the resultant matrix represent?
a) The resulting matrix shows the distance between each vertex in the graph.
*b) The resulting matrix shows which vertices are two edges from each other.
c) The resulting matrix is a transposed triangular matrix of the graph's nodes.
d) The resulting matrix has no significance to the graph.
e) The resulting matrix shows unreachable vertices from other vertices.
Explanation: When adjacency matrices are multiplied by themselves they produce a matrix showing which vertices are two edges apart.If this resulting matrix is multiplied by itself then we get all vertices that are three vertices apart and so on.Taken from DA Lecture 17 Graphs 1.
Tags: Graphs
Author: geordieross (gjcr20)
Avg Rating: 4.4000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255829
Created: 2:31pm, 05 Jan 2020
Which of the following statements about AVL trees and binary trees is true?
a) The cost of searching a binary search tree is O(log n ) but that of an AVL tree is ?(n)
b) The cost of searching an AVL tree is ?(log n) but that of a complete binary tree is ?(n log n)
*c) The cost of searching an AVL tree is ?(log n) but that of a binary search tree is O(n)
d) The cost of searching an AVL tree is ?(n log n) but that of a binary search tree is O(n)
Explanation: An AVL tree�s time complexity of searching, insertion and deletion is O(logn), but a binary search tree (BST) may be a skewed tree, so in the worst case a BST's searching, insertion and deletion complexity is O(n)
Tags: Search, Trees, Complexity
Author: mw931 (mw931)
Avg Rating: 2.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255827
Created: 2:24pm, 05 Jan 2020
Suppose we have two algorithms A and B.What does it mean if we say that A is asymptotically more efficient than B?
a) A will always be better choice for small inputs
*b) A will always be better choice for large inputs
c) B will always be better choice for small inputs
d) A will always be better choice for all inputs
Explanation: In asymptotic analysisthe growth of an algorithm is considered in terms of input size. An algorithm A is said to be asymptotically better than B if A takes a smaller amount of time than B for all input sizes n larger than a value n0 where n0 > 0
Tags: Complexity
Author: mw931 (mw931)
Avg Rating: 4.2500
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4255825
Created: 2:20pm, 05 Jan 2020
Assuming that the runtime complexity of inserting a member in a set ADT is O(n) and removing a member is also O(n) (Set is based on linked list data structure).A multiset is a set that allows members to occur more than once. What would the runtime complexities of inserting and removing members in a multiset be, based on the set implementation defined above?
a) Insertion Complexity: O(n)Removal Complexity: O(n)
*b) Insertion Complexity: O(1)Removal Complexity: O(n)
c) Insertion Complexity: O(n)Removal Complexity: O(1)
d) Insertion Complexity: O(1)Removal Complexity: O(1)
Explanation: A multiset is a type of set that allows members to occur more than once. In a multiset inserting members is more efficient because we do not have to traverse the members looking for duplicates, hence insertion becomes an O(1) operation. Removing a member remains an O(n) process because we have to search for the member of the set to be removed.
Tags: ADTs, Lists, Complexity
Author: jokene (jeoo20)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255824
Created: 2:19pm, 05 Jan 2020
The following is a linked list:AvocadoCorianderTomatoLimeChiliit is sorted into alphabetical order for the first letter :AvocadoCorianderChiliLimeTomatoWhat can be said about the sorting algorithm?
a) It is an unstable algorithm.
*b) It can be an Insertion Sort algorithm.
c) It has a runtime complexity of exactly order n^1.25.
d) It can be a Heap Sort algorithm.
Explanation: A.The algorithm is stable since Coriander stays in the same position.B. It could be an insertion sort since these are stable and can be used on linked lists.C. This is true of Shell Sorts. These are unstable.D. Heap Sorts are unstable and cannot be used on linked lists.
Tags: Sorting
Author: io272 (io272)
Avg Rating: 3.5000
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4255820
Created: 2:11pm, 05 Jan 2020
Given a graph in adjacency list form, using what combination of data structure and algorithm can we efficiently find the shortest distance between two nodes.
a) AVL Tree and Depth First Search
b) Boolean Array and Depth First Search
c) Boolean Array and Dijkstra's Algorithm
*d) Min Heap and Dijkstra's Algorithm
e) Priority Queue and Binary Search
Explanation: An efficient O(ElogV) time implementation of Dijkstra's pathfinding algorithm will use a min heap to store all nodes currently in the queue to be processed, and break upon reaching the destination node.
Tags: Graphs
Author: arth (ab2944)
Avg Rating: 3.2000
Avg Difficulty: 1.6000
Total ratings: 5



ID: 4255819
Created: 2:10pm, 05 Jan 2020
In shellsort, an array is sequentially h-sorted for decreasing values of h, with the final sort always using an h value of 1 (eg an array could be sorted for h values of 8,4,2,1).What sorting algorithm does shellsort use when h = 1?
a) Selection Sort
b) Insertion Sort
*c) Bubble Sort
d) Bucket Sort
Explanation: Bubble sort is used to h-sort the array when h = 1. In fact, the algorithm used to h-sort the array for every value of h in shell sort is a modified form of bubble sort.
Tags: Sorting
Author: mw931 (mw931)
Avg Rating: 3.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255812
Created: 2:02pm, 05 Jan 2020
Classify this sorting algorithmIt has the following qualities:StableCan be used to sort linked listsRequires n slots of extra memory
a) Insertion sort
b) Shell sort
c) Quick sort
*d) Merge sort
Explanation: SeeD&A-Revision2.pptx slide 24
Tags: Sorting
Author: hp529 (hp529)
Avg Rating: 3.8800
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4255943
Created: 1:59pm, 05 Jan 2020
Which of these sorting algorithms is unstable?
a) Insertion sort
*b) Quick sort
c) Merge sort
d) Bubble sort
e) None of the above
Explanation: A stable sorting algorithm is one in which equal items retain their relative position after sorting.However, in quick sort this is not guaranteed.For example, if sorting an array [7, 5, 5], the '5's will not stay in their initial order.
Tags: Sorting
Author: tt562 (tt562)
Avg Rating: 4.0000
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4255808
Created: 1:57pm, 05 Jan 2020
Calculate x for:
a) 10
b) 6
c) 4
*d) 2
e) 8
Explanation: Application of Fermat's little theorem.Week 11b slide 12
Tags: Cryptography
Author: hp529 (hp529)
Avg Rating: 4.2900
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4255805
Created: 1:52pm, 05 Jan 2020
Calculate the average number of steps taken to find/insert an item into this closed hash table:Number of keys= 3500 Number of Buckets=15750
a) 1.04
b) 1.11
*c) 1.42
d) 1.48
e) 2.01
Explanation: Load = (Max number of keys to insert) / (Total number buckets in array)Average number of steps for a closed hash: Week10b slide 31
Tags: Complexity, Hashtables
Author: hp529 (hp529)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4255799
Created: 1:49pm, 05 Jan 2020
Take this Balanced BST as a basis.Insert 30 and 31 in this BST, don't forget to balance it after each insertion if necessary.We print the tree in an In-order traversal way, what is the outcome ?
a) 27,12,9,10,16,36,31,30,35,40
*b) 9,10,12,16,27,30,31,35,36,42
c) 9,10,12,16,27,36,30,31,35,42
d) 10,9,16,12,27,30,31,35,36,42
Explanation: After adding 30 and balancing it :After adding 31 and balancing it :You can find the explanation of the in-order traversal in the slideshow "2019 - Weeb7b-Trees1"
Tags: Trees
Author: bertrand (bt502)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4255786
Created: 1:25pm, 05 Jan 2020
In a singly linked list without a tail reference, what is the time complexity of adding an element to the end of the list?
a) T(1)
*b) T(n)
c) T(n^2)
d) T(n^3)
e) T(log(n))
Explanation: With a tail reference the time complexity could beT(1) but without a tail reference it has to check all n elements thusT(n).
Tags: Lists, Sorting, Complexity
Author: ya360 (ya360)
Avg Rating: 3.7500
Avg Difficulty: 0.7500
Total ratings: 8



ID: 4255781
Created: 1:18pm, 05 Jan 2020
Define an unstable sorting algorithm
a) An algorithm that does not work all the time
*b) An algorithm that outputs two items with the same value in a different order to the way they were input
c) An algorithm where the time complexity differs with every input
Explanation: This answer is based of the definition. See lecture 7
Tags: Sorting
Author: swt39 (swt39)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 10



ID: 4255777
Created: 1:14pm, 05 Jan 2020
In an Open Hash Table, what type of data structure does each array bucket point to?
a) Skip List
*b) Linked List
c) Binary Search Tree
d) ArrayList
e) AVL Tree
Explanation: Week 10b � Hashtables 1, slide 23
Tags: Hashtables
Author: hb791 (hb791)
Avg Rating: 3.4000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4255773
Created: 1:03pm, 05 Jan 2020
What is the time complexity of Dijkstra's Algorithm? (v is the number of vertices, e is the number of edges)
a) ?(ev)
b) ?(v!)
c) ?(v)
*d) ?(v2)
e) ?(e2)
Explanation: from Lecture 18 � Graphs 2, slide 21
Tags: Graphs
Author: hb791 (hb791)
Avg Rating: 4.8000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255764
Created: 12:57pm, 05 Jan 2020
A skip list consists of 64 items. How many lanes are present? (Answer should include lane 0)
a) 4
b) 5
*c) 6
d) 7
Explanation: The number of lanes in a list with n items is log(n). Hence log(64)=6 hence there are lanes 0,1,2,3,4,5. This information was used in Coursework 2
Tags: Lists, Sorting
Author: swt39 (swt39)
Avg Rating: 3.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255759
Created: 12:50pm, 05 Jan 2020
What is 2^35 mod 7?
*a) 4
b) 5
c) 2
d) 1
e) 3
Explanation: By Fermat�s Little Theorem, 2^6 = 1 mod 7. Thus, 2^35 = 2^5 = 32 = 4 mod 7.
Tags: Cryptography
Author: ya360 (ya360)
Avg Rating: 4.0900
Avg Difficulty: 1.0000
Total ratings: 11



ID: 4255753
Created: 12:45pm, 05 Jan 2020
An implementation of insertion sort runs for 10 seconds to sort a list of 10^8 records.How long will it likely run to sort 10^9 records?
a) 90 seconds
b) 100000 seconds
c) 800 seconds
d) 100 seconds
*e) 1000 seconds
Explanation: Insertion sort has quadratic time complexity of O(n^2). So if the input is multiplied by 10 from 10^8 to 10^9, then the time will be multiplied by 10^2=100 so 10*100=1000 seconds.
Tags: Sorting, Complexity
Author: ya360 (ya360)
Avg Rating: 4.6000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4255746
Created: 12:39pm, 05 Jan 2020
Which of the following protocols are now deprecated?
a) TLS (Transport Layer Security)
*b) SSL (Secure Sockets Layer)
c) HTTPS (HyperText Transfer Protocol Secure)
d) SSH (Secure SHell)
Explanation: 2019 TLS Overview Slides, Slide 1
Tags: Cryptography
Author: rl859 (rl859)
Avg Rating: 4.0000
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4255744
Created: 12:38pm, 05 Jan 2020
What is the definition of an AVL tree?
a) A Binary Search Tree where every node in the tree other than leaf nodes has 2 child nodes.
*b) A self-balancing Binary Search Tree where the difference between heights of left and right subtrees cannot be more than one for all nodes.
c) A Binary Search Tree where themaximum number of children that a node can have is limited to a threshold, N.
Explanation: PowerpointWeek8b-Trees3 Slide 5A :Full Binary TreeC :N-ary tree
Tags: ADTs, Trees
Author: ec862 (ec862)
Avg Rating: 3.6200
Avg Difficulty: 0.3077
Total ratings: 13



ID: 4255742
Created: 12:35pm, 05 Jan 2020
A developer is working on a software that stores emails and the associated username which is a 6 digit number. The software has to be able to find the email associated with a given username quickly. Which data structure is most appropriate to store these?
a) Closed hashtable
b) Linked list
*c) Open Hashtable
d) Sorted array
Explanation: Open hashtables store elements with two properties, data and a key indentifying this ie what we require. When you want to find a particular entry you know the key for, you can them find the associated data.2019 lec 10b for more info
Tags: Sorting, Search, Hashtables
Author: lm2066 (lm2066)
Avg Rating: 4.5700
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4255739
Created: 12:33pm, 05 Jan 2020
Compute the value of x:5^25=x mod(13)
a) x=1
*b) x=5
c) x=12
d) x=11
Explanation: Application of Fermat's little theorem: 5^12=1 mod(13) hence 5^25=((5^12)^2)*5 = ((1)^2)*5 mod(13) = 1 mod(13)
Tags: Cryptography
Author: swt39 (swt39)
Avg Rating: 4.2000
Avg Difficulty: 0.8000
Total ratings: 5
==> Comment 1: great question, challenging the application of fermat's little theorem (by: ya360 [ya360])



ID: 4255736
Created: 12:32pm, 05 Jan 2020
Consider the following functions:f(n) = 5n^2 , g(n) = 10n^2 and h(n) = 10^nSelect the true statement below:
a) g is O(f), h is O(g), and f is ?(h)
b) g is O(f), g is O(h), and f is O(h)
*c) g is ?(f), h is O(g), and f is O(h)
d) f is O(g), g is ?(h), and f is O(h)
e) None of the above
Explanation: g and f are both of order n^2 so have similar time complexity. h is of highest order because (a^n) grows faster than (n^a) for all a being constants. thus g describes the lower bound of h and h describes the upper bound of f.
Tags: Complexity
Author: ya360 (ya360)
Avg Rating: 4.2000
Avg Difficulty: 0.8000
Total ratings: 5
==> Comment 1: excellent explanation (by: swt39 [swt39])



ID: 4255734
Created: 12:27pm, 05 Jan 2020
Use a standard closed hashtable with linear probing and the hash function has the form h(x) = x % 6 with slots 0, ... , 5. If you insert the elements 28, 43, 12, 7, 37,13 in that order, what does the hashtable look like at the end?
*a) 12, 43, 7, 37, 28, 13
b) 7, 12, 37, 28, 43, 13
c) 12, 13, 7, 28, 43, 37
d) 37, 43, 13, 7 ,28, 12
Explanation: First start with 28, 28 % 6 is 4 so gets inserted in slot 4---28--Then next is 43%5 which is 1-43-28--Then we use 12%5 which is 012, 43, -,-, 28 ,-Then 7%5 which is 1 but 1 is full so it goes in position 2 the next empty spot12, 43, 7,-, 28 ,-Then 37%5 is 1 so we move to the ext empty spot in position 312,43,7,37,28,-Giving the full list12, 43, 7, 37, 28, 13
Tags: Hashtables
Author: lm2066 (lm2066)
Avg Rating: 3.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255726
Created: 12:21pm, 05 Jan 2020
Which of the following is valid advice when hashing passwords.
a) Make your hash function as fast as possible.
b) Ensure all password hashes are not stored on a solid state drive.
*c) Salt your hash by hashing the username and the password together.
d) Use the hash function MD5.
e) You don't need to hash your passwords.
Explanation: A - Hashes for passwords should actually be slow rather than fast so that dictionary or brute force attacks are slowed down.B - The physical storage device should have no impact on your hash functionC - Actual valid advice to increase resistance to dictionary attacksD - Hash function MD5 has been thoroughly brokenE - Never store your passwords in plain text
Tags: Cryptography, Hashtables
Author: david_smith (dfs29)
Avg Rating: 3.6700
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4255722
Created: 12:20pm, 05 Jan 2020
What is the average time complexity for searching in a Skip List?
a) T(n log(n))
b) T(n)
c) T(1)
*d) T(log(n))
e) T(n2)
Explanation: Powerpoint - Week3b Slide 16
Tags: ADTs, Lists, Search
Author: ec862 (ec862)
Avg Rating: 4.0000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255710
Created: 12:11pm, 05 Jan 2020
A closed Hash-table with linear probing uses the function h(x) = x % 5 as a hash function and has slots 0,1,2,3,4.When the elements, (13, 4, 19, 5, 27), are inserted into the Hash-table in order, what is the resulting Hash-table?
*a) 19, 5, 27, 13, 4
b) 4, 5, 13, 19, 27
c) 5, 27, 13, 4, 19
d) 27, 19, 5, 4, 13
e) 19, 5, 13, 27, 4
Explanation: Insert 13:13 % 5 = 3 0 1 2 3 4|__|__|__|13|__|Insert 4:4 % 5 = 4 0 1 2 3 4|__|__|__|13| 4|Insert 19:19 % 5 = 4 0 1 2 3 4|19|__|__|13| 4|Insert 5:5 % 5 = 0 0 1 2 3 4|19| 5|__|13| 4|Insert 27:27 % 5 = 2 0 1 2 3 4|19| 5|27|13| 4|
Tags: Hashtables
Author: ec862 (ec862)
Avg Rating: 4.6700
Avg Difficulty: 1.5000
Total ratings: 6



ID: 4255691
Created: 11:50am, 05 Jan 2020
What is the shortest path from u to z?
a) 10
b) 7
c) 5
*d) 3
e) 2
Explanation: Using Dijkstra�s Algorithm (2019 Lecture 18) the shortest path is length 3 through the path u -> x -> y -> z
Tags: Graphs
Author: wpjc20 (wpjc20)
Avg Rating: 3.7100
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4255688
Created: 11:46am, 05 Jan 2020
Say you need to create a Closed Hash Table that can store up to 5000 items and can find an item in roughly 2 steps.How many buckets do you need ?
a) You will need 8500 buckets.
b) You will need 8000 buckets.
c) You will need 7000 buckets.
*d) You will need 7500 buckets.
Explanation: It is the same principle that the slideshow "2019 -Week10b-HashtablesAll" n�34 but with the formula of the expected number of steps for a Closed Hash Table.You will find a load factor of 2/3.
Tags: Hashtables
Author: bertrand (bt502)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255684
Created: 11:42am, 05 Jan 2020
Which of the following binary trees are valid AVL trees.A: 20 / \ 8 22 / / \ 4 21 40/3B: 20 / \ 25 15C: 20 / \ 8 22 / \ 5 21D: 20 / \ 8 22
a) B only
b) A and D
c) A, C, and D
d) A only
*e) D only
Explanation: A is not valid as the node containing 8 is unbalancedB is not valid as 25 is more than 20 while it has to be less since it is on the left hand side of the tree to 20. (and similar in reverse for 15 and 20)C is not valid as 21 is more than 20 while it is on the left hand side of the tree from 20D is hence the only valid AVL tree
Tags: ADTs, Trees
Author: arth (ab2944)
Avg Rating: 4.7500
Avg Difficulty: 1.0833
Total ratings: 12



ID: 4255664
Created: 11:20am, 05 Jan 2020
What is insertion sort's best case for time complexity?
a) O(n^2) in all cases
b) O(n) when data is in reverse sorted order
c) O(nlogn) when the data can be exactly halved
d) O(nlogn) in all cases
*e) O(n) when data is already sorted
Explanation: Insertion sort's best case is when the data is already sorted. This is because you will look:at the 2nd item, see the 1st item is less or equal, move on,at the 3rd item, see the 2nd item is less or equal,...,at the nth item, see the n-1th item is less or equal
Tags: Sorting, Complexity
Author: arth (ab2944)
Avg Rating: 3.7500
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4255644
Created: 10:54am, 05 Jan 2020
Which sorting algorithm best fits this description:StableBest case : (n log n)Average case: (n log n)Worst case: (n log n)
a) Shell sort
b) Selection sort
c) Quick sort
*d) Merge sort
e) Heap sort
Explanation: Quick, Merge, and Heap all match the complexities, however merge sort is the only one of them that is stable
Tags: Sorting
Author: sm2744 (sm2744)
Avg Rating: 3.8300
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4255727
Created: 10:37am, 05 Jan 2020
What is the runtime complexity for this code?for (int i=1; i<n; i++) System.out.println(�test�);int y = n;for (int j=1; j<n; j++) for (int k=1; k<y; k++) System.out.println(�test2�); y = y/2; for(int x = 10; x > 0, x = x-1) System.out.println("test3");
a) (n2)
b) (n3)
*c) (n log n)
d) (1)
e) None of the above
Explanation: int y = n;for (int j=1; j<n; j++) for (int k=1; k<y; k++) System.out.println(�test2�); y = y/2;Is the code that we care about as it has the highest order of n complexityThe first loop has complexity n, the second has log(n) as y (same value as n) is halved each time, so each loop there are half as many iterations.
Tags: Complexity
Author: sm2744 (sm2744)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4255400
Created: 12:29am, 05 Jan 2020
Which of the following statement is FALSE.
a) For the same load factor, an open Hash Table is almost always faster than a closed Hash Table.
b) One of the principles behind open Hash Table is the use of a linked list to extend each bucket, thus limiting collisions.
*c) It is faster to search in a nearly full Closed Hash Table than an empty one.
d) Open Hash Table are preferable to handle collision.
Explanation: You can find all the information in "2019- Week10b-HashtablesAll".A) p33B) p24C) p28-29D) p23
Tags: Hashtables
Author: bertrand (bt502)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4255399
Created: 12:21am, 05 Jan 2020
Which of the following statements about sorting algorithms is false?
a) The merge sort is on average quicker than the insertion sort, but if the data is already very nearly sorted, the insertion sort can be faster.
b) The bubble sort has the same average, best-case, and worst-case complexities as the insertion sort.
c) The merge sort requires buffer space of complexity n, but the insertion sort and the bubble sort do not require buffer space (beyond O(1)).
*d) The merge sort, insertion sort, bubble sort, and quick sort are all stable sorting algorithms.
e) The insertion sort can be considered as a special case of the shell sort.
Explanation: A is true because merge sort always has complexity n*log(n), while insertion sort has average (and worst-case) complexity of n^2 but best-case complexity of just n.B is true because both bubble sort and insertion sort have average (and worst-case) complexity of n^2 and best-case complexity of n.C is true as the merge sort effectively requires a second array of n data to use as a buffer.D is false because the quick sort algorithm is unstable (it does not maintain the order of equal valued elements).E is true because the insertion sort is effectively the shell sort with h=1.
Tags: Sorting, Complexity
Author: mjs209 (mjs209)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255389
Created: 11:41pm, 04 Jan 2020
What is a hybrid sorting algorithm?
*a) An algorithm that combines multiple sorting algorithms.
b) An algorithm that has a constant time complexity.
c) An algorithm that combines at least one stable sorting algorithm and at least one unstable sorting algorithm.
d) There is no such thing as a hybrid sorting algorithm.
Explanation: This was part of coursework 3.
Tags: Sorting, Search
Author: ohr22 (ohr22)
Avg Rating: 3.3300
Avg Difficulty: 0.2222
Total ratings: 9



ID: 4255388
Created: 11:36pm, 04 Jan 2020
What is the difference between a singly linked list and a doubly linked list?
a) In a singly linked list, a node is linked to one other random node whereas in a doubly linked list a node is linked to two other random nodes.
b) It is quicker to search a singly linked list than a doubly linked list.
*c) A singly linked list can't easily be searched backwards, a doubly linked list can be.
d) A doubly linked list is always better than a singly linked list.
Explanation: In a doubly linked list, each node contains a link to the previous node and it is therefor possible to search through the list backwards.However in a singly linked list, only the link to the next node is stored.
Tags: ADTs, Lists
Author: ohr22 (ohr22)
Avg Rating: 3.6000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4255661
Created: 11:33pm, 04 Jan 2020
The following list is being sorted by first letter only:hondahalloumibeeThe sorting algorithm produces the following output:beehalloumihondaWhat property is guaranteed to be true about the sorting algorithm used?
a) The algorithm used had time complexity O(n)
*b) The algorithm used was unstable
c) The algorithm used n comparisons
d) The algorithm used was stable
e) The algorithm used had time complexity O(nlogn)
Explanation: As we are only sorting by first letters as stated, honda and halloumi are considered equal. In the output, honda and halloumi have switched positions as halloumi is now above honda. This means the sort used is unstable, as in a stable sort items of equal value retain their relative position after sorting (2019 Week4a-post slide 10), i.e. honda would've stayed above halloumi as this is the order they were in the input.
Tags: Lists, Sorting
Author: agr33 (agr33)
Avg Rating: 4.5600
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4255385
Created: 11:29pm, 04 Jan 2020
What will the following tree look like after being balanced?4 2 1 0 -1 3 6 5 7
a) 4 2 1 0 -1 3 6 5 7
*b) 4 2 0 -1 1 3 6 5 7
c) 4 2 1 0 -1 3 6 5 7
Explanation: The following subtree :1 0 -1needs to be rotated to the right in order to balance the tree, resulting in this new subtree :0 -1 1
Tags: ADTs, Trees
Author: ohr22 (ohr22)
Avg Rating: 4.6000
Avg Difficulty: 1.2000
Total ratings: 5



ID: 4255384
Created: 11:27pm, 04 Jan 2020
Below shows a binary search tree where V represents the values of each node in the tree. If the values had been inserted in the order 11, 4, 16, 2, 14, 19, 9, 3, 17, 12, 1, 15, 27, 10, 7 what would the value of X (in diagram) be? V V V V V V VV V V V X V V V
a) 11
b) 13
c) 15
*d) 12
e) 10
Explanation: If the next input value in the list is greater than the value of the node you're currently visiting, travel right, otherwise, travel left. Continue until you reach the end of a branch.The tree would look like the following: 11 4 16 2 9 14 191 3 7 10 12 15 17 27
Tags: Trees
Author: tomdraper (td544)
Avg Rating: 3.0000
Avg Difficulty: 1.3333
Total ratings: 3



ID: 4255382
Created: 11:14pm, 04 Jan 2020
With relation to graphs, what isdepth-first traversal?
*a) Move forward until you hit either a dead-end or previously visited vertex. At which point, backtrack and traverse along another path.
b) Traverse along the left-most edges until all have been visited. Then backtrack and traverse right edges.
c) Traverse the graph in growing concentric circles, exploring the different "levels" one at a time.
d) Visit vertices randomly until all have been visited.
Explanation: A is depth-first traversal.B is a made-up, nonsense traversal method.C is breadth-first traversal.D is just randomness.
Tags: Graphs
Author: ajm266 (ajm266)
Avg Rating: 5.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255378
Created: 10:57pm, 04 Jan 2020
Consider the following binary tree 17 / \ 14 43 / \ / \ 7 16 34 68 / \ 1 3By which traversal/traversals will the node 14 be printed out the latest?
a) Pre-Order
b) In-Order
*c) Post-Order
d) Pre-Order and Post-Order
e) In-Order and Post-Order
Explanation: Pre-Order: 17, 14 ... => 2nd element printedIn-Order: 1, 7, 3, 14 ... => 4th element printedPost-Order 1, 3, 7,16, 14 ... => 5th element printed
Tags: Applications, Trees
Author: ashwin (ap2527)
Avg Rating: 5.0000
Avg Difficulty: 1.0000
Total ratings: 4



ID: 4255372
Created: 10:39pm, 04 Jan 2020
One of the approaches to dealing with collisions in a hash table is known aslinear probing. How does this work?
a) If a collision occurs, the data we were trying to insert is placed in a special section at the end of the hash table reserved for collided data.
b) A linked list is placed in the slot where the collision occurred, allowing multiple values to be stored there.
c) It uses a second, different hash function to re-calculate the the position in which the data should be placed.
*d) It scans down the hash table until a free, unoccupied slot is found and stores the value there.
Explanation: When linear probing is used, the algorithm scans down the table until a free slot is found. The data is then placed there. If it probes off of the end of the hash table, it simply loops back around to the beginning of the hash table and continues looking for a free spot.When searching for a piece of data that has been inserted via linear probing, we use the hash function to compute a target slot. The algorithm then linear probes down the list until it either finds the data or hits an empty slot. If it hits an empty slot, that means the data you're looking for isn't in the hash table at all. (or your linear probing algorithm is broken)
Tags: Hashtables
Author: ajm266 (ajm266)
Avg Rating: 4.8300
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4255370
Created: 10:35pm, 04 Jan 2020
In order to prove function f(n) is ?(g(n)), which of the following conditions must be satisfied?
*a) where c1, c2 > 0 and for all n>n0 for some n0 > 0
b) where c1 , c2 > 0 and for all n>n0 for some n0 > 0
c) where c1 > 0 and for all n>n0 for some n0 > 0
d) where c1 > 0 and for all n>n0 for some n0 > 0
Explanation: 2019 Week2b Slide 15,2019 DSA Proofs Tutorial 'Introduction to Compelxity Proofs' slide 14
Tags: Complexity
Author: ashwin (ap2527)
Avg Rating: 5.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255369
Created: 10:32pm, 04 Jan 2020
Given the tree: 5 / \ 3 10 / \ / \ 2 4 7 11 / / \ \ 1 6 9 12Apply the following operations in the given order:1.Remove 5;2.Re-balance, so that each node has balance factor in {-1,0,1}3.Apply post-traversalWhich output is correct?
*a) 1,3,2,6,9,7,12,11,10,4
b) 4,3,10,2,7,11,1,6,9,12
c) 1,3,2,4,9,7,12,11,10,6
d) 4,2,1,3,10,7,6,9,11,12
Explanation: By deleting 5 can replace it by either rightmost in left sub-tree or leftmost in right sub-tree.The first case is done here:Tree becomes: 4 / \ 3 10 / / \ 2 7 11 / / \ \1 6 9 12Then re-balance left-subtree(3 has bal.factor= -2) 4 / \ 2 10 / \ / \ 1 3 7 11 / \ \ 6 9 12Now apply post-order traversal i.e. 1)left 2)right 3)current
Tags: Trees
Author: aleksandar (as3358)
Avg Rating: 2.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255365
Created: 10:23pm, 04 Jan 2020
If the following binary tree was to be traversed in apre-ordermanner, in which order would the letters be read?
a) C B D A E F
b) C D B F E A
*c) A B C D E F
d) A B E C D F
Explanation: A pre-order traversal reads nodes in the following order:1. Current node2. Left sub-tree3. Right sub-treeSo here, we first read the root, then move to the left and read that. Then move to the left and read that, and continue until we reach the bottom of the left-most sub-tree. Then we can traverse back up the way we came, reading out the right sub-trees of the nodes. Then once we reach back to the root node, repeat this same process but traversing down the root's right sub-tree.A is in-order traversal.B is post-order traversal.C is pre-order traversal (the correct answer to the this question).D is level order traversal.
Tags: Search, Trees
Author: ajm266 (ajm266)
Avg Rating: 4.4000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4255354
Created: 9:50pm, 04 Jan 2020
An open hash table is:
a) Identical to a closed hash table but you can resize it
b) A long linked list
*c) An array of linked lists
d) A certain kind of skip list
Explanation: An open hash table is an array of linked lists. Each list holds items that all hash to the same value.
Tags: ADTs, Lists, Hashtables
Author: ts2042 (ts2042)
Avg Rating: 3.3800
Avg Difficulty: 0.0000
Total ratings: 8
==> Comment 1: I feel like the word "array" might not be entirely suitable here since it is another ADT different to a hash table. I understand the use of the word and get what you mean, but it might be a bit confusing for some. (by: ajm266 [ajm266])



ID: 4255345
Created: 9:18pm, 04 Jan 2020
After applying pre-order traversal on the following tree: 50 / \ 25 63 / \ / 8 31 5 / \ / / 3 10 20 1What will be the output?
a) 3,8,10,25,20,31,50,1,5,63
*b) 50,25,8,3,10,31,20,63,5,1
c) 50,25,63,8,31,5,3,10,20,1
d) 3,8,10,1,5,63,50,25,31,20
Explanation: Apply pre-order i.e., 1) current 2)left 3)right
Tags: Trees
Author: aleksandar (as3358)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4255342
Created: 9:02pm, 04 Jan 2020
What does the following arithmetic expression tree evaluate to? / \- +/ \ / \8 2 1 2
*a) 2
b) 12
c) -1/2
Explanation: Applying the rules for expression evaluation:If the current node is a number, return its value.Recursively evaluate the left subtree and get the result.Recursively evaluate the right subtree and get the result.Apply the operator in the current node to the left and right results; return the result.gives us (8-2)/(1+2) = 6/3 = 2
Tags: Trees
Author: tn364 (tn364)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4255341
Created: 9:01pm, 04 Jan 2020
What will be produced after applying 3-sorting followed by 2-sorting on the array10,8,50,6,3,0,2,15?
*a) 0,2,6,3,8,15,10,50
b) 3,50,0,2,15,6,8,10
c) 0,3,8,2,6,10,15,50
d) 6,3,0,2,8,50,10,15
Explanation: First apply 3-sorting to get:10,8,50,6,3,0,2,15->6,8,50,10,3,0,2,15->6,3,50,10,8,0,2,15->6,3,0,10,8,50,2,15->6,3,0,2,8,50,10,15Now apply 2-sorting over the right-most on the upper row:6,3,0,2,8,50,10,15->0,3,6,2,8,50,10,15->0,2,6,3,8,15,10,50
Tags: Sorting
Author: aleksandar (as3358)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255331
Created: 7:59pm, 04 Jan 2020
Alice receives a message, m, from Bob using the usual RSA encryption method (N and t public, s secret). She signs it by computing h(m) and then sending c = h(m)s(mod N) to Bob. How does Bob verify that Alice signed m?
a) He computes h(c) and checks that m = h(c)t (mod N)
b) He computes h(c) and checks that h(c) = mt (mod N)
*c) He computes h(m) and checks that h(m) = ct (mod N)
d) He computes h(m) and checks that c = h(m)t (mod N)
Explanation: 2019 week 11(b) slide 13
Tags: Cryptography
Author: ksewell (ks963)
Avg Rating: 4.7100
Avg Difficulty: 1.2857
Total ratings: 7



ID: 4255328
Created: 7:50pm, 04 Jan 2020
I have a standard closed hash table with linear probing, with the function h(x) = x % 7. I wish to put the following elements: 10, 3, 11, 20, 21, 22, 8 (in that exact order). What does the table look like afterwards?
*a) 21, 22, 8, 10, 3, 11, 20
b) 21, 22, 10, 8, 11, 3, 20
c) 20, 8, 22, 10, 3, 11, 21
d) 3, 8, 10, 11, 20, 21, 22
e) None of the above
Explanation: 10 % 7 = 3, so goes in 3_, _, _, 10, _, _, _3 % 7 = 3, but 10 is in 3, so goes in 4_, _, _, 10, 3, _, _11 % 7 = 4, but 3 is in 4, so goes in 5_, _, _, 10, 3, 11, _20 % 7 = 6_, _, _, 10, 3, 11, 2021 % 7 = 021, _, _, 10, 3, 11, 2022 % 7 = 121, 22, _, 10, 3, 11, 208 % 7 = 1, but 22 is in 1 so goes in 221, 22, 8, 10, 3, 11, 20Therefore, it is A
Tags: Hashtables
Author: thisisausername (tl790)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255326
Created: 7:40pm, 04 Jan 2020
For the below BST, what is the result of performing a postorder traversal on the tree?
a) 1 4 2 5 7 6
b) 1 2 4 5 6 7
*c) 1 4 2 6 7 5
d) 5 2 1 4 7 6
Explanation: In postorder traversal, the tree is traversed in the following way:1. The left subtree is traversed.2. The right subtree is traversed.3. The root is visited.In this case, we consider first the left subtree, which has as root 2, and as leaves 1 and 4.We then consider the left subtree of this, which consists only of the node 1, so this is recorded. Current result: 1We then consider the right subtree, which consists only of the node 4, so this is recorded. Current result: 1 4We then return to the root of the subtree, which is 2, and record this. Current result: 1 4 2Next we examine the right subtree, which has as root 7, and as leaf 6.We consider the left subtree of this, which consists only of the node 6, so this is recorded. Current result: 1 4 2 6As there is no right subtree, we consider next the root, which is 7, and record this. Current result: 1 4 2 6 7Finally, we return to the root of the overall tree, which is 5, and record this. Final result: 1 4 2 6 7 5
Tags: Trees
Author: tb799 (tb799)
Avg Rating: 4.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255321
Created: 7:02pm, 04 Jan 2020
Which Asymptotic Complexity has the highest growth rate:
a) n
b) log^2(n)
*c) n log(n)
d) sqrt(n)
e) log(n)
Explanation: Comparing against n, it is intuitive that log(n), log^2(n) and sqrt(n) have smaller growth rate than n; and it also stands to reason that nlog(n) has a higher growth rate than n as log(n)>1 for all values of n greater than the base of the log.
Tags: Complexity
Author: tn364 (tn364)
Avg Rating: 3.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4255314
Created: 6:40pm, 04 Jan 2020
A large company is looking to store their employee ID numbers in an open hash table. They currently have 20,000 employees, however they would like to future proof their system and design their system for a capacity of 30,000. They would like to perform operations on certain IDs with an average number of steps at 4. How many buckets would their hash table require to fit these specifications?
a) 3334
*b) 5000
c) 10000
d) 6667
e) 8000
Explanation: Week10b-Slide30Use the average step formula for open hash tables to find the load value ( steps = 1 + L / 2 which gives L = 6 ).Then use the load formula to find the number of buckets ( buckets = values / load giving the answer buckets = 5000).
Tags: Hashtables
Author: spf29 (spf29)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255312
Created: 6:36pm, 04 Jan 2020
What is the minimum number of nodes I need to add to an empty AVL tree in order for it to have a depth of 3?
a) 3
b) 5
c) 4
d) 6
*e) 7
Explanation: The finished tree might look something like this: 6 / \ 3 8 / \ \ 2 4 9 / 1Remember, the root node is at depth 0.
Tags: ADTs, Trees
Author: ts2042 (ts2042)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255311
Created: 6:36pm, 04 Jan 2020
A binary tree has six levels, and all are full exceptfor the last level, which is only half full. How manynodes does it have?
a) 23
b) 64
*c) 47
d) 127
e) 51
Explanation: Since it is a complete binary tree (ie. "one in which every leaf node has same depth and every non leaf has exactly two children")Level 1: 1 nodeLevel 2: 2 nodesLevel 3: 4 nodesLevel 4: 8 nodesLevel 5: 16 nodesLevel 6: 16 nodes (since half full)1+2+4+8+16+16 = 47
Tags: Trees
Author: sp2080 (sp2080)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4
==> Comment 1: A slightly quicker way to do this would maybe be to remember that each level has 2^d nodes, and a complete binary tree has 2^(d+1) - 1 nodes, where d is the depth of the tree. (by: ts2042 [ts2042])



ID: 4255309
Created: 6:31pm, 04 Jan 2020
You are a Postman and have been tasked with finding the shortest path to house D.You begin your route at the Post office (A).You have been given the following information:Distances between nodes are:A->D=6A->B=10A->C = 4C->D=1C->B=9D->B=3
a) 4
*b) 5
c) 10
d) 15
Explanation: From A directly we can reach A=0,B=10,C=4,D=6Settle A and go to the closest vertex to A, which is C so settle C as there is no faster way of reaching C.Now can we get to any nodes faster by going through C? Yes D as can get to by 4+1. Therefore update D. There is no faster way of getting to D so settle D. Therefore we can get to D in 5.
Tags: Applications, Graphs
Author: ath36 (ath36)
Avg Rating: 3.2000
Avg Difficulty: 0.0000
Total ratings: 5



ID: 4255592
Created: 6:04pm, 04 Jan 2020
You have been tasked with building a probabilistic Skip list with 1,048,576 nodes.How many lanes will the skip list have? i.e.( if a skip list has lanes labeled "lane 0",lane 1" & "lane 2" it has 3 lanes).What is the probability that a node will be assigned to the lane labeled "lane 15"?
a) 19 LanesA1/16384chance of being assigned to the lane
*b) 20 LanesA 1/32768 chance of being assigned to the lane
c) 16 LanesA 1/131072 chance of being assigned to the lane
Explanation: 20 Lanes as there is 2^20=1,048,576 nodes. The number of lanes is determined bylog(base2)(n).These lanes are numbered 0,1,2,...,19There is a 1/32768 chance of being assigned to the lane 15 as: lane m is between approx every 2^m nodes with a chance of being in lane m of 1/(2^m) therefore lane 15 is between approx every 2^15 nodes with a chance of being in lane 15 of 1/(2^15) = 1/32768
Tags: Lists, Applications
Author: ath36 (ath36)
Avg Rating: 3.6000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4255303
Created: 5:51pm, 04 Jan 2020
What is the output of an Post-Order Traversal of the following tree
a) 21, 28, 32, 38, 39, 42, 54, 59, 99
b) 42, 38, 28, 21, 32, 39, 59, 54, 99
*c) 21, 32, 28, 39, 38, 54, 99, 59, 42
d) 42, 38, 59, 28, 39, 54, 99, 21, 32
Explanation: A: In-Order TraversalB: Pre-Order TraversalC: Post-Order Traversal (answer)D: Level-OrderIt helps me to look at the diagram on this Wikipedia article:https://en.wikipedia.org/wiki/Tree_traversal
Tags: Trees
Author: thisisausername (tl790)
Avg Rating: 3.5000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255302
Created: 5:40pm, 04 Jan 2020
Where O represents big O notation , using Big O rules from week2)b):What is f(n)*h(n)=O(?) ?Where:c= constantf(n) = O(c*m(n))h(n) = q(n)+p(n)q(n)=O(t(n))t(n)=O(p(n))
a) f(n)*h(n)= O(c*m(n)*t(n))
b) f(n)*h(n)= O(p(n))
*c) f(n)*h(n)= O(m(n)*p(n))
d) None of the above
Explanation: 1) f(n) = O(m(n)) as by "Scaling" constant factors have no effect.2)By "Transitivity" O(q(n))<=O(p(n)) : q is bound above by t, which is bound above by p , therefore q is bound above by p3) By "Sums" h(n)=O(p(n)) as from 2) we see that p(n) is larger and the bigger sum dominates4) By "Products" we see that O(f(n)*h(n)) = O(m(n)*p(n))See week2)lec b) for the rules
Tags: Applications, Complexity
Author: ath36 (ath36)
Avg Rating: 3.2900
Avg Difficulty: 1.4286
Total ratings: 7



ID: 4255297
Created: 5:28pm, 04 Jan 2020
Which of the following sorting algorithms has the largest best time complexity, i.e. the largest O(n) in the best case:
a) Quick Sort
*b) Selection Sort
c) Bubble Sort
d) Insertion Sort
e) Merge Sort
Explanation: Quick Sort: O(n log(n))Merge Sort: O(n log(n))Bubble Sort: O(n)Insertion Sort: O(n)Selection Sort: O(n2)Thus, Selection sort has the largest time complexity with O(n2)
Tags: Lists, Sorting, Complexity
Author: thisisausername (tl790)
Avg Rating: 2.5000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255294
Created: 5:22pm, 04 Jan 2020
You are working for a car manufacturing company (Honda) and you have a list of 10,000 car registration numbers.The admins who inputted this data into a list did not store the data alphabetically, but you want to sort them.Which sorting algorithm would be the quickest to use given the data is currently randomly sorted?
a) Bubble sort
*b) Quick sort
c) Selection sort
d) Insertion sort
Explanation: Complexities averageBubble sort: n2= 100,000,000Quick sort: nlog(n) = 40,000Selection sort:n2 = 100,000,000Insertion sort: n2 = 100,000,000More information in Week 5a and 5b lecture slides 2019.
Tags: Sorting, Complexity
Author: turbochloe1 (cjl79)
Avg Rating: 4.2900
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4255293
Created: 5:22pm, 04 Jan 2020
What is "time resolution"?
a) How close together multiple timings are to one another
*b) The smallest unit of time that can be measured by the timer
c) How close a timing is to the true value
d) None of the above
Explanation: The correct answer is B. Lecture 1)b).A) is Time precisionC) Is Time accuracy
Tags: ADTs
Author: ath36 (ath36)
Avg Rating: 2.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255292
Created: 5:09pm, 04 Jan 2020
Which of these sorting algorithms would be most appropriate for data which is nearly fully sorted?
a) Merge sort
b) Quicksort
*c) Bubble Sort
d) Binary Tree Sort
Explanation: All other listed algorithms have a best case of nlogn.Bubble sort has a best case of N and will stop sorting when it does an iteration in which no swaps were required.
Tags: Sorting
Author: wd371 (wd371)
Avg Rating: 4.1700
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4255289
Created: 5:05pm, 04 Jan 2020
Given the hash function f(x) = x % 10, for the following input (1234,60,1264,3456,638,3666,349,201,470,1000,84,3), which statement is true for this input using open hashing:
a) The elements 3456, 3666 and 60 hash to the same value
b) The element 3 generates an error with this hash function
*c) The elements 1234, 1264 and 84 hash to the same value
d) Each element hashes to a different value(unique)
e) Once one element hashes to a value, no other element can hash to this value
Explanation: In open hashing the function x % 10 gives:1234 = 460 = 01264 = 43456 = 6638 = 83666 = 6349 = 9201 = 1470 = 01000 = 084 = 43 = 3A is false as the elements 3456, 3666 and 60 DO NOT hash to the same valueB is false as 3 % 10 = 3, so NO error is generatedC is true as the elements 1234, 1264 and 84 all hash to the same value of 4D is false as each element DOES NOT hash to a different value(unique)E is false as multiple elements can hash to the same value (they are put into a linked list)Extra information on hashtables can be seen in the Week10b-HashtablesAll lecture from 2019
Tags: Hashtables
Author: turbochloe1 (cjl79)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255374
Created: 4:56pm, 04 Jan 2020
You are implementing a data structure. When you insert a new items at the front of data structure, it can be done in just a few simple steps. When you try to access the 1500th item, you must pass through 1499 others first. If you want to remove an item, you can remove any item in just a few steps once you have found it. It does not have a previous pointer. What data structure have you implemented?
a) Doubly linked list
*b) Linked list
c) A graph
d) An array
e) None of the above
Explanation: You have to pass though x-1 nodes to access the x th node in a list. You can insert an item in just a few steps at the start of the list regardless of the number of nodes, unlike an array. Once you have found an item you want to remove, you can do so in just a few steps with a linked list, unlike an array where you would have to shift all the following items left one slot.Doubly linked lists make use of previous pointers, linked lists do not.More information:2019_TFLinkedlistsedit slide 13
Tags: ADTs, Lists, Graphs, Search
Author: dmcs21 (dmcs21)
Avg Rating: 4.0000
Avg Difficulty: 0.7000
Total ratings: 10



ID: 4255275
Created: 4:41pm, 04 Jan 2020
Draw a closed hash table with linear probing of size 7. The hash function is h(x) = x % 7.The following elements are inserted into the hash table: 2, 7, 13, 19, 21, 25, 29What is the correct order of the elements now in the hash table?
a) 7, 21, 2, 29, 19, 25, 13
b) 7, 2, 13, 19, 21, 25, 29
c) 7, 21, 2, 29, 13, 25, 19
*d) 7, 21, 2, 29, 25, 19, 13
e) 7, 25, 21, 19, 13, 29, 2
Explanation: See 2019 lecture slides Week10b-HashtablesAll to understand the process of hashing and hash tables.
Tags: Hashtables
Author: cc2318 (cc2318)
Avg Rating: 4.2500
Avg Difficulty: 1.0000
Total ratings: 4



ID: 4255274
Created: 4:40pm, 04 Jan 2020
Billy Bob needs to implement a searching algorithm. His algorithm keeps dividing the search area in half (on sorted data) until it arrives at his word. However, there's a twist! The algorithm is very clever, and, if for example the word starts with 'z', it will start searching towards the end. The steps taken by this algorithm is log_base2(log_base2(n)) on average. Which of the following algorithms did Mr. Bob implement?
a) Linear search
b) Binary search
*c) Interpolation search
d) Exponential search
e) None of the above
Explanation: Interpolation search is an improved binary search by choosing a different element (i.e. not necessarily the halfway element) based on what you are searching for. So, for A, B, C? Search at the beginning! K, L, M? Search in the middle! X, Y, Z? Search at the end!More information:DA-2019_TF_Lecture02-ADTs, slide 10.https://en.wikipedia.org/wiki/Interpolation_search
Tags: Search, Complexity
Author: dmcs21 (dmcs21)
Avg Rating: 4.6700
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4255277
Created: 4:31pm, 04 Jan 2020
Given the following algorithm:for(int i = 0; i < n; i++) for(int j = 0; j < n; j++) System.out.println("I love DSA!!!");Which of the following following describes the correct time complexity bounds?
a) O(n^2), theta(n^2), omega(n^2) only.
b) O(n^3), theta(n^2), omega(n) only.
c) O(2^n), theta(n^2), omega(log n) only.
*d) They are all correct.
e) None of them are correct.
Explanation: They are all correct time complexity bounds. Theta means exactly, big-O means at most, and omega means at least. Therefore, if theta is n^2, then big-oh of anything greater than or equal to theta is correct, and omega of anything lesser than or equal to theta is correct.In other words,Exact bound (i.e. big theta).Upper bound (i.e. big O).Lower bound (i.e. big omega).More information:2b Slide 10
Tags: Complexity
Author: dmcs21 (dmcs21)
Avg Rating: 4.0000
Avg Difficulty: 1.2500
Total ratings: 4
==> Comment 1: The word 'only' in the answers slightly confusing - when you say 'all of them are correct' you don't specify if you mean all the answers themselves or the all different complexities mentioned in the answers. This led me to think that it was impossible for 'all of them are correct' to be the answer, because how can the complexity be omega(n^2) only AND omega(n) only? It makes it seem like it has to be one answer or the other. Another way to lay this out would be listing the complexities in the questions itself, then have the answers be A:1,2,3 only B:2,3,4 only, C:1,2,3,4,5,6, etc. (by: ts2042 [ts2042])



ID: 4255263
Created: 4:23pm, 04 Jan 2020
You are tasked to chose a sorting algorithm which will take the same time to sort any two lists with the same number of elements.Which one fits the requirements from the list below?
*a) Selection Sort
b) Quick Sort with a median of three implementation
c) Insertion Sort
d) Bubble Sort
Explanation: Selection Sort: Best(n^2), Average(n^2), Worst(n^2)Quick Sort with a median of three implementation: Best(nlog(n)), Average(nlog(n)), Worst(nlog(n))Insertion Sort: Best(n), Average(n^2), Worst(n^2)Bubble Sort: Best(n^2), Average(n^2), Worst(n^2)Selection Sort is the only one which fits the requirements even if it's not the best algorithm in general2019 Week 7(a) slide 5
Tags: Sorting, Complexity
Author: robbysa (rs2318)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4255257
Created: 4:18pm, 04 Jan 2020
Which of the following sorting algorithms is stable?
a) Shell sort
b) Heap sort
c) Stooge sort
d) Quick sort
*e) Merge sort
Explanation: Merge sort is a stable sorting algorithm.Quick sort is typically not stable, but some stable versions do exist.
Author: tomdraper (td544)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4255251
Created: 4:04pm, 04 Jan 2020
The following pseudocode shows a function "traverse" that recursively performs a tree traversal algorithm to print the tree values. What is the name of the traversal?traverse(node) if (node == null) return traverse(node.left) traverse(node.right) print(node.value)
a) Pre-order
b) Level-order
*c) Post-order
d) In-order
Explanation: Pre-order - current, left, rightIn-order - left, current, rightPost-order - left, right, currentLevel-order - visits every node on a level before moving down
Tags: Trees
Author: tomdraper (td544)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4255248
Created: 3:58pm, 04 Jan 2020
What is the best, average and worst time complexity of shell sort?
a) Best: O(nlog(n)), Average: O(n^2), Worst: O(n^2).
b) Best: O(nlog(n)), Average: O(nlog(n)), Worst: O(nlog(n)).
c) Best: O((n^2)log(n)), Average: O(n), Worst: O(n^2).
*d) Best: O(nlog(n)), Average: Varies, Worst: O(n^2).
e) Best: O(n), Average: O(n), Worst: O(n^2).
Explanation: 2019 week5a slide 10 gives links
Tags: Sorting, Complexity
Author: jc2909 (jc2909)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 2
==> Comment 1: 2019 slides week 7(a) Sorting and Probing page 5:There are two shell's sort and both look different from the answer you marked as correct (by: robbysa [rs2318])



ID: 4255245
Created: 3:45pm, 04 Jan 2020
Which of the following sorting algorithms does not have an average time complexity of nlogn?
a) Quick Sort with a median of three implementation
b) Heap sort
c) Merge sort
*d) Shell sort
e) Quick sort with a guaranteed median as a pivot
Explanation: Shell sort has an average complexity of O(n1.25).
Tags: Sorting
Author: tomdraper (td544)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4255243
Created: 3:34pm, 04 Jan 2020
Between the following statements,which better explains the difference between an Open Hash Table and a Close Hash Table?
a) A Close Hash Table can only store a fixed number of itemsAn Open Hash Table can be expanded when needed to store more items
*b) A Close Hash Table has a fixed number of buckets in which items can be storedAn Open Hash Table has a fixed number of buckets which contains other data types, like a linked list, in which items with the same hash code will be stored.
c) An Open Hash Table can only store a fixed number of itemsA Close Hash Table can be expanded when needed to store more items
d) An Open Hash Table has a fixed number of buckets in which items can be storedA Close Hash Table has a fixed number of buckets which contains other data types, like a linked list, in which items with the same hash code will be stored.
Explanation: See slides of the lecture 10b
Tags: Hashtables
Author: robbysa (rs2318)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255242
Created: 3:34pm, 04 Jan 2020
Which of the following ontology languages and notations has the most commercial support globally?
a) Web Ontology Language (OWL)
b) Resource Description Framework (RDF)
c) DARPA ML and Ontology Inference
d) Topic Maps/XML Topic Maps
*e) Universal Modelling Language (UML)
Explanation: A - Web Ontology Language is limited to niche areas.B - Resource Description Framework (RDF) is small outside of academia.C - DARPA ML and Ontology Inference has a fair amount of use, but is mainly US-centric.D - Topic Maps/XML Topic Maps has limited use.E - Universal Modelling Language (UML) is widely used.
Tags: Applications, Graphs
Author: tomdraper (td544)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255240
Created: 3:33pm, 04 Jan 2020
What is the worst possible time complexity of an insertion sort on a list of size n?
a) T(n)
*b) T(n2)
c) T(n log n)
Explanation: Week7a-Slide5
Tags: Sorting, Complexity
Author: spf29 (spf29)
Avg Rating: 3.8000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4255237
Created: 3:27pm, 04 Jan 2020
How will the array look after using h-sort with an h-value of 2 on: 5,9,3,7,2
a) 3,7,2,5,9
b) 2,3,4,7,9
*c) 2,7,3,9,5
Explanation: 2019 Week 5a powerpoint Slide 4. Same algorithm on a set of numbers.
Tags: Sorting
Author: aisd20 (aisd20)
Avg Rating: 2.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255233
Created: 3:17pm, 04 Jan 2020
Which of the following sorting algorithms has an average time complexity ofT(n)=nlog(n) and space complexityT(n)=n?
a) Heap Sort
b) Stooge Sort
c) Insertion Sort
*d) Merge Sort
e) None of the above
Explanation: Heap Sort has a space complexityT(1).Insertion Sort has an average time complexityT(n^2).Stooge Sort is incredibly slow with time complexity higher than n^2.Merge sort has a time complexity of T(nlogn) and space complexity ofT(n) as it needs a temporary array for storing the sorted lists.
Tags: Sorting, Complexity
Author: asr64 (asr64)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255226
Created: 3:01pm, 04 Jan 2020
Which of the following trees is a legit binary search tree containing the numbers (2,7,9,12,18,23,26,37,43,75)? Represented in PRE-ORDER traversal!
*a) 26, 12, 7, 2, 9, 18, 23, 43, 37, 75
b) 26, 12, 43, 7, 18, 37, 75, 2, 9, 23
c) 2 ,7, 9, 12, 18, 23, 26, 37, 43, 75
d) 26, 43, 7, 2, 9, 18, 23, 12, 37, 75
e) 2, 9, 7, 23, 18, 12, 37, 75, 43, 26
Explanation: A) Pre-order traversalB) In-Level traversalC) In-order TraversalD) Not a legitimate binary search treeE) Post-order Traversal
Tags: Trees
Author: asr64 (asr64)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255224
Created: 2:59pm, 04 Jan 2020
Given this graph:How many paths of length 2 or less are there from vertex C to F?
a) 0
b) 1
*c) 2
d) 3
e) 4
Explanation: If you make the adjacency matrix for this graph then square it you get a 1 in the (3,5) slot on both meaning there is one path of length one and one path of length two so adding these gives 2 paths of length 2 or less.
Tags: Graphs
Author: jah234 (jah234)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4255998
Created: 2:56pm, 04 Jan 2020
Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7.Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing?Note that �_� denotes an empty location in the table.
*a) 1, 8, 10, _, _, _, 3
b) 8, _, _, _, 3, 1, 10
c) 1, _, _, 10, 8, _,3
d) 1, 10, 8, _, _, _, 3
Explanation: Let us put values 1, 3, 8, 10 in the hash of size 7. Initially, hash table is empty- - - - - - -0 1 2 3 4 5 6The value of function (3x + 4)mod 7 for 1 is 0, so let us put the value at 01 - - - - - -0 1 2 3 4 5 6The value of function (3x + 4)mod 7 for 3 is 6, so let us put the value at 61 - - - - - 30 1 2 3 4 5 6The value of function (3x + 4)mod 7 for 8 is 0, but 0 is already occupied, let us put the value(8) at next available space(1)1 8 - - - - 30 1 2 3 4 5 6The value of function (3x + 4)mod 7 for 10 is 6, but 6 is already occupied, let us put the value(10) at next available space(2)1 8 10 - - - 30 1 2 3 4 5 6
Tags: Hashtables
Author: rhfd20 (rhfd20)
Avg Rating: 4.8800
Avg Difficulty: 1.1250
Total ratings: 8
==> Comment 1: First (by: marlzjh [mh2220])
==> Comment 2: A very nice question (by: lsg38 [lsg38])



ID: 4255218
Created: 2:52pm, 04 Jan 2020
What is a Balance Factor used for in an AVL Tree?
a) If all child nodes are at the same level
b) What rotation to make.
c) When the last rotation occured
*d) If the tree is unbalanced
Explanation: Answer: DThe balance factor (BalanceFactor = height(left-sutree) - height(right-sutree)) is used to check if the tree is balanced or unbalanced.
Tags: Trees
Author: rhfd20 (rhfd20)
Avg Rating: 3.5000
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4255217
Created: 2:50pm, 04 Jan 2020
What is the runtime of the following code ?for (int i=1; i<n; i=i*2) System.out.println(�hello�);for (int j=1; j<m; j++) for (int k=1; k<10; k++) for (int l=1; l<j; j++) System.out.println(�CM20254�);
a)
b)
c)
*d)
e) None of the above
Explanation: The answer is D since the first for loop is on its own and has complexity log(n) we then add on the complexity of the nested for loops which has complexity m^2.
Tags: Applications, Complexity
Author: mp1 (mp952)
Avg Rating: 4.0000
Avg Difficulty: 1.5714
Total ratings: 7



ID: 4255213
Created: 2:48pm, 04 Jan 2020
Which algorithm is the correct description of pre-order traversal
a) 1. Traverse the left subtree, i.e., call Preorder(left-child)2. View contents of root.3. Traverse the right subtree, i.e., call Preorder(right-child)
*b) 1. View contents of root.2. Traverse the left subtree, i.e., call Preorder(left-child)3. Traverse the right subtree, i.e., call Preorder(right-child)
c) 1. Traverse the left subtree, i.e., call Preorder(left-child)2. Traverse the right subtree, i.e., call Preorder(right-child)3. View contents of root.
Explanation: The answer is B.In pre-order traversal the root is visited before the recursive calls are made.
Tags: Graphs, Trees
Author: jp2294 (jp2294)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4255212
Created: 2:47pm, 04 Jan 2020
Which of these trees is NOT AVL balanced?
a)
b)
*c)
d)
Explanation: The balance factor for all nodes must be either +1,-1 or 0 for an AVL tree. The balance factor for the root in C is 2.
Tags: Trees
Author: jah234 (jah234)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4255209
Created: 2:39pm, 04 Jan 2020
Which of the following is a graph representation?
a) Linked list
b) Array list
*c) Adjacency List
d) B+ Tree
e) Directed Graph
Explanation: Week 9a - graphs lecture; slide 12.
Tags: Graphs
Author: asr64 (asr64)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4255206
Created: 2:30pm, 04 Jan 2020
Which of the following is pre-image resistance?
a) It is hard (as hard as Birthday Paradox attack ~ 2n/2)to find two messages m1 m2 with h(m1) = h(m2).
*b) Given v, it is hard (~ 2n)to find m with h(m) = v
c) Given m2, it is hard (~ 2n)to find m1 m2 with h(m1) = h(m2).
d) The probability of a collision in a hash table is always < 0.1
Explanation: Week 11-a post slide 16.https://moodle.bath.ac.uk/pluginfile.php/1454603/mod_resource/content/0/Week11a-post.pdf
Tags: Hashtables
Author: jah234 (jah234)
Avg Rating: 1.5000
Avg Difficulty: 1.0000
Total ratings: 2



ID: 4255205
Created: 2:27pm, 04 Jan 2020
Take the following list of numbers:13, 214, 24, 63, 46, 153If you were to apply a shell sort to this list, where h = 4, 2, 1, how many swaps take place to reach the sorted list:13, 24, 46, 63, 153, 214
a) 4
*b) 5
c) 6
d) 10
Explanation: It would take 5 swaps to completely sort this list, therefore the correct answer is B.This sort could also be done in 5 swaps using a bubble sort. This fact may have benefitted you if you understand the process of a shell sort.The process of a shell sort can be understood using slides 3-7 of the 2019 lecture slides called "Week5a-Powerpoint" available on Moodle.
Tags: Sorting
Author: cc2318 (cc2318)
Avg Rating: 3.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4255200
Created: 2:08pm, 04 Jan 2020
Accuracy and precision are two important factors to consider when taking data measurements.What are the correct definitions of accuracy and precision?
a) Accuracy is how close a value is to its true value.Precision means the level of detail at which data is stored.
b) Accuracy means there is a lack of bias in the data.Precision is how repeatable a measurement is.
*c) Accuracy is how close a value is to its true value.Precision is how repeatable a measurement is.
d) Accuracy is how repeatable a measurement is.Precision is how close a value is to its true value.
e) Accuracy means the level of detail at which data is stored.Precision means there is a lack of bias in the data.
Explanation: Accuracy is how close a value is to its true value.Precision is how repeatable a measurement is and is measured using the standard deviation of the measurements X1, � , Xn.This information can be found on Moodle:Slides 8 and 9 of the Week1b-Powerpointv2 powerpoint.
Tags: Applications
Author: cc2318 (cc2318)
Avg Rating: 4.5700
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4255195
Created: 1:47pm, 04 Jan 2020
What is the formula to calculate the load on a hash table?
*a)
b)
c)
d)
e) L is always in the range of 0 to 1
Explanation: The answer is A.Look at moodle powerpoint Week10b-HashtablesALL
Tags: ADTs, Hashtables
Author: jp2294 (jp2294)
Avg Rating: 4.7000
Avg Difficulty: 0.7000
Total ratings: 10



ID: 4255188
Created: 1:39pm, 04 Jan 2020
Which answer is always TRUE for Linked Lists?
a) When adding to Linked Lists, if they have a tail reference, they need to be resized.
b) Linked Lists are always faster than array lists at getting to an element in the list/array respectively.
*c) In a Linked List, the best and worst case runtime for the operation add(o) is the same.
d) All Linked Lists always have amortised runtimes of n for insert(o,i) and remove(i).
e) Linked Lists are probabilistic lists.
Explanation: A. Linked Lists never need to be resized before an operation. When a Linked List is added to, regardless of whether it has a tail reference, the list does not need to be first resized.B. Array Lists find the nth element in one step. Linked Lists find the nth element in n steps. They only take the same length of time are when you are finding the first element.C. This is true, they both have a run time of 1.D. This is not always true. If a Linked List has a reference to the (i-1)th element, then the amortised runtime is 1.E. This is only true for skip lists.
Tags: Lists
Author: io272 (io272)
Avg Rating: 3.9000
Avg Difficulty: 0.8000
Total ratings: 10



ID: 4255179
Created: 1:22pm, 04 Jan 2020
Management has asked you to change a closed hashtable to an open hashtable. It currently has a load factor of 0.75.What is the change in the average number of steps to find a bucket after you change the hashtable?Answer is: open av. - closed av, can be positive or negative
a) +2.5, Increase
b) -1.375, Decrease
*c) -1.125, Decrease
d) +1.375, Increase
e) None of the above
Explanation: 2019 Week 10b-HashtablesAll, Slides 31-32. Using the equations for average number of steps for closed and open hashtables with the 0.75 load factor we find closed av. = 2.5 and open av. = 1.375. So the change is 1.375-2.5 = -1.125 steps
Tags: Hashtables
Author: aisd20 (aisd20)
Avg Rating: 4.6700
Avg Difficulty: 1.3333
Total ratings: 3



ID: 4255175
Created: 1:07pm, 04 Jan 2020
Which of these sorting algorithms requires additional working space?
a) Bubble sort
*b) Merge sort
c) Heap sort
d) Selection sort
Explanation: Merge sort has a worst case space complexity of O(n), while bubble sort, heap sort and selection sort have worst case space complexities of O(1)
Tags: Sorting
Author: nhu21 (nhu21)
Avg Rating: 4.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255171
Created: 12:56pm, 04 Jan 2020
An algorithm has runtime, what is the asymptotic time complexity of this algorithm?
a)
b)
*c)
d)
e) None of the above
Explanation: The answer is C since the most significant term in the runtime is n^4. Explained in Lecture Week2b
Tags: Complexity
Author: mp1 (mp952)
Avg Rating: 3.6000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4255166
Created: 12:49pm, 04 Jan 2020
Define what a leaf node in a tree is.
a) A node with zero or more children
*b) A node with zero children
c) A node at the top of a tree
Explanation: 2019 Week 7b-Trees 1, Slide 6. Additionally, whilst the node at the top of a tree may be a leaf node it isn't the definition of one as it can have children.
Tags: ADTs, Trees
Author: aisd20 (aisd20)
Avg Rating: 4.1700
Avg Difficulty: 0.0000
Total ratings: 6



ID: 4255159
Created: 12:33pm, 04 Jan 2020
Choose the correct answer below that completes the definition of Amortised runtime analysis._______ runtime for a Data Structure operation when using it many times starting from an empty Data Structure.
a) Best
*b) Average
c) Worst
d) None of the above options complete the definition correctly
Explanation: Stated in the lectureWeek3a-TF-Arrays lists edit, slide 14
Tags: Complexity
Author: mp1 (mp952)
Avg Rating: 4.7500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4255136
Created: 11:09am, 04 Jan 2020
An abstract data type can be described as "a coordinated group of ____, ____, and ____ that is used to solve a particular problem". Which of the following options would be an incorrect choice to fill one of the blanks?
a) interface functions
*b) networks
c) algorithms
d) data structures
Explanation: week 2a, lecture02-ADTs, slide 18"a coordinated group of data structures, algorithms, and interface functions that is used to solve a particular function"
Tags: ADTs
Author: ksewell (ks963)
Avg Rating: 4.3800
Avg Difficulty: 0.3750
Total ratings: 8



ID: 4255133
Created: 11:05am, 04 Jan 2020
Order the complexities from lowest to highest growth rate:a = log(n)b = n log (n)c = (log(n))^2d = sqrt(n)e = 2^nf = n^3g = n
a) a, b, d, g, c, f, e
b) g, a, b, d, f, c, e
c) a, g, b, c, d, f, e
*d) a, c, d, g, b, f, e
e) g, a, c, e, d, b, f
Explanation: The order is:Logarithmic: log(n)Logarithmic-squared: log2(n)Square root: sqrt(n)Linear: nLogarithmic: nlog(n)Cubic: n^3Exponential: 2^n
Augmented explanation 1: See powerpoint named "Week2b-Powerpoint" 2019, slide 12 for the complete list. (by: sp2080 [sp2080])
Tags: Complexity
Author: sp2080 (sp2080)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4
==> Comment 1: It might be a good idea to provide in the explanation where you found the information for this question, to allow students to find more information on the same topic and improve the quality of your question, that is already really good! As far as I'm aware this list is available on slide 12 of 2019 powerpoint called "Week2b-Powerpoint" (by: cc2318 [cc2318])



ID: 4255127
Created: 10:56am, 04 Jan 2020
Which of the following is an AVL Tree:
a)
b)
*c)
d)
e) None of the Above
Explanation: A) Look at the node with element 4. The left subtree has height 0, whereas the right subtree has height 2, so it is unbalanced and thus not an AVL tree.B) Left subtree of root has height 2, whereas right subtree of root has height 0 => unbalanced => not an AVL TreeC) Height of subtrees doesn't differ by more than one at any node, smaller elements always on left, larger elements always on right.D) 6 < 7, but is on 7's right subtree.E) C is an AVL tree.
Tags: Trees
Author: epo24 (epo24)
Avg Rating: 4.5600
Avg Difficulty: 0.3333
Total ratings: 9



ID: 4255126
Created: 10:48am, 04 Jan 2020
Insert the following numbers lexicographically in an AVL tree: {5,20,8,9,3,11,4,65,85,35,15,1}.What is the in-order transversal of the tree?
a) 5, 20, 11, 1, 15, 35, 3, 4, 8, 65, 9, 85
b) 5, 20, 8, 11, 3, 65, 9, 1, 15, 4, 85, 35
c) 1, 11, 15, 20, 3, 4, 35, 5, 65, 8, 9, 85
*d) 1, 11, 15, 20, 3, 35, 4, 5, 65, 8, 85, 9
e) 1, 15, 3, 4, 85, 11, 35, 65, 9, 20, 8, 5
Explanation: Below is the balanced AVL tree: 5 / \ / \ 20 8 / \ / \ / \ / \ 11 35 65 9 / \ / \ / / \ / \ / 1 15 3 4 85
Tags: Trees
Author: sp2080 (sp2080)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4255009
Created: 3:09am, 04 Jan 2020
You have been tasked with organizing and storing the books available in a library using their ISBN number. Assuming there is only one copy of any book owned by the library, what data structure should you use to complete your task?Some key considerations:You must be able to remove and add books as neededLookup times must be as short as possibleSpace is not an issueBooks do not need to be sorted, merely stored and retrieved
a) Binary Search Tree
b) Linked List
c) Graph
d) Closed Hash Table
*e) Open Hash Table
Explanation: You should use an open hash table because it has O(1) time for insertion, searching, and deletion. You should use a hash table because you can use the ISBN number as a key to perform the hash function on. You wouldn't use a closed hash table because deleting books would be an issue. You wouldn't use a binary search tree because it is not as time efficient as a hash table. You wouldn't use a graph because there are no edges involved so no links between books. You wouldn't use a linked list because it is slower than a hash table.
Tags: Applications, Search, Complexity, Hashtables
Author: shahzeb_m (sm2764)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4255002
Created: 2:43am, 04 Jan 2020
What is the time complexity of the following code:
*a) O(nLogn)
b) O(n/2)
c) O(n^2)
d) O(n^2Logn)
Explanation: It is O(nLogn) becausej keeps doubling until it is less than or equal to n. Therefore, the inner loop has log(n) steps. The outer loop has n/2 steps. As a result,total steps = O(n/ 2 * log(n)) = O(nLogn).
Tags: Complexity
Author: shahzeb_m (sm2764)
Avg Rating: 4.2500
Avg Difficulty: 1.2500
Total ratings: 4



ID: 4254998
Created: 2:06am, 04 Jan 2020
What is a balance factor in an AVL tree used to check?
a) What sort of rotation to make.
*b) If the tree is unbalanced.
c) The height of the tree.
d) If all child nodes are on the same level.
Explanation: The balance factor(left sub-tree height � right sub-tree height) is used to check if the tree is balanced or unbalanced. It is balanced if the balance factor is either 1, 0, or -1. Otherwise, it is unbalanced.
Tags: Trees
Author: shahzeb_m (sm2764)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4254972
Created: 12:43am, 04 Jan 2020
Consider the below BST, which is not a complete binary tree. Remove the root node 3 correctly, as described in lectures, then rebalance the tree as a complete binary tree according to the below definition. Which of the following statements describes the unique resulting tree?The definition of a complete binary tree is to be a binary tree in which every level, except possibly the last, is full, and all nodes on the lowest level are as left as possible.
a) The root node is 2, and the leaves are 1, 5, and 7.
*b) The root node is 5, and the leaves are 1, 4, and 6.
c) The root node is 5, and the leaves are 1, 4, and 7.
d) The root node is 6, and the leaves are 1, 4, and 6.
Explanation: To remove a node with two children, it should first be replaced with another, and then that node should be removed. There are two possible nodes to replace such a node with: the left subtree's rightmost (largest-valued) child, or the right subtree's leftmost (lowest-valued) child. In this example, these are the nodes 2 and 4 respectively.Considering first node 2. Replacing the root node 3 with 2, then removing node 2 produces the following:This is unbalanced, and therefore also not complete. In order to make the tree complete, we must rearrange the nodes so that the minimal number of levels is achieved, and so that all nodes are leftmost on the lowest level. This produces the following:The tree is now balanced and a complete binary tree. We can see that the root node is 5, and the leaves are 1, 4, and 6, therefore this is the correct answer.If we consider now node 4, we must replace the root node 3 with 4, and remove node 4. This produces the following:Although the number of levels is now minimal, again, it is not a complete binary tree. For the tree to be complete, the 'gap' must be rightmost on the lowest level. Rearranging as such produces this:As you can see, this is identical to the result produced after rebalancing the tree in the case when 2 was considered above. Thus, again we reach the answer that the root is 2, and the leaves are 1, 4, and 6, and so we can see that the solution is unique.
Tags: Trees
Author: tb799 (tb799)
Avg Rating: 3.6700
Avg Difficulty: 1.6667
Total ratings: 3



ID: 4254899
Created: 9:13pm, 03 Jan 2020
What is the average case and worst case runtime when searching for a value in a binary search tree with N values?
*a) Average:?(log N)Worst:?(N)
b) Average: ?(log N)Worst: ?(log N)
c) Average: ?(N)Worst: ?(N2)
d) Average: ?(log N/2)Worst: ?(N)
Explanation: Week8a-Trees2 slide 12
Tags: Trees, Complexity
Author: nhu21 (nhu21)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4254897
Created: 8:57pm, 03 Jan 2020
log212! = 28.8355. What is the minimum number of comparisons needed to sort 12 items?
a) 28
b) 29
*c) 30
d) 31
e) 33
Explanation: Week 5a slide 8
Tags: Sorting
Author: nhu21 (nhu21)
Avg Rating: 3.0000
Avg Difficulty: 1.5000
Total ratings: 2



ID: 4254892
Created: 8:30pm, 03 Jan 2020
Given a particular load factor L for a closed hash table with linear probing, on average, how many steps does it take to find an item?
*a) �(1+ 1/(1-L))
b) 1 + L/2
c) L
d) None of the above.
Explanation: Week 10b Hashtables, page 31. (pptx)
Tags: Hashtables
Author: yassin (yo263)
Avg Rating: 5.0000
Avg Difficulty: 1.3333
Total ratings: 3



ID: 4254890
Created: 8:20pm, 03 Jan 2020
Given a Linked List, what is the purpose of the following method, if the method call is doesSomething(head):public void doesSomething(Node node) {if(node== null)return;doesSomething(node.next);System.out.println(node.value);}
a) To find whether a value is in the linked list or not
b) To output the value of each node in the linked list, from first to last
c) To add a new node to the linked list
d) To delete a node from the linked list
*e) To output the value of each node in the linked list, from last to first
Explanation: The function recursively traverses the linked list from front to back and once it reaches the end the recursion unwinds and the node values are output starting from the back to the front.
Tags: ADTs, Lists
Author: jamesg (jg2169)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4254889
Created: 8:14pm, 03 Jan 2020
Let f (n) and g(n) be two real-valued functions defined on the positive integers.If there exist positive numbers b and B, such that |f(n)| = B|g(n)| for all n = b,which of the following is true?
a) f (n) ? T(g(n))
b) f (n) ? ?(g(n))
*c) f (n) ? O(g(n))
d) None of the above.
Explanation: We say that f is of order at most g (written�f (n) ? O(g(n))�) if there exist positive numbers b and Bsuch that|f (n) | = B|g(n)| for all n = b.Week1a.pdf on moodle.
Tags: Complexity
Author: yassin (yo263)
Avg Rating: 3.6300
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4254881
Created: 7:51pm, 03 Jan 2020
The following text describes a type of tree traversal: - Process current node - Process nodes in the left sub-tree - Process nodes in the right sub-treeWhich of the following traversals does the above describe?
a) Post-Order Traversal.
*b) Pre-Order Traversal.
c) In-Order Traversal.
d) Level Order Traversal.
e) None of the above.
Explanation: Below is example code for printing out the data in all the nodes in a tree using the pre-order traversal:void preOrder(Node current) { if (current == null) { return; } System.out.println(current.data); //This is recursive so all the nodes in the left sub-tree will be processed first preOrder(current.left); preOrder(current.right);}
Tags: Search, Trees
Author: yassin (yo263)
Avg Rating: 4.4000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4254880
Created: 7:51pm, 03 Jan 2020
What is the output of the pre-order traversal of the AVL tree which started empty and had the following elements inserted in this order:6, 43, 11, 23, 9, 15
a) 6, 43, 11, 23, 9, 15
*b) 11, 6, 9, 23, 15, 43
c) 9, 6, 11, 23, 15, 43
d) 23, 11, 15, 9, 6, 43
e) 11, 9, 23, 15, 6, 43
Explanation: 6 is entered, balanced43 is entered, balanced11 is entered, unbalanced --> LL rotate, now balanced23 is entered, balanced9 is entered, balanced15 is entered, unbalanced --> R rotate on '43' subtree, now balancedPre-order traversal as described in 2019 Lecture 13
Tags: Trees
Author: jamesg (jg2169)
Avg Rating: 4.0000
Avg Difficulty: 1.5000
Total ratings: 4



ID: 4254875
Created: 7:30pm, 03 Jan 2020
A graph in which all edges go from one vertex to another in a specific direction is known as what?
a) Arrow Graph
b) Pointer Graph
*c) Directed Graph
d) One-Way Graph
e) None of the above
Explanation: Directed graph is just what is it called (See 2019 Lecture 17)
Tags: Graphs
Author: jamesg (jg2169)
Avg Rating: 3.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4254873
Created: 7:29pm, 03 Jan 2020
Finish the name of this module:Data Structures and _____
a) Apples
b) Absolut Vodka
c) Jeffrey Epstein Didn't Kill Himself
*d) Algorithms
e) Abstractions
Explanation: While C is factually accurate, D is the correct answer because the name of this course is Data Structures and Algorithms.
Author: samuelth (sth35)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4254860
Created: 7:08pm, 03 Jan 2020
In a hash table with 600 slots, after how many insertions is there likely to be (i.e. with probability 0.5 or greater) a collision?
a) 300
b) 30
c) 7
*d) 29
e) 28
Explanation: The explanation for this is alongside the Birthday Paradox (2019 Week 10b - slide 12). A collision is likely after approximately (3.s.f). Therefore 29 insertions are necessary.
Tags: Hashtables
Author: pm779 (pm779)
Avg Rating: 3.3300
Avg Difficulty: 1.8333
Total ratings: 6



ID: 4254859
Created: 7:05pm, 03 Jan 2020
Within a singly linked list, what are the values stored at each node?
a) A pointer to the next nodeAn array of elements
b) A pointer to the next nodeA pointer to the previous nodeAn element
c) An array of pointers, containing a pointer for each level in the list.An element
*d) A pointer to the next nodeAn element
Explanation: A singly linked list works in one direction and at one level. Each node contains its information in the element and has a single pointer that directs to the next node when traversing the list.
Tags: Lists
Author: trk26 (trk26)
Avg Rating: 4.1400
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4254851
Created: 6:48pm, 03 Jan 2020
Do hash tables that use a prime number of buckets always increase distribution and reduce collisions, explain why?
a) No, they do not, primes number do not affect uniqueness of modular arithmetic.
b) Yes, primes numbers ensures every number below it is coprime to it, thus guaranteeing no two numbers will collide.
*c) Prime numbers can sometimes improve distributions and reduce collisions depending on the distribution of the input values. If uniformly distributed, primes numbers will have very little effect. On a skewed distribution, the prime numbers can help since you're significantly reducing the no. of common factors.
Explanation: https://cs.stackexchange.com/questions/11029/why-is-it-best-to-use-a-prime-number-as-a-mod-in-a-hashing-functionNote that B is false as any key valued as any multiple of the prime number will collide.
Tags: Hashtables
Author: marcus (mzzt20)
Avg Rating: 2.8800
Avg Difficulty: 1.5000
Total ratings: 8



ID: 4254836
Created: 6:13pm, 03 Jan 2020
A software developer created an algorithm to print all the nodes in a tree. This algorithm is used on the following tree: M / \ B P / \ / \ A D N ZIf the algorithm prints A B D M N P Z, what is the traversal order used by the software developer?
a) Post-Order Traversal
*b) In-Order Traversal
c) Pre-Order Traversal
d) Level-Order Traversal
Explanation: for explanation check week 7b slides (first lecture about trees)
Tags: Trees
Author: ats45 (ats45)
Avg Rating: 4.4300
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4254827
Created: 5:49pm, 03 Jan 2020
Insert 28, 29, 16, 9, 34, 8, 20 in order into an empty AVL Tree. What are the leaf nodes after rebalancing to satisfy the AVL Condition?
*a) 8, 20, 34
b) 9, 8, 16
c) 20, 34, 9
d) 9, 16, 29
e) None of the above
Explanation: Add into the tree as normal (smaller than goes left, larger than goes right).The rebalancing problem comes once we add 8 to the tree, where the node (16) becomes unbalanced. Perform a single left rotation on the node and finally add 20.The leaves are 8, 20 and 34.
Tags: Trees
Author: rwm31 (rwm31)
Avg Rating: 4.3800
Avg Difficulty: 1.0000
Total ratings: 8



ID: 4254822
Created: 5:38pm, 03 Jan 2020
What is the minimum number of comparisons required to sort any permutation of 7 integers?
a) 11
b) 12
*c) 13
d) 14
e) 15
Explanation: It has been proven that the smallest number of comparisons is 13 for 7 objects. This is done by merge sorting 5 items and adding 1 then adding 1 again.
Augmented explanation 1: It has been proven that the smallest number of comparisons is 13 for 7 objects. This is done by merge sorting 5 items and adding 1 by comparing it with the middle number first then adding 1 again and comparing with either the 3rd or 4th value first. (by: ljb91 [ljb91])
Tags: Sorting
Author: ljb91 (ljb91)
Avg Rating: 3.0000
Avg Difficulty: 1.5714
Total ratings: 7



ID: 4254821
Created: 5:38pm, 03 Jan 2020
Which tree traversal outputs the letters in alphabetical order?
a) In-Order Traversal
b) Post-Order Traversal
*c) Level-Order Traversal
d) Pre-Order Traversal
Explanation: In-Order : d,b,e,a,f,c,gPost-Order : d,e,b,f,g,c,aPre-Order : a,b,d,e,c,f,gLevel-Order : a,b,c,d,e,f,g
Tags: Trees
Author: turbochloe1 (cjl79)
Avg Rating: 4.6700
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4254817
Created: 5:29pm, 03 Jan 2020
What is the worst case scenario for finding an element in a singly linked list of size n?
a) 2n
b) n/2
c) log(n)
d) n^2
*e) n
Explanation: The worst case scenario is n as a singly linked list can only be traversed in one direction. This means that starting at the head the worst node to find is the last node as all n nodes must be compared.
Tags: Lists, Search
Author: ljb91 (ljb91)
Avg Rating: 4.3300
Avg Difficulty: 0.0000
Total ratings: 6



ID: 4254815
Created: 5:26pm, 03 Jan 2020
What is the difference between a singly linked list and a skip list?
a) A skip list has both a next and previous pointer.
*b) A skip list has multiple lanes to allow for faster searching.
c) A skip list has a tail pointer.
d) A skip list has child nodes to allow for faster searching.
e) A skip list has the head pointing to the center node.
Explanation: A skip list contains multiple lanes, a slow lane containing all of the nodes stored in a singly linked list way as well as faster lanes that have less elements in them to allow for faster searching.
Tags: Lists, Search
Author: ljb91 (ljb91)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4254806
Created: 4:52pm, 03 Jan 2020
You've just started work at a long standing Technology company and your first project is to update old legacy data structures. You are given a closed hash tablewith linear probing containing identification numbers that is no longer being used, but is going to be archived due to its sensitive nature.You are tasked to copy this data into an array for archiving, but first the Load factor needs to be calculated.The closed hash table has 10,000 keys stored in it and you are told any item can be accessed in 3 steps on average. What is the Load Factor?
a) 0.6
b) 0.7
*c) 0.8
d) 0.9
e) None of the above
Explanation: The Load Factor is defined as:L = (Max number of keys)/(Total number or buckets).The average number of steps to find an item in a closed hash table with linear probing is given by .Setting this equation to equal to 3 gives a Load Factor of 0.8.
Tags: Hashtables
Author: rwm31 (rwm31)
Avg Rating: 4.6000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4254797
Created: 4:17pm, 03 Jan 2020
During this course a number of data structures have been taught. Generally these structures have worst case space complexity of O(n), with a single exception. One taught data structure has worst case space complexity O(n log(n)). Which of the taught data structures represents this exception?
a) Stack
b) AVL Tree
c) Doubly-Linked List
d) Hash Table
*e) Skip List
Explanation: A skip list has n elements and logn layers. In the worst case each element exists in each layer, so space complexity is O(nlogn).
Tags: Lists, Complexity
Author: samuelth (sth35)
Avg Rating: 4.2200
Avg Difficulty: 0.6667
Total ratings: 9



ID: 4254796
Created: 4:14pm, 03 Jan 2020
You wish to use open hashing (where each array slot contains a pointer to a linked list). The hash function has the form h(x) = x % 6 and the hash table has slots 0, ... , 5. If you insert the elements 5, 6, 7, 9, 15, 21, 22, 61 in that order, what is the minimum list length at the end?
*a) 0
b) 1
c) 2
d) 3
e) None of the above
Explanation: For the elements5, 6, 7, 9, 15, 21, 22, 61 the open hash table will look like:0: 61: 7 612:3: 915214: 225: 5the 2 slot points to no values hence minimum list length is 0.
Tags: Hashtables
Author: rwm31 (rwm31)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4254792
Created: 4:06pm, 03 Jan 2020
An algorithm has runtime T(n) = 0.00149n14+ 100n2+ 48nlog(n) for input of size n. What is the asymptotic time complexity of this algorithm?
a)
b)
*c)
d)
e) None of the above
Explanation: Leading term is ,hence its asymptotic upper bound cannot be anything less than .Therefore A,B,D are incorrect. D is correct since this is an upper bound (but not exact bound) to T(n).
Tags: Complexity
Author: rwm31 (rwm31)
Avg Rating: 4.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4254789
Created: 4:04pm, 03 Jan 2020
What would the output of the following binary search tree using pre-order traversal look like?
*a) 30, 15, 7, 22, 17, 27, 60, 45, 75
b) 7, 15, 17, 22, 27, 30, 45, 60, 75
c) 7, 17, 27, 22, 15, 45, 75, 60, 30
d) 7, 15, 17, 27, 22, 30, 60, 75, 45
Explanation: A) is pre-orderB) is in-orderC) is post-orderD) is random
Tags: Trees
Author: jc2909 (jc2909)
Avg Rating: 3.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4254776
Created: 3:52pm, 03 Jan 2020
In the context of an AVL Tree, AVL stands for:
a) Audio Video Library
*b) Adelson-Velskii and Landis
c) Absolute Value List
d) Adelson Vilgefortz and Loch
e) Amateur Vascularity Listing
Explanation: B is the correct answers.AVL trees were named after two Soviet computer-scientists:Georgy Maximovich Adelson-Velsky andEvgenii Landis..
Tags: Search, Trees
Author: samuelth (sth35)
Avg Rating: 2.3000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 4254775
Created: 3:51pm, 03 Jan 2020
Imagine you are a software engineer a Honda. Your boss asks you to implement a probabilistic skip list in Java with the probability of a new node being added to each lane decreasing by a factor of 0.5 for each lane as the lane number increases. However, due to lack of server space, she says that you may not use any arrays of size greater than 10 when defining the set of pointers for each node. Roughly how many items can this skip list hold before it can no longer be considered binary search when searching for nodes?
a) 10
b) 200
c) 512
*d) 1024
e) 2048
Explanation: Week3b-TFLinkedlistsedit. Each node can only have 10 pointers, therefore there can only be 10 lanes (0-9). The 9th lane can skip 29(512)nodes. Therefore, for lists of size greater than 1024, the 9th lane will skip less than half of the nodes and is no longer binary search.
Tags: Lists
Author: mt923 (mt923)
Avg Rating: 4.6700
Avg Difficulty: 1.3333
Total ratings: 6



ID: 4254765
Created: 3:39pm, 03 Jan 2020
What is one disadvantage of using a Hash Table with a small load L?(say, for L < 0.2)
a) It is more likely that collisions will occur when inserting a new item.
b) Searching for an item takes longer.
c) You can't delete an item.
*d) A lot of memory is wasted.
e) None of the above.
Explanation: See 2019 Lecture "Week10b - HashtablesAll"
Tags: Hashtables
Author: rvs27 (rvs27)
Avg Rating: 3.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4254759
Created: 3:27pm, 03 Jan 2020
Select the correct differences between a B-Tree and a B+ Tree?
a) Unlike a B-Tree, a B+ Tree is self-balancing allowing deletion and insertion to more efficient.
*b) Unlike a B-Tree, a B+ Tree only contain key values in the internal nodes and only at the leaves do they contain both the key value and data pointer.
c) Unlike a B-Tree, all the leaves on the B+ Tree are at the same depth, thus helping with the abilitly of the B+ Tree being self-balancing.
d) Unlike a B+ Tree, a B-Tree is generally used to minimize disk reads and so the size of each node is typically the size of the disk block whereas a B+ Tree is used in main memory.
Explanation: A B+ Tree is a variation of a B-Tree that increases efficiency by reducing the data stored in each node. A B-Tree is a self-balancing BST that can hold more keys and children nodes than a normal BST. Note that B-Tree must also have leaves at the same depth. See Week8b - Trees3 Slide 29&30.
Tags: ADTs, Trees
Author: marcus (mzzt20)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4254757
Created: 3:26pm, 03 Jan 2020
Consider average time complexity for each search algorithm.Select the only true statement.
a) Array List search and Linked List search have the same average performance of O(n)
b) Array List search is faster than Linked List search, with Array List O(n) and Linked List O(n^2)
c) Array List search is slower than Linked List search, with Array List O(n^2) and Linked List O(n)
*d) Array List search is faster than Linked List search, with Array List O(1) and Linked List O(n)
e) None of the above
Explanation: ArrayList search is O(1) because it can access the i'th element in the array in constant time.Linked List search is O(n) because it must check each item from the beginning, and traverse the list element by element until it finds a match. Hence on average it will be doing n/2 comparisons which is O(n).
Tags: Search
Author: sheppypeppy (mls46)
Avg Rating: 4.7100
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4254756
Created: 3:26pm, 03 Jan 2020
Suppose I have a Close Hash Table with load L, and it takes me on average 1.15 steps to find an item in the table. What is the value of L (to 2 sig.fig.) ?
a) 0.40
b) 0.16
*c) 0.23
d) 0.53
e) 0.22
Explanation: The average number of steps needed to find an item for a Closed Hash Table with load L is:# of steps =1/2(1 + 1/(1-L))Setting the above equation equal to 1.15 and rearranging, gives us L = 0.23.2019 Lecture "Week10b"
Tags: Hashtables
Author: rvs27 (rvs27)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4254752
Created: 3:14pm, 03 Jan 2020
Two main measures for the efficiency of an algorithm are_________________
a) Computer Speed and Memory
*b) Time and Space
c) Complexity and time
Explanation: Time and space complexity gives us an estimate of how much time and space the program will take during its run time.
Tags: Applications, Complexity
Author: hannzzz (hs975)
Avg Rating: 4.2000
Avg Difficulty: 0.0000
Total ratings: 5



ID: 4254749
Created: 3:10pm, 03 Jan 2020
Which of the following statements is False?
a) Open Hash Tables are generally more efficient than Closed Hash Tables.
*b) You can delete entries in a Closed Hash Table
c) A good hash function disperses entries evenly across the array.
d) The average number of steps to find an item in an Open Hash Table with load L isNumber of steps = 1+ L/2
Explanation: Correct answer is B. Deleting an item in a Closed Hash Table may result in the search algorithm terminating prematurely ( for example, if you delete an item that had collisioned when entered to the table).See 2019 Lecture "Week10b - HashtablesAll"
Tags: Hashtables
Author: rvs27 (rvs27)
Avg Rating: 3.5700
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4254748
Created: 3:08pm, 03 Jan 2020
Which of the following input Arrays makes insertion sort in ascending order perform the largest number of comparisons?
a) (5,3,7,0,2,6)
b) (3,5,0,2,6,7)
*c) (7,6,5,3,2,0)
Explanation: Insertion sort takes maximum time to sort if elements are sorted in reverse order.
Tags: Sorting, Complexity
Author: hannzzz (hs975)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4254747
Created: 3:05pm, 03 Jan 2020
Consider the following doubly linked list:HEAD - one - two - three - four - five - TAILwhere one is a Node object with integer value 1, prev = HEAD, next = two. This object type is similar for the remaining nodes.What will the list be after performing the following operations:Node temp = New Node(value=7, prev=one, next=three)one.next = temp;three.prev = temp;
a) HEAD - one - two - temp - four - five - TAIL
b) HEAD - one - two - temp - three - four - five - TAIL
*c) HEAD - one - temp - three - four - five - TAIL
d) HEAD - one - two - three - four - five - temp -TAIL
e) None of the above
Explanation: The temp node is made with forward pointer to node three, and prev pointer to node one.one.next is updated to temp, hence 2 has been removed.three.prev is updated to temp, which removes the backwards pointer to the node two.
Tags: Lists
Author: sheppypeppy (mls46)
Avg Rating: 4.1700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4254741
Created: 2:52pm, 03 Jan 2020
What is the runtime for the following code?for (int i = 1; i < n; i=i*2){ System.out.println("Data Structures ");}for (int j = 1; j < n; j++){ for int k = 1; k < 5; k++){ System.out.println("and Algorithms"); }}
*a) T(n)
b) T(n^2)
c) T(n log n)
d) T(log n)
Explanation: As we increase the n value, the amount of operations happening increases proportional to the number of n .
Tags: Applications, Complexity
Author: hannzzz (hs975)
Avg Rating: 3.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4254769
Created: 2:49pm, 03 Jan 2020
An application for a supermarket checkout needs to store products with their serial numbers, and the application must be able to quickly find the product linked to the serial number which has been scanned by the cashier.Should the serial number of the product change, the application should also be able to quickly change the serial number associated with the relevant product. Which of the following data structures would be most appropriate to store the products and serial numbers in memory?
a) Linked list
*b) Open hashtable
c) Closed hashtable
d) Sorted array
e) Sorted ArrayList
Explanation: Open hashtable is the preferred ADT as they are the most efficient in searching/editing key value pairs.
Tags: ADTs
Author: am2830 (am2830)
Avg Rating: 4.5000
Avg Difficulty: 0.8000
Total ratings: 10



ID: 4254736
Created: 2:45pm, 03 Jan 2020
Which of these is correct for the BEST time complexity for the following Algorithms?
a) Insertion Sort:T(n log n)Selection Sort:T(n)Bubble Sort:T(n)Quick Sort:T(n^2)Merge Sort:T(n log n)
b) Insertion Sort: T(n)Selection Sort: T(n^2)Bubble Sort: T(n^2)Quick Sort: T(n log n)Merge Sort: T(n log n)
*c) Insertion Sort: T(n)Selection Sort: T(n^2)Bubble Sort: T(n)Quick Sort: T(n log n)Merge Sort: T(n log n)
Explanation: Lecture 7A Slide 5:Insertion Sort: T(n)Selection Sort: T(n^2)Bubble Sort: T(n)Quick Sort: T(n log n)Merge Sort: T(n log n)
Tags: Sorting, Complexity
Author: hannzzz (hs975)
Avg Rating: 4.2500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4254735
Created: 2:45pm, 03 Jan 2020
What is the Post-Order Traversal of the tree: 20 / \ 10 28 / \ 5 18 \ 19
a) [20,10,28,5,18,19]
*b) [5,19,18,10,28,20]
c) [5,10,18,19,20,28]
Explanation: The correct answer is B.A - is level order Traversal.C - is in order traversal
Tags: Trees
Author: ath36 (ath36)
Avg Rating: 3.6700
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4254734
Created: 2:45pm, 03 Jan 2020
Alice sets up an RSA encryption and sends Bob all the necessary components to send her an encrypted message. What does bob need to compute to encrypt his message?Where m is the message Bob wishes to encrypt,N and t are Alice's public key?
*a) c = mt(mod N)
b) c=m/(tN)
c) c=mNmod(t)
d) c=m(t/N)
Explanation: See Week 11b
Tags: Cryptography
Author: h_writer (hw875)
Avg Rating: 4.8300
Avg Difficulty: 0.8333
Total ratings: 6



ID: 4254731
Created: 2:37pm, 03 Jan 2020
Using open hashing with ahash function of the form h(x) = x % 7 and a hash table with slots 0, �,6, if you insert the elements 15, 7, 22, 8, 19, 31, 30, 29, 40, 81 in that order, what is the maximum list length at the end?
a) 1
b) 2
c) 3
*d) 4
e) 5
Explanation: The hash table would look as following:0: 7, 811: 15, 22, 8, 292: 303: 314:5: 19, 406:
Tags: Hashtables
Author: am2830 (am2830)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4254725
Created: 2:32pm, 03 Jan 2020
What is the recurrence relation for worst case QuickSort, and what is the time complexity in this case?
a) Recurrence: T(n) = T(n-2) + O(n)Time Complexity: O(nlogn)
b) Recurrence: T(n) = T(n-1) + O(n)Time Complexity: O(nlogn)
c) Recurrence: T(n) = 2T(n/2) + O(n)Time Complexity: O(nlogn)
d) Recurrence: T(n) = 3T(2n/3) + O(logn)Time Complexity: O(nlogn)
*e) Recurrence: T(n) = T(n-1) + O(n)Time Complexity: O(n^2)
Explanation: In the worst case, QuickSort will have pivots that are the smallest or largest element in the list. In this case, we first sort the list around the pivot which is O(n), and then perform Quicksort on the remainder of the list which is T(n-1).This yields the recurrence relation: T(n) = T(n-1) + O(n).As for complexity, the average case is O(nlogn), however the worst case is O(n^2), which is answer E.
Tags: Sorting, Complexity
Author: sheppypeppy (mls46)
Avg Rating: 4.7800
Avg Difficulty: 1.6667
Total ratings: 9



ID: 4254724
Created: 2:32pm, 03 Jan 2020
A quadratic time algorithm uses 70 elementary operations to process an input of size 20. What is the predicted number of elementary operations it will use for an input of size 200?
a) 700
*b) 7000
c) 70000
d) 700000
e) 7000000
Explanation: The input size has increased by a factor of 10. Since it is a quadratic function, the number of elementary operations will increase by a factor of 10^2.
Tags: Complexity
Author: am2830 (am2830)
Avg Rating: 4.4000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 4254722
Created: 2:27pm, 03 Jan 2020
Given the unsorted listed 15,3,6,5,19,4,10 how many passes of quick sort are needed to sort the list?
a) 3
b) 4
*c) 5
d) 7
Explanation: 15,3,6,5,19,4,10 under lined numbers are the pivot, and bold number are sorted.3,6,5,4,10,15,19 first pass 3,6,5,4,10,15,19 second pass3,5,4,6,10,15,19 third pass3,5,4,6,10,15,19 fourth pass3,5,4,6,10,15,19 fifth pass
Tags: Sorting
Author: h_writer (hw875)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4254718
Created: 2:19pm, 03 Jan 2020
Consider a closed hash table, with linear probing, with 4 buckets: [0,1,2,3]Where a "Value" is input and the "Bucket" the value is placed into is decided by the hash function:Bucket = (Value+1) %4(Also written as : Bucket = (Value+1) mod 4 ).What is the final array, when 7,13,9,5 are added in the order specified.
a) [5,7,9,13]
*b) [7,5,13,9]
c) [7,13,9,5]
d) [13,5,9,7]
Explanation: 1st addition : (7+1)mod 4 = 0 therefore place 7 in position 0. [7,,,]2nd addition: (13+1)mod 4 = 2 therefore place 13 in position 2. [7,,13,]3rd addition: (9+1)mod 4 = 2 therefore 9 belongs in position 2, however there is already a value in position 2 so place in the next available spot. place 9 in position 3. [7,,13,9]4th addition: (5+1)mod 4 = 2 therefore 5 belongs in position 2, however there is already a value in position 2 so place in the next available spot (at end of array wrap around to the start). place 5 in position 1. [7,5,13,9]
Tags: Applications, Hashtables
Author: ath36 (ath36)
Avg Rating: 3.6700
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4254712
Created: 2:00pm, 03 Jan 2020
What is the minimum number of comparisons to sort 9 items?
a) 17
*b) 19
c) 20
d) 21
Explanation: See Week 5a Sorting and Visuliser notes
Tags: Sorting
Author: h_writer (hw875)
Avg Rating: 3.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4254710
Created: 1:55pm, 03 Jan 2020
Which of the following statements is true?
a) On average it will take fewer steps to find an item in a closed hash table with a load factor of 0.1 than an open hash table with a load factor of 0.1.
b) On average it will take more steps to find an item in an open hash table with a load factor of 0.9 than a closed hash table with a load factor of 0.7.
*c) If i have at most 73 items I want to insert into my hash table with 365 buckets, my load factor will be 0.2.
d) I will need at least 66 buckets in my hash table if I have at most 45 elements to insert and want a load factor of 0.6 or less.
Explanation: 2019 week10b slides 30-33.
Tags: Hashtables
Author: jc2909 (jc2909)
Avg Rating: 3.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4254702
Created: 1:28pm, 03 Jan 2020
In the first step of the RSA encryption process, the following are chosen or computed by Alice:- p,q = large primes- N = pq- s = relatively prime (i.e. coprime) to (p-1)(q-1)- t = chosen such that st = 1 (mod (p - 1)(q - 1))Which of the following are published to be received by Bob.
a) st
*b) N, t
c) p, q
d) m^t (where m is her message)
Explanation: Week11(b) Slides 12 and 13.N and t are published. Bob then encrypts his message m by calculating c = (mod N) and publishing c.Alice can then calculate . As theRivest�Shamir�Adleman (RSA) corollary states thatIf N = pq with p, q distinct primes and k = 1(mod (p - 1)(q - 1)), then x^k = x (mod N).
Tags: Cryptography
Author: ak2135 (ak2135)
Avg Rating: 4.0000
Avg Difficulty: 1.3333
Total ratings: 6



ID: 4254701
Created: 1:28pm, 03 Jan 2020
Consider the following hypothetical situation:You have a sorting algorithm which uses quicksort 50% of the time, and insertion sort 50% of the time, on average. n input lists arrive such a given list is already completely sorted with probability x, and the rest are random.Give an equality for x in terms of n for when this approach will be quicker than always using Selection sortYou may refer to the below:(Note that because of the hypothetical nature of the question, the answer may seem counter-intuitive, but will make mathematical sense)
a)
b)
*c)
d)
e)
Explanation: The average runtime for our method considering the different cases where the list is/isn't sorted is:We want to find where this is less than selection sort, which is expanding and multiplying by two, we have:so our final answer is:
Tags: Complexity
Author: jwb59 (jwb59)
Avg Rating: 4.1500
Avg Difficulty: 1.8462
Total ratings: 13



ID: 4254691
Created: 1:04pm, 03 Jan 2020
When you multiply an adjacency matrix by itself, what does the resulting matrix tell you?
a) Defines the maximum path between each vertex.
b) Defines the minimum path between each vertex.
*c) Defines which vertices are exactly two edges apart from each other.
d) None of the above
Explanation: From lecture 9)b) panopto."Graphs1TF" Powerpoint slide 10.
Tags: Graphs
Author: ath36 (ath36)
Avg Rating: 4.4000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4254690
Created: 12:54pm, 03 Jan 2020
You work for Spotazon music, and have been asked to implement a data structure to store music playlists. Users will want to be able to easily add/remove tracks from any point in the playlist, and they should be able to skip forward/skip backwards a track. Your brief is to use a data structure that will maximise the speed of these functions. Which of the following data structures would be most appropriate.
a) Singly-Linked List
b) Array
*c) Doubly-Linked List
d) Heap
e) AVL Tree
Explanation: The doubly linked list has forward and back pointers, so the speed of traversing the tracks in either direction will be optimal. Furthermore, inserting/deleting to a specified point is fast (THETA(n)) [see Week 3b-TFLinkedListsedit on moodle].
Tags: ADTs, Applications
Author: epo24 (epo24)
Avg Rating: 4.9000
Avg Difficulty: 0.8000
Total ratings: 10



ID: 4254689
Created: 12:52pm, 03 Jan 2020
You use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = x % 7 and the hash table has slots 0, � , 6. If you insert the elements 18,19,25,701,77,74,y in that order, where y is an unknown integer, what does the hashtable look like at the end?a) 77,701,74,y,18,19,25b) 77,25,701,y,18,19,74c) 77,701,y,19,18,25,74d) 77,18,19,701,25,74,ye) None of the above are correct
*a) 77,701,74,y,18,19,25
b) 77,25,701,y,18,19,74
c) 77,701,y,19,18,25,74
d) 77,18,19,701,25,74,y
e) None of the above are correct
Explanation: Standard hastable theory using Linear Probing. The unknown integer y makes no difference and goes in the only slot available, as it is at the end.
Tags: Hashtables
Author: jwb59 (jwb59)
Avg Rating: 4.7800
Avg Difficulty: 0.8889
Total ratings: 9



ID: 4254686
Created: 12:39pm, 03 Jan 2020
Consider the following two lists:List X: List of integers from 1 to 100 (inclusive) in ascending orderList Y: Random permutation of list XWhich of the statements A-D is FALSE (on average)?
a) Quicksort will sort list Y faster than it will sort list X
b) Insertion sort will sort list X quicker than it will list Y
c) Insertion sort will sort list X faster than Quicksort will
*d) Quicksort will sort list Y faster than Insertion sort will sort list X
e) All of A-D are true
Explanation: A) True because nlogn < n2B) True because n < n2C) True because n < n2D) False because nlogn > n
Tags: Sorting
Author: jwb59 (jwb59)
Avg Rating: 4.1700
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4254684
Created: 12:35pm, 03 Jan 2020
Which of the following statements about Dijkstra's algorithm is false?
a) Its complexity is O(N^2)
*b) Dijkstra�s Algorithm can be applied on graphs which have negative weights
c) The most commonly used data structure is a queue
d) None
Explanation: A is true as it uses two nested loops, resulting in O(N^2) complexityB is falsebecause calculation of cost to reach a destination node from the source node becomes complex when we introduce negative weightsC is true
Tags: Graphs, Search
Author: jm2797 (jm2797)
Avg Rating: 3.7100
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4254682
Created: 12:30pm, 03 Jan 2020
In a linked list, insertion can be done...
a) At the beginning
b) In the middle
c) At the end
*d) All of the above.
Explanation: Covered in lectures.
Tags: ADTs, Lists
Author: jrb93@bath.ac.uk (jrb93)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4254677
Created: 12:24pm, 03 Jan 2020
Which of the following algorithms has the lowest complexity class
a) for (int i=0 ; i < n+1000 ; i++){ int k = n; while (k > 1) { sum++; k = k/2; }}
b) void foo( ){ int i, sum = 0; for (i=0 ; i < 10000*n*n ; i++) sum += i; for (i=0 ; i < 0.001*n*n*n ; i+=100) sum += i;}
*c) k = n;while (k > 1){ sum++; k = k/2;}
d) Quicksort algorithm
e) MergeSort algorithm
Explanation: Recall the order of complexities is as followsConstant: 1, Logarithmic: log(n), Log-squared: =log^2(n),Square root: sqrt(n),Linear: n, n log(n), Quadratic: n^2, Cubic: n^3...A has complexity n log(n)B has complexity n^3C has complexity log(n)QuickSort's complexity is n^2MergeSort's complexity is n log(n)Therefore the fastest algorithm is C
Tags: Sorting, Complexity
Author: jm2797 (jm2797)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4254676
Created: 12:23pm, 03 Jan 2020
A graph is a collection of nodes, called _____, and line segments called arcs or_____ that connect pairs of nodes.
a) vertices, paths
b) edges, vertices
c) graph node, edges
*d) vertices, edges
Explanation: Definitions covered in slides - Lecture 17 slide 4/37
Tags: Graphs
Author: jrb93@bath.ac.uk (jrb93)
Avg Rating: 3.7800
Avg Difficulty: 0.0000
Total ratings: 9



ID: 4254674
Created: 12:19pm, 03 Jan 2020
Which of the following is a non-linear data structure?
a) String
b) List
*c) Tree
d) Stack
Explanation: Covered in lectures.
Tags: ADTs
Author: jrb93@bath.ac.uk (jrb93)
Avg Rating: 4.2900
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4254669
Created: 12:11pm, 03 Jan 2020
Which of the following statements about hash tables are true?
a) Whenchoosing the exact size of your hash table (the number of buckets) you should use a prime number (eg 2021 instead of 2000)
b) The higher the load factor of our table (open or closed) the more efficient open hash tables are in comparison to closed hash tables
c) If we need to delete items from our tables you must never use a closed hashing table
*d) All the above
Explanation: A. Using a prime number of buckets will ensure the spreading of hash values, resulting in more even distribution and fewer collisions W10b s35B. The average number of steps for open table = 1 + L/2 (L is load factor) whereas for closed table =�(1+ 1/(1-L)), meaning that the higher the load factor the higher the difference between the number of steps for the two tables W10b s33C. W10b s22
Tags: Search, Hashtables
Author: jm2797 (jm2797)
Avg Rating: 4.0000
Avg Difficulty: 0.8000
Total ratings: 10



ID: 4254624
Created: 11:11am, 03 Jan 2020
What are the steps taken to complete a Radix Sort on a list of integers?
a) Have a vector a[0], ..., a[m] and place item numbered i in a[i]: ?(n). Then scan the vector?(m) for a total of?(n+m).
*b) Assume the key is a d-digit number, with d? {0, ..., k-1}. Complete a counting sort on the individual values that share the least significant position, and then continue to the next least-significant digit to complete a stable counting sort and so on.
c) Use the 1st digits to sort the values into buckets, then sort each bucket and concatenate the values.
Explanation: Powerpoint week 7a slide 8/16
Tags: Sorting
Author: jrb93@bath.ac.uk (jrb93)
Avg Rating: 4.0000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4254462
Created: 1:44am, 03 Jan 2020
What is the runtime of the following code?for (int i=0; i < N; ++i) { for (int j=0; j < M/2; j=j*2) { System.out.println(j); if (i%2 == 0) { for (int k=0; k < 2*N; ++k) { System.out.println(i + " is even"); } } }}
*a)
b)
c)
d)
e)
Explanation: The outermost loop undergoes O(N) iterations.The second loop undergoes iterates up to O(M), but increases logarithmically (thanks to the j=j*2) rather than linearly. Hence, this loop undergoes O(log(M)) iterations.Finally, the innermost loop undergoes O(N) iterations. The fact that this loop only executes for odd values of j is not relevant to the big theta approximation.Therefore, the overall runtime is that of answer A.
Tags: Complexity
Author: mjs209 (mjs209)
Avg Rating: 3.6700
Avg Difficulty: 1.6667
Total ratings: 6



ID: 4254449
Created: 11:56pm, 02 Jan 2020
An algorithm takes 60 seconds to process an input of n=100, 120 seconds for n=120 and 240 seconds for n=140.Which asymptotic complexity does it likely have?
a) ?(n^2)
*b) ?(2^n)
c) ?(log(n))
d) ?(1)
Author: tm694 (tm694)
Avg Rating: 3.7500
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4254447
Created: 11:48pm, 02 Jan 2020
Given the following numbers: 6,2,18,34,13,14.When constructing a perfectly balancedbinary search tree from the numbers in that order, which number is its root?
a) 18
b) 6
*c) 13
d) 34
e) ALL
Author: tm694 (tm694)
Avg Rating: 2.5000
Avg Difficulty: 1.2500
Total ratings: 4



ID: 4254443
Created: 11:41pm, 02 Jan 2020
Selection Sort runs for 5 seconds for 100 records. How likely is it likely to run for 10,000 records?
a) 100 seconds
b) 500 seconds
c) 10 seconds
*d) 50,000 seconds
e) None of the above
Author: tm694 (tm694)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4254439
Created: 11:36pm, 02 Jan 2020
Below is an incomplete code for the class LinkedList.Method 'Get' finds the ith element in the linked list. Which code must go at 'X' for the code to work.public Object get(int i){ if (i<0 || i>=n) { return error; } ListNode node = head; Xreturn node.element;}
a) for (int j=0; j<0; j++){node = node.next;}
b) for (int j=0; j<i; j--){node = node.next;}
*c) for (int j=0; j<i; j++){node = node.next;}
d) for (int j=0; j<i; j++){node = node.prev;}
e) for (int j=0; j<i; j++){head = node.next;}
Author: tm694 (tm694)
Avg Rating: 4.4000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4254393
Created: 8:35pm, 02 Jan 2020
Given a sorted array of length n of elements, what is the time complexity of implementing it into a Binary Search Tree (BST)?
*a)
b)
c)
d)
Explanation: Since the input is sorted, the resulting tree will become very unbalanced meaning each node will only have a right child node. Thus every time an elements is inserted it must traverse the length of the entire tree. Hence, for an unsorted array of elements it would be quicker. See Week8a - Tree2 silde 14.
Tags: Sorting, Trees, Complexity
Author: marcus (mzzt20)
Avg Rating: 4.4000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4254366
Created: 7:11pm, 02 Jan 2020
You have to insert the element "20" in this skip list, p = 0.5, max lanes = 5:Which one of the following statements are true?
*a) The new element must point to "30" for each lane it exists on, apart from the lanes "30" doesn't exist on.
b) There is a 15% chance that the new element will be on 3 lanes.
c) The head values of the skip list must not be changed.
d) The next values of the "30" element must be altered.
e) It is not possible for the "20" element to point to NULL.
Explanation: "20" goes before "30", therefore must point to "30" when it is inserted. The lanes can't "skip over" elements in the same lane, therefore every instance of "20" will point to a "30" on it's lane.This question is intended to be of high difficulty.Source: 2019, Week 3b, Slide 14-17
Tags: Lists
Author: asms23 (asms23)
Avg Rating: 4.3800
Avg Difficulty: 1.5000
Total ratings: 8



ID: 4254358
Created: 7:01pm, 02 Jan 2020
Which one is not astable sorting algorithm?
*a) Quick Sort
b) Bubble Sort
c) Merge Sort
d) Insertion Sort
e) They are allstable sorting algorithms
Tags: Sorting
Author: jameswong (jchw20)
Avg Rating: 3.4000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4254355
Created: 6:45pm, 02 Jan 2020
Below is an example graph. Which of the following adjacency matrices represent this graph?
a)
b)
*c)
d)
e) None of the above
Explanation: See Moodle resource 'DA-Lecture17-Graphs1 TF 2019sem' for explanation on representing a graph as an adjacency matrix.
Tags: Graphs
Author: mr864 (mr864)
Avg Rating: 4.6000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4254352
Created: 6:28pm, 02 Jan 2020
What is the result of shell sorting the data set below with a gap size of 3.56 21 30 43 98 23
a) 23 98 43 30 21 56
*b) 43 21 23 56 98 30
c) 30 21 56 23 98 43
d) 21 23 30 43 56 98
e) None of the above.
Explanation: 56 21 30 43 98 23 Original List43 21 30 56 98 23 Compare 56 and 43, and swap.43 21 30 56 98 23 Compare 21 and 98, no change.43 21 23 56 98 30 Compare 30 and 23, and swap.Then iterate once more through the list and no changes are made.
Tags: Sorting
Author: jameswong (jchw20)
Avg Rating: 3.6000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4254346
Created: 5:48pm, 02 Jan 2020
For the following binary search tree:What is the output if we do a pre-order traversal on the tree?Image Source:https://www.gatevidyalay.com/binary-search-trees-data-structures/
a) 5 10 12 20 22 25 28 30 36 38 40 48
b) 5 12 10 22 20 28 30 38 48 40 36 25
*c) 25 20 10 5 12 22 36 30 28 40 38 48
d) 48 40 38 36 30 28 25 22 20 12 10 5
Explanation: Pre - Order tree traversal:Process the current nodeProcess the left nodeProcess the right nodeThis question is intended to be of medium difficultySource: 2019, Week 7b, Slide 15
Tags: Trees
Author: asms23 (asms23)
Avg Rating: 4.0000
Avg Difficulty: 0.2500
Total ratings: 8



ID: 4254340
Created: 5:43pm, 02 Jan 2020
Which of the following is TRUE?
a) It is not always possible to make a Big O statement about an algorithm
b) It is not always possible to make a Big Omega (?) statement about an algorithm
*c) It is not always possible to make a Big Theta (?) statement about an algorithm
Explanation: f(n) = ?(g(n))when f(n) = O(g(n))AND f(n) = ?(g(n))That means that one function is Big ? of another if and only if that function is both Big O and Big Omega of it.Source:https://medium.com/@.RT/total-n00bs-guide-to-big-o-big-%CF%89-big-%CE%B8-aa259ae8a1c2
Tags: Complexity
Author: jj743 (jj743)
Avg Rating: 4.4300
Avg Difficulty: 0.7143
Total ratings: 7



ID: 4254332
Created: 5:17pm, 02 Jan 2020
Which nodes are visited when searching for "c"?
a) abdc
*b) bdc
c) adebc
d) bdec
Explanation: start at root node - bc>b, go right to d.d<c, go left to cc = c, therefore nodes visited are bdc
Tags: Trees
Author: ja853 (ja853)
Avg Rating: 3.6700
Avg Difficulty: 0.1111
Total ratings: 9
==> Comment 1: Nice question but should probs mention in the question that its a binary search tree :D (by: jj743 [jj743])



ID: 4254330
Created: 5:13pm, 02 Jan 2020
What is the correct in order traversal of this Binary tree?
a) adceb
*b) abcde
c) badce
Explanation: A - Post orderB - In orderC - Pre order
Tags: Trees
Author: ja853 (ja853)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4254335
Created: 5:12pm, 02 Jan 2020
Using Dijkstra's algorithm, starting at node S, state the order of nodestraversed before reaching the node B.
a) S, A, E, C, B
b) S, A, C, B
*c) S, A, E, C, D, F, B
d) S, A, C, D, F, B
e) None of the above.
Explanation: Dijkstra's algorithm will find the shortest path to an available node and take it, it will repeat this process until it has checked all possible paths and reached the destination.1. Starting at S we move to A is it is shorter Node: Distance A: 2 E: 3 C: 4 D: 5 F: 6 B: 7
Tags: Graphs, Search
Author: jameswong (jchw20)
Avg Rating: 4.8000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4254325
Created: 5:04pm, 02 Jan 2020
Below is an example binary tree. What is the pre-order traversal of this tree?
a) 1, 5, 13, 11, 2, 16, 23, 44, 22, 48, 50, 45, 21
b) 1, 2, 5, 11, 13, 16, 21, 22, 23, 44, 45, 48, 50
*c) 21, 16, 2, 1, 11, 5, 13, 45, 22, 44, 23, 50, 48
d) 21, 16, 45, 2, 22, 50, 1, 11, 44, 48, 5, 13, 23
e) None of the above
Explanation: Option A is post-order traversal (left, right, centre)Option B is in-order traversal (left, centre, right)Option C is pre-order traversal (center, left, right)Option D is level order traversal (traverse each node on current level then go down a level)Source: Moodle - Week7b-Trees1 (powerpoint)
Tags: Trees
Author: mr864 (mr864)
Avg Rating: 4.5000
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4254323
Created: 4:59pm, 02 Jan 2020
Which one of the following Big-Oh rules is incorrectly described?
a) Transitivity: ("If A<= B, and B<= C, then also A<= C")For example,If f(n) = O(g(n)), and g(n) = O(h(n)), then f(n) = O(h(n))
*b) Scaling: ("Constant factors matter")For example,For all c>0, c*f(n) = c*O(f(n))
c) Sums ("The bigger function dominates")For example,If g(n) = O(f1(n)) and h(n) = O(f2(n)), then g(n) + h(n) = O(max{f1(n), f2(n})
d) Products ("The effect of nested loops in an algorithm")If g1(n) = O(f1(n)) and g2 = O(f2(n)), then g1(n)g2(n) = O(f1(n)f2(n))
Explanation: Constant factors don't matterFor example,for(int i = 0; i < 2*n; i++) m();has the same asymptotic bounds asfor(int i = 0; i < n; i++); m();This question is intended to be of low difficultySource: 2019, Week2b, Slide 6
Tags: Complexity
Author: asms23 (asms23)
Avg Rating: 4.2500
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4254319
Created: 4:38pm, 02 Jan 2020
Which statement about linked lists and arrays is TRUE?
a) It is faster to remove an element from the middle of an array than from a linked list.
*b) It is faster to search for an item in the middle of an array than a linked list.
c) An array allocates memory at runtime and a linked list allocates memory at compile time.
d) It is faster to insert an element at the beginning of an array than a linked list
e) None of the other statements are true.
Explanation: Why option B is true:When searching for an item in the middle of an array, it can be found in one step by specifying the index of the element. However for a linked list each node from the head must be passed through to reach the target node.Why options A and D are false:When inserting or removing an element from an array, other elements must be shifted appropriately. Whereas for a linked list only the pointers of adjacent nodes need to be changed.Why option C is false:An array allocates space at compile time (static memory allocation) and a linked list allocated space at run time (dynamic memory allocation).Source:Moodle -Week3b-TFLinkedlistseditFile Slide 13 -https://moodle.bath.ac.uk/pluginfile.php/1430761/mod_resource/content/0/2019_TFLinkedlistsedit.pdf
Tags: ADTs, Lists
Author: mr864 (mr864)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4254318
Created: 4:38pm, 02 Jan 2020
Consider a closed hash table with 150 buckets storing 100 items.On average, how many steps of linear probing would it take to find an item?
a) 1.75
*b) 2
c) 2.25
d) 2.5
e) 2.75
Explanation: Load factor (L) = Number of items / Number of bucketsL = 100 / 150 = 2 / 3Average # of steps to find = 1/2 (1 + 1/(1-L))= 2
Tags: ADTs, Search, Hashtables
Author: jj743 (jj743)
Avg Rating: 4.5000
Avg Difficulty: 1.0000
Total ratings: 4



ID: 4254455
Created: 4:35pm, 02 Jan 2020
The list of numbers {10, 36, 27 22, 4} is to be stored as an AVL Tree.Which numbers, will be the leaves (subtrees with no children) of the left subtree from the root when the tree is balanced?
a) 10, 4
b) 4
c) 36
d) 22
*e) 4, 22
Explanation: 10:10 is inserted as the rootcurrent height = 0, no need for balancing36:36 > 10, 36 is inserted to the right of the rootcurrent height = 1, no need for balancing27:27 > 10, 27 < 36, 27 is inserted to the left of 36current height = 2, balancing requiredBalancing:Current tree: 10 36 27The tree is unbalanced, apply right-left rotation: 2710 3622:22 < 27, 22 > 10, 22 is inserted to the right of 10current height = -1, no need for balancing4:4 < 27, 4 < 10, 4 is inserted to the left of 10current height = -1, no need for balancingThe final tree is: 27 10 36 4 22Therefore the leaves are 4 and 22 for the left subtree
Tags: Trees
Author: robbysa (rs2318)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 9



ID: 4254308
Created: 4:07pm, 02 Jan 2020
The following integers are inserted into an empty ALV Tree in the following order: 4, 8, 15, 16, 23, 42. The tree puts the greater integers on the right, and smaller ones on the left e.g 8 would be somewhere to the right of 4. The tree is kept balanced after each insertion. Each node of the tree is then printed using pre-order traversal separated by commas. Nothing is printed if a null node is encountered using this method. Which of the following is the correct output produced?
a) 4,15,8,42,23,16
*b) 16,8,4,15,23,42
c) 4,8,15,16,23,42
d) 15,4,8,23,16,42
e) 15,8,4,16,23,42
Explanation: Explanations can be found in: Week7b-Trees1 and Week8b-Trees3. Pre-order traversal prints the current node, then the left, then the right. I will run through is problem step by step after each insertion and show what would be printed using pre-order traversal at each. 4: Output: 4. 8: Output: 4,8. 15: Tree is now unbalanced at 4, so the tree rotates left with 4 as the pivot. Output: 8,4,15. 16: Tree is still balanced. Output: 8,4,15,16. 23: Tree is unbalanced at 15, so the tree rotates left with 15 as the pivot. Output: 8,4,16,15,23. 42: Tree is now unbalanced at 8, so the tree rotates left with 8 as the pivot. Output: 16,8,4,15,23,42.
Tags: Trees
Author: mt923 (mt923)
Avg Rating: 4.5600
Avg Difficulty: 1.6111
Total ratings: 18



ID: 4254303
Created: 3:21pm, 02 Jan 2020
Which data structure should be used if you wanted to:Add and remove elements as quickly as possiblePrint the list in the order the elements have been added
a) Open hash table
b) Closed hash table
*c) Linked list
d) Heap
Explanation: When using a linked list:Complexity of insertion/deletion = O(1)Complexity of printing the ordered list = O(N)
Tags: ADTs, Complexity
Author: jj743 (jj743)
Avg Rating: 3.7300
Avg Difficulty: 0.7273
Total ratings: 11



ID: 4254272
Created: 3:01pm, 02 Jan 2020
When using a selection sort algorithm on multiple input data, which of the following statements is correct? It can be assumed that all input data is of equal size.
a) Mostly sorted input data will be sorted the fastest.
b) Completely unsorted input data (data in reverse order) will be sorted the fastest.
c) Randomly ordered input data will be sorted the fastest.
*d) All input data will be sorted in (roughly) the same amount of time.
Explanation: Explanation can be found inWeek4a-post on Moodle. The answer is D, because no matter what order the input data is in, the selection sort algorithm will always do the same number of steps. It will always find the smallest item in the list then put that in the first position, then the smallest item in the remaining N-1 positions and put that in the second position and so on. Even if the data is completely sorted, it still iterates through the entirety of each sub-list, of sizes N, N-1, N-2, ... 2, 1. Therefor, the run time is always constant for same size input data.
Tags: Sorting, Complexity
Author: mt923 (mt923)
Avg Rating: 4.4300
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4254273
Created: 2:55pm, 02 Jan 2020
Correct assigments of big O notation forTheta, Omega, Oare:
a) Best, Worst, Exact
b) Exact, Worst, best
*c) Exact, Worst, Best
d) Best, Exact, Worst
e) Worst, Exact, Best
Explanation: 2019 Week2b-Powerpoint slide5Theta = exactOmega = bestO = worst
Tags: Complexity
Author: ja853 (ja853)
Avg Rating: 2.1700
Avg Difficulty: 0.1667
Total ratings: 6
==> Comment 1: You may have misunderstood asymptotic complexities. Omega is not the complexity of the best case scenario, and neither is Oh the worst case scenario. Rather, Omega is a lower bound complexity and Oh is an upper bound complexity. It may help to realise that the best case scenario for an algorithm can still have a Theta, Omega and Oh complexity of its own as can an algorithm's worst case.We would use Oh and Omega when we cannot calculate Theta, or we would use them together to find Theta i.e. when Oh = Omega as discussed in week1a slide 14. (by: tristan [tr548])
====> Reply 1: Ah, I used the wrong keywords, thanks for pointing this out.



ID: 4254263
Created: 2:26pm, 02 Jan 2020
Which of the following sorting algorithms does shellsort make use of?
a) Merge sort
b) Insertion sort
*c) h-sort
d) Quick sort
Tags: Sorting
Author: sw2229 (sw2229)
Avg Rating: 3.6000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4254262
Created: 2:25pm, 02 Jan 2020
Which of the following is true for all binary trees?
*a) Every node has at most 2 children
b) Every node has at least 2 children
c) Every leaf node has the same depth
d) Can only store 0s and 1s
Tags: Trees
Author: sw2229 (sw2229)
Avg Rating: 4.4000
Avg Difficulty: 0.0000
Total ratings: 5



ID: 4254260
Created: 2:22pm, 02 Jan 2020
What are the 2 main types of graph traversal?
a) Breadth-first, in-order
*b) Breadth-first, depth-first
c) Depth-first, pre-order
d) Pre-order, post-order
Tags: Graphs
Author: sw2229 (sw2229)
Avg Rating: 3.4300
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4254259
Created: 2:22pm, 02 Jan 2020
What is the "load" of a hash table?
a) The total buckets in the array / the max number of keys to insert
*b) The max number of keys to insert / the total buckets in the array
c) (The max number of keys to insert)2/ the total buckets in the array
d) (The total buckets in the array)2 / the max number of keys to insert
Explanation: 2019 Week 10 b, slide 30
Tags: Hashtables
Author: gc637 (gc637)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4254224
Created: 1:00pm, 02 Jan 2020
What can't/shouldn't you do with closed hashtables?
a) Have empty buckets
b) Add items
*c) Remove items
Explanation: Week 10b Slide 22
Tags: Hashtables
Author: duncrtr (djc71)
Avg Rating: 3.8800
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4254222
Created: 12:55pm, 02 Jan 2020
While searching a hash table for an ID number, I find the memory location according to the hash function to be occupied by a different ID number. I check the 2nd bucket, then the 3rd bucket, then abandon my search. What was in the third bucket?
a) Zero
*b) Nothing
c) The contents of the 2nd bucket
d) There was no 3rd bucket
Explanation: Week 10b Slide 17. If there was no 3rd bucket then the search would loop back around.
Tags: Hashtables
Author: duncrtr (djc71)
Avg Rating: 4.2000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4255134
Created: 12:36pm, 02 Jan 2020
How many objects (roughly) for n data slots leads to a 50% chance of a collision occuring in a hash table?
a)
*b)
c)
d)
Explanation: Week 10b Slide 12
Tags: Hashtables
Author: duncrtr (djc71)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4254192
Created: 12:23pm, 02 Jan 2020
What is the time complexity of: Pre-order traversal, In-order Traversal, Post-order traversal, and Level-order traversal?
a)
b)
*c)
d)
Explanation: Week 7b. Slide 29
Tags: Search, Trees
Author: duncrtr (djc71)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 2



ID: 4254186
Created: 12:04pm, 02 Jan 2020
Which two qualities make up a complete (full) binary tree?
a) Every non-leaf node has exactly two children.Number of nodes in the tree is exactly 2^(d+1) where d is the depth of the tree.
b) Every leaf node has the same depth.Every non-leaf node has at least one child node.
*c) Every leaf node has the same depthEvery non-leaf node has exactly two children
d) Every non-leaf node has at least one child node.Number of nodes in the tree is exactly 2^(d+1) where d is the depth of the tree.
Explanation: Week 7b Slide 9
Tags: Trees
Author: duncrtr (djc71)
Avg Rating: 3.8300
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4254173
Created: 11:31am, 02 Jan 2020
What is the difference between a binary tree and any other tree?
a) In a binary tree, a child node is always greater than its parent node.
*b) A binary tree has at most two children nodes
c) A binary tree only has two nodes
d) A binary tree has the largest value at the root
Explanation: Week 7b Slide 6
Tags: Trees
Author: duncrtr (djc71)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4254165
Created: 11:19am, 02 Jan 2020
How many comparisons are required in a 4-way merge sort of n elements?
*a)
b)
c)
d)
Explanation: Week 5b Slide 12
Tags: Sorting
Author: duncrtr (djc71)
Avg Rating: 3.6000
Avg Difficulty: 1.8000
Total ratings: 5



ID: 4254156
Created: 11:08am, 02 Jan 2020
What is an advantage of Heap Sort over Merge Sort?
a) It is T(nlogn) whereas Merge sort is T(n^2)
b) It is faster for large sets
*c) It is an in-place sort
Explanation: Week 5b mentioned by JHD @ 28:00 (Panopto)
Tags: Sorting
Author: duncrtr (djc71)
Avg Rating: 3.8300
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4254153
Created: 11:06am, 02 Jan 2020
What is the post-order traversal of 4 / \ 2 6 / \ / \ 1 3 5 7 \ 8
a) 1 2 3 4 5 6 7 8
b) 4 2 1 3 6 5 7 8
*c) 1 3 2 5 7 8 6 4
d) 4 2 6 1 3 5 7 8
Explanation: Lecture 7b - Trees 1 - Slide 24
Tags: Trees
Author: sn545 (sn545)
Avg Rating: 3.0000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4254145
Created: 10:54am, 02 Jan 2020
A comparison sorting decision tree of height h has no more than ___ leaves
a)
b)
*c)
d)
Explanation: Week 4a Slide 20
Tags: Trees
Author: duncrtr (djc71)
Avg Rating: 3.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4254142
Created: 10:50am, 02 Jan 2020
What is the average runtime complexity of insertion into a linked list if the reference to the preceding node is given and where n is the number of items already in the list?
*a)
b)
c)
d)
Explanation: Week 3b Slide 10
Tags: Lists, Complexity
Author: duncrtr (djc71)
Avg Rating: 3.6000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 4254137
Created: 10:46am, 02 Jan 2020
What is the Big-Theta of this code:void myProgram (int a, int b, int c){ for(int i=0; i<a*a; i++){ for(int j=0; j<b; j++){ if(j==b/2){ for(int k=0; k<c; k++){ System.out.println("TRUE"); } } else { System.out.println("FALSE"); } } }}
a)
b)
c)
*d)
e)
Explanation: Week 2b Slide 23.
Augmented explanation 1: Week 2b Slide 23. Nested for loops gives a2b. The third for loop is only performed once in each "b" for loop (since j==b/2 once). So we add c instead of taking the product of b and c. (by: duncrtr [djc71])
Tags: Complexity
Author: duncrtr (djc71)
Avg Rating: 3.5700
Avg Difficulty: 1.2857
Total ratings: 7



ID: 4254132
Created: 10:39am, 02 Jan 2020
What is the asymptotic memory usage of an adjacency matrix compared to an adjacency list?[v is the number of vertices, e is the number of edges]
*a) Matrix: List:
b) Matrix: List:
c) Matrix: List:
d) Matrix: List:
Explanation: Lecture 17 - Graphs1 - Slide 17
Tags: Graphs, Complexity
Author: sn545 (sn545)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4254126
Created: 10:21am, 02 Jan 2020
After two iterations of Selection Sort, what does the following list look like:3 5 2 1 6 4
a) 2 3 5 1 6 4
*b) 1 2 5 3 6 4
c) 1 5 2 3 6 4
d) 1 2 3 4 5 6
Explanation: Lecture 4a - slide 6.A is two iterations of insertion sortB is two iterations of selection sortC is one iteration of selection sortD is a fully sorted list
Tags: Sorting
Author: sn545 (sn545)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4254013
Created: 4:04am, 02 Jan 2020
Which three of the following sorting algorithms are stable?:Selection sort,Insertion sort,Bubble sort,Shell sort,Quick sort,Merge sort,Heap sort.
a) Selection sort,Insertion sort,Bubble sort.
b) Selection sort,Quick sort,Merge sort.
c) Insertion sort,Shell sort,Quick sort.
d) Insertion sort,Quick sort,Merge sort.
*e) Insertion sort,Bubble sort,Merge sort.
Explanation: See slide 24 of D&A-Revision2.pdf on Moodle
Tags: Sorting
Author: mjs209 (mjs209)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4254008
Created: 3:42am, 02 Jan 2020
Two functions have respective time complexities defined by:where log is of base-2.For what value of n does g become faster than f?
a) n=17
*b) n=107
c) n=507
d) n=1007
e) n=5007
Explanation:
Tags: Applications, Complexity
Author: mjs209 (mjs209)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4254000
Created: 3:06am, 02 Jan 2020
Consider the following tree:What would be the result of printing the values of each node via POST-ORDER traversal?
a) A B C D E F G H
b) A B D E G H C F
*c) D G H E B F C A
d) G H E D B F C A
e) G H D E F B C A
Explanation: Post-order traversal applies the following procedure to each node it arrives at, starting from the root node:1: Recursively traverse left sub-tree2: Recursively traverse right sub-tree3: Read/print current node
Tags: Trees
Author: mjs209 (mjs209)
Avg Rating: 3.3300
Avg Difficulty: 0.0000
Total ratings: 3



ID: 4253996
Created: 2:48am, 02 Jan 2020
Which of the following code snippets would correctly remove the nthelement, n, of a doubly-linked list?
a) n.prev.next = n.next;n.prev = n.prev.prev;n.next = n.next.next;n.next.prev = n.prev;
b) n.prev = n.next;n.next = n.prev;
*c) n.prev.next = n.next;n.next.prev = n.prev;
d) n.prev.next = n.next.prev;n.next.prev = n.prev.next;
e) System.out.println("Remove " + n.toString());
Explanation: The first line will ensure the previous node now skips over node n and points forward straight to the next node after it.The second line ensures the next node after n now points backwards to the previous node (again, skipping over n).
Tags: Lists
Author: mjs209 (mjs209)
Avg Rating: 4.2000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4253974
Created: 1:05am, 02 Jan 2020
Which of the following sorting algorithm is stable and has average time complexity of nlog(n)
a) Selection
b) Insertion
*c) Merge
d) Heap
e) Bubble
Explanation: Week 7a 2019 slide 5
Tags: Sorting
Author: jjc61 (jjc61)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4253972
Created: 12:47am, 02 Jan 2020
Assume that we have a perfect skip list (as described in 2019 coursework 2 Q3... "every element is linked to the next, even numbered elements are also linked to the one 2 ahead, elements whose number is divisible by 4 are also linked to the one 4 ahead, and so on by powers of 2.").The skip list contains 32768 elements. How many elements have at least 11 lanes?
a) 15
*b) 31
c) 16
d) 32
e) 11
Explanation: The number of elements with n lanes is given by:So for at least 11 lanes we need to find the number of elements with 11,12,13,14 and 15 lanes.
Tags: Lists
Author: jjc61 (jjc61)
Avg Rating: 3.7100
Avg Difficulty: 1.5714
Total ratings: 7



ID: 4253954
Created: 11:47pm, 01 Jan 2020
For the above tree, what is the outcome for in-order traversal?
a) 10, 7, 14, 3, 8, 13, 17, 16, 18
*b) 3, 7, 8, 10, 13, 14, 16, 17, 18
c) 10, 7, 3, 8, 14, 13, 17, 16, 18
d) 3, 8 , 7, 13, 16, 18, 17, 14, 10
Explanation: In-order traversal will process the nodes in the left tree, then it will process the node and finally it will process the nodes in the right tree (Slide 22 Week7b 2019).A is level-orderC is pre-orderD is post-order
Tags: Trees
Author: jjc61 (jjc61)
Avg Rating: 4.7500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4253939
Created: 11:12pm, 01 Jan 2020
A binary tree has a depth of 6, it is full on all levels except for the bottom. The bottom level contains 4 nodes, how many nodes are there in the tree?
a) 63
b) 59
*c) 67
d) 64
e) 68
Explanation: For simplicity, find the amount of nodes in the tree for all levels excluding the bottom one. This gives a complete tree with a depth of 5. The tree has 2^(5+1) - 1 = 63 nodes (from the formula on slide 11 of Week7b 2019). We simply add the 4 from the bottom level to get 63 + 4 = 67 nodes in total.
Tags: Trees
Author: jjc61 (jjc61)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4254369
Created: 10:02pm, 01 Jan 2020
Which of the following statements are true?
a) When two items are mapped to the same index of an Open Hash Table will discard the replace the previous item with the most recently added item.
b) When searching an Open Hash Table the algorithm will start at the lowest index and continue to the next index until it finds the correct item, which will be returned.
*c) When adding a value to an Open Hash Table the current index is already in use the algorithm will add it to the end of a linked list associated with that index.
d) When removing an item from an Open Hash Table if the correct item is not found in the initial index, the algorithm will repeatedly move to the next index in the table until the item is found and hence removed.
e) None of the above.
Explanation: an open hash table uses linked lists to solve collisions by adding each item to the end of the linked list.options A) and B) are not features of Hash Tablesoption D) describes removing in a closed Hash Table
Tags: Hashtables
Author: lm2062 (lm2062)
Avg Rating: 4.4000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4253929
Created: 9:51pm, 01 Jan 2020
What is the time complexity of the following extract of code?System.out.println("Hello world");for(int i = 0; i < n; i++){ System.out.println("Test");}for(int j = 0; j < n; j++){ System.out.println("Test");}
a) O(1 + 2n)
*b) O(n)
c) O(1)
d) O(1 + n + n)
e) None of the above
Explanation: 2019 Week1b-Powerpointv2
Tags: Complexity
Author: rl859 (rl859)
Avg Rating: 4.0000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4253927
Created: 9:47pm, 01 Jan 2020
Given the above binary tree, which type of traversal should be carried out to obtain the output2, 5, 11, 6, 7, 4, 9, 5, 2?
a) Level-Order Traversal
b) In-Order Traversal
c) Pre-Order Traversal
*d) Post-Order Traversal
Explanation: 2019 Lecture 13, slide 24
Tags: Trees
Author: pangtk (tk548)
Avg Rating: 4.4300
Avg Difficulty: 0.5714
Total ratings: 7



ID: 4253923
Created: 9:35pm, 01 Jan 2020
for an algorithm operating on n items and a runtime of?(n2) when n's size quadruples, by how much will T change? (denoted by T')
a) T' = 8T
b) T' = T1/2
*c) T' = 16T
d) T' = T
Explanation: n increases by a factor of 4 leading to T increasing by a factor of 42= 16
Tags: Complexity
Author: lm2062 (lm2062)
Avg Rating: 3.4300
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4253921
Created: 9:28pm, 01 Jan 2020
Which one of the following defines a complete binary tree?
a) A binary tree with an odd number of nodes and every non-leaf node has exactly two children
b) A binary tree with a prime number of nodes and in which every leaf node has the same depth
*c) A binary tree in which every leaf node has the same depth and every non-leaf node has exactly two children
d) A binary tree with an even number of nodes and every non-leaf node has exactly two children
Explanation: 2019 Lecture 13, slide 11
Tags: Trees
Author: pangtk (tk548)
Avg Rating: 4.0000
Avg Difficulty: 0.1667
Total ratings: 6



ID: 4253919
Created: 9:24pm, 01 Jan 2020
which of the following defines Big-O notation where g(n) = O(f(n))?
*a) ? c>0 n0>0 | ?n>n0 : g(n) = c f(n)
b) ? c>0 n0>0 | ?n>n0 : g(n)= c f(n)
c) ? c1>0 c2>0n0>0 | ?n>n0 :c2f(n)= g(n) = c1f(n)
Explanation: Big-O notation is the upper-bound of the function it depicts, therefore, g(n)= c f(n) shows that the value of g(n) will always be less than the value of f(n) when n tends to infinityE.g O(5n+5)= n3and O(n2)= n2.
Tags: Complexity
Author: lm2062 (lm2062)
Avg Rating: 3.0000
Avg Difficulty: 0.5000
Total ratings: 2



ID: 4253914
Created: 9:11pm, 01 Jan 2020
Which one of the following data structures has the average search time complexity ofT(1)?
a) AVL Tree
b) Binary Search Tree
c) Singly Linked List
d) Doubly Linked List
*e) Hash Table
Explanation: 2019 Lecture 10b, slide 42
Tags: Search, Complexity, Hashtables
Author: pangtk (tk548)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4253872
Created: 6:52pm, 01 Jan 2020
If we cube the adjacency matrix of a directed graph, what should happen?
a) The adjacency matrix is an identity matrix so should be the same as the adjacency matrix.
b) The resulting matrix should show all the matrices that are 2 arcs apart from each other.
*c) The resulting matrix should show all the matrices that are 3 arcs apart from each other.
d) The resulting matrix should show all the matrices that are 3 arcs apart from each other (including all the combinations that are 1 apart from each other, as you can just traverse the same arc back again).
e) The resulting matrix shows all the nodes that can be reached by travelling along arcs of length 3.
Explanation: If the graph had the adjacency matrix of an identity matrix, all points would point at themselves, so it wouldn't be directed and it wouldn't be a graph. However, as the adjacency matrix shows all the nodes that can be reached by an arc, cubing the graph has the property of showing the nodes that can be reached by 3 arcs. Note that not all arcs have to be of unit length, so E is discounted, and as this is a directed graph, then not all combinations of length 1 can be returned to. Sorry for the slightly trick question :)
Tags: Graphs
Author: robwooller (rbw32)
Avg Rating: 4.6700
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4253868
Created: 6:38pm, 01 Jan 2020
Which sorting method has a best average case for n=2 (and all n greater than 2) out of the following options?
a) Shell Sort
b) Insertion Sort
c) Selection Sort
*d) Merge Sort
Explanation: Selection and insertion sort both have an average case ofT(n^2), which is a lot slower thanT(n^1.25) of shell sort. However it can be seen that this is slower than theT(n log(n)) of merge sort, as n^0.25 scales faster than log(n)and (for n starting at 1) starts off at 1 rather than negative infinity. Merge sort takes the same amount of time as insertion sort for n=1 as they are the same program.
Tags: Sorting, Complexity
Author: robwooller (rbw32)
Avg Rating: 0.0000
Avg Difficulty: 0.0000
Total ratings: 0



ID: 4253866
Created: 6:28pm, 01 Jan 2020
What is the best, average and worst case complexity for insertion sort?
a) O(n)O(n)O(n2)
*b) O(n)O(n2)O(n2)
c) O(n/2)O(n)O(n2)
d) O(n2)O(n2)O(n2)
Explanation: Week 7a slide 5
Tags: Sorting, Complexity
Author: nhu21 (nhu21)
Avg Rating: 4.2500
Avg Difficulty: 0.0000
Total ratings: 8



ID: 4253864
Created: 6:22pm, 01 Jan 2020
Which out of these types of sorts is stable?
*a) Merge Sort
b) Shell Sort
c) Quick Sort
d) Heap Sort
Explanation: Microsoft PowerPoint - D&A-Revision2.pptx, slide 24
Tags: Sorting
Author: gc637 (gc637)
Avg Rating: 3.7100
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4253863
Created: 6:19pm, 01 Jan 2020
Which method of tree traversal is used to display the elements starting at the root of the tree, and making its way down to the leaves of the tree, one level at a time?
a) Post-order traversal
*b) Breadth first traversal
c) In-order traversal
d) Pre-order traversal
Explanation: Breadth first traversal makes sure not to descend a level of the tree until all the possible points of the level have been displayed, with the levels further down being called recursively afterwards. The 4 traversal methods can be described by marking each node of the tree with 4 dots on each side of the node (top, bottom,left,right) and by drawing a line around the outside of the entire tree. While breadth- first just requires you to look from the root down and to record the node when the top dot is reached, the others can be described by their relationship to the surrounding line. Pre-order requires you to follow the line anticlockwise starting at the root , and to write down when the line goes past the left dot of the node. In-order and post-order are the same for the bottom and right dots respectively. Breadth first traversal is useful for trees with the same value multiple times in the same tree, as you can use breadth first search to see which instance is the least levels down the tree.
Tags: Search, Trees
Author: robwooller (rbw32)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4253862
Created: 6:16pm, 01 Jan 2020
What is the maximum height of a perfectly balanced tree with n nodes?
a) n log (n)
*b) log(n)
c) en
d) log(n2)
Explanation: Stated on Week8b, slide 3
Tags: Trees
Author: gc637 (gc637)
Avg Rating: 4.1700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4253861
Created: 5:38pm, 01 Jan 2020
For the following piece of Java code, select the worst case runtime from the options given.N.B. You can assume that printing a string to console takes constant time.public static void function (int N) { for (int i = 1; i < N; i++) { for (int j = 1; j < N; j = j * 2) { System.out.println("hello world"); } }}
a) O(logN)
b) O()
*c) O(NlogN)
d) O()
e) None of the above.
Explanation: First you should notice that there are nested for loops which are both bounded by N and start at 1.The outer for loop increments by the addition of 1 to i each iteration, while the inner for loop increments by the multiplication of j by 2 each iteration.Therefore:Outer for loop: O(N) iterationsInner for loop: O(logN) iterations- Why?- If we say k is equal to the number of iterations of the inner for loop, then N = - If we take logs of both sides, we are left with k = log NMultiplying together since they are nested for loops, gives you the following answer:O(NlogN)
Tags: Complexity
Author: rss66 (rss66)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4253858
Created: 5:15pm, 01 Jan 2020
What option has the correct definitions of each of the following:leafComplete (Full) Binary treeBinary tree
a) leaf - A node with 2 childrenComplete (Full) Binary tree - Every leaf node has the same depth, Every leaf node has exactly two childrenBinary tree - A tree where every node has at most two children
b) leaf - A node with only 1 childComplete (Full) Binary tree - Every leaf node has a different depth, Every leaf node has exactly two childrenBinary tree - A tree where every node has at least two children
*c) leaf - A node with 0 childrenComplete (Full) Binary tree - Every leaf node has the same depth, Every non-leaf has exactly two childrenBinary tree - A tree where every node has at most two children
d) leaf - A node with more than one childComplete (Full) Binary tree -Every leaf node has the same depth, Every leaf has more than one childBinary tree - A tree where every node has at least one child
e) leaf - A node with 0 childrenComplete (Full) Binary tree -Every leaf node has the same depth, Every non-leaf has exactly two childrenBinary tree - A tree where every node has at least one child
Explanation: leaf - A node with 0 childrenComplete (Full) Binary tree - Every leaf node has the same depth, Every non-leaf has exactly two childrenBinary tree - A tree where every node has at most two children
Tags: Trees
Author: tregorran (am3292)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 1



ID: 4253848
Created: 5:02pm, 01 Jan 2020
which of these options is in the order of:pre-order TraversalIn-order TraversalPost-order Traversal
a) 1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree
b) 1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree
c) 1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree
*d) 1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
e) 1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree
Explanation: Pre-order Traversal1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-treeIn-order Traversal1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-treePost-order Traversal1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
Tags: Trees
Author: tregorran (am3292)
Avg Rating: 4.6700
Avg Difficulty: 0.3333
Total ratings: 3



ID: 4253847
Created: 5:01pm, 01 Jan 2020
Order the following Big O runtimes from largest to smallest:O(log n), O(1), O(n log n), O(n), O(), O()
a) O(log n), O(1), O(n log n), O(n), O(), O()
b) O(), O(),O(n), O(n log n), O(log n), O(1)
c) O(1), O(log n), O(n), O(n log n), O(), O()
*d) O(), O(), O(n log n), O(n), O(log n), O(1)
e) None of the above.
Explanation: Take care to read the question carefully:Order the following Big O runtimes from largest to smallest.>> n log n > n > log n > 1
Tags: Complexity
Author: rss66 (rss66)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4253825
Created: 4:19pm, 01 Jan 2020
If the closed hash table with linear probing has a load factor of 0.30, what is the average number of steps to insert/find an item.
a) ~1.05
b) ~1.12
*c) ~1.21
d) ~1.3
e) ~1.5
Explanation: For a closed Hash table with linear probingAverage number of steps = 1/2(1+1/(1-L)) for L < 1.0(1-L) - % empty spacefor a open hash tableAverage number of steps = 1 + L/2
Tags: Hashtables
Author: tregorran (am3292)
Avg Rating: 3.8000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4253817
Created: 3:58pm, 01 Jan 2020
What is the correct recurrence relation for merge sort (when N, the number of elements of the list being sorted, is greater than 1 and a positive power of 2 for simplicity)?
a) T(N) = T(N/2) + O(1)
b) T(N) = T(N/2) + O(N)
*c) T(N) = 2T(N/2) + O(N)
d) T(N) = 2T(N/2) + O(1)
e) None of the above
Explanation: If the length of the list, N, is equal to 1, then the list is sorted so merge sort just returns the list: T(1) = O(1) (this is the base case).Otherwise, merge sort splits the list into two equal halves (since the number of elements is a positive power of 2) and then recursively sorts each half: 2 * T(N/2)Then the two sorted halves are merged where the runtime of the merge operation is O(N) where N is the number of elements being merged.Therefore the correct answer is: T(N) = 2T(N/2) + O(N)
Tags: Sorting, Complexity
Author: rss66 (rss66)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4253797
Created: 3:00pm, 01 Jan 2020
What order would the nodes in the following tree be visited in, when carrying out a level-order traversal?
a) 5, 4, 2, 1, 3, 6, 11, 22
*b) 5, 4, 6, 2, 3, 11, 22, 1
c) 1, 2, 4, 3, 5, 6, 11, 22
d) None of the above
Explanation: 2019 Week7b-Tree1Visit each of the nodes reading left to right on each level, starting at the root.
Tags: Trees
Author: rl859 (rl859)
Avg Rating: 3.8800
Avg Difficulty: 0.3750
Total ratings: 8



ID: 4253782
Created: 1:10pm, 01 Jan 2020
What is the best, average and worst case complexity of selection sort?
*a)
b)
c)
d)
e) None of the above.
Explanation: 2019 Week 7a Slide 5
Tags: Sorting, Complexity
Author: rl859 (rl859)
Avg Rating: 4.1700
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4253780
Created: 1:02pm, 01 Jan 2020
Consider a closed hash table with linear probing. If there is a load factor of .10, what is the average number of steps?
a) ~1.12
*b) ~1.05
c) ~1.21
d) ~1.47
Explanation: The calculation for average number of steps is�(1+ 1/(1-L)), where if L is replaced with 0.10, then the result is ~1.05.
Tags: Hashtables
Author: felix (fjtm20)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 1



ID: 4253784
Created: 1:53am, 01 Jan 2020
Perform 1 pass of h-sort on the following array taking h to be 4.1D array = 31, 6, 4, 21, 12, 84, 19, 62, 4, 11, 1, 91Output will be?
*a) 12, 6, 4, 21, 4, 11, 1, 62, 31, 84, 19, 91
b) 21, 6, 4, 19, 12, 4, 11, 1, 84, 31, 62, 91
c) 6, 4, 21, 12, 31, 19, 62, 4, 11, 1, 84, 91
Explanation: From week 5 lec BTake a value of h.For each element in the array:� If A[i] and A[i+h] are out of order thenswap the two elements
Tags: Sorting
Author: rgw28 (rgw28)
Avg Rating: 5.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4253626
Created: 7:38pm, 31 Dec 2019
Perform Dijkstra's algorithm on the following graph with starting vertex A.What will be outputted?
*a) A one dimensional array with values: 0, 5, 3, 2
b) A one dimensional array with values: 5, 3, 2
c) A two dimensional array with values: A, B, C, D 0, 5, 3, 2
d) A one dimensional array with values: 0, 6, 3, 2
Explanation: Dijkstra's algorithmdetermines shortest paths from a start vertex s to all other vertices in graph.We can see that the shortest path of from A to A is 0, from A to B is 5, from A to C is 3 and from A to D is 2.From Week 10 Lecture A we can see that the output of Dijkstra's algorithm is a single 1D array containing the shortest distance from the start vertex to every other vertex in the graph. Hence why answer A is correct.
Tags: Graphs
Author: rgw28 (rgw28)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4253617
Created: 6:31pm, 31 Dec 2019
What is the input and output of Dijkstra's algorithm?
*a) Input: A graph Gand starting vertex sOutput: array called Dist of optimal distances from s to every node in graph.
b) Input: An array Aand starting vertex s and nodes containing weight N.Output: array called Dist of optimal distances from s to every node in graph.
c) Input: A graph Gand starting vertex sOutput: Array called Dist of optimal distances from s to every node in graph and and the weights of each node
d) Input: A graph Gand end vertex eOutput: Array called Dist of optimal distances to e from every node in graph.
Explanation: This is taken from the slides in week 10 lecture A.Graph is a graph where different vertices have different weights (prices) to get to them.The Dist array returned is an array which will contain the elements that have the best possible price to get to each vertex.S is the vertex where the weights to get to the other vertices is calculated from.
Tags: Graphs
Author: rgw28 (rgw28)
Avg Rating: 4.7500
Avg Difficulty: 0.7500
Total ratings: 8



ID: 4253604
Created: 5:07pm, 31 Dec 2019
What is the formal definition of 'Big-Omega' , for a positive function f(n)?
*a) A function g(n) equalsO(f(n)) if and only if there are constants c>0 and n0>0 so that for all n>n0, g(n)= cf(n).
b) A function g(n) equals O(f(n)) if and only if there are constants c>0 and n0>0 so that for all n>n0, g(n) = cf(n).
c) A function g(n) equals O(f(n)) if and only if there are constants c1>0 and c2>0 and n0>0so that for all n>n0, g(n) = c1 f(n) and g(n) = c2 f(n).
d) The exact bound of a function f(n), where the order of complexity of f(n) is exactly O(f(n)).
e) None of the above.
Explanation: See 2019 Week2b Powerpoint Slide 5 for formal definitions.
Tags: Complexity
Author: agkolia (ag2214)
Avg Rating: 4.3300
Avg Difficulty: 0.3333
Total ratings: 9



ID: 4253599
Created: 4:47pm, 31 Dec 2019
Assume you are deleting an element (called 'node') from the middle of a doubly-linked list equipped with prev and next references. Which of the following lines of code would correctly delete the element in the list?
a) node = null; node.prev.next = node.next; node.next.prev = node.prev;
b) node.prev.next = node.next; node.prev = null; node.next = null; node.next.prev = node.prev;
*c) node.prev.next = node.next; node.next.prev = node.prev;
d) node.next = node.next.next; node.prev = node.prev.prev; node = null;
e) None of the above.
Explanation: As the node is in the middle of the list, two references have to be reassigned; the next reference from the previous element and the prev reference from the next element.The references of the node in question do not have to be reassigned, as the node is no longer going to be accessed.See: 2019 Week3b Linked Lists Slides.
Tags: Lists
Author: agkolia (ag2214)
Avg Rating: 4.6000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4253591
Created: 3:56pm, 31 Dec 2019
If we have a binary tree which represents a mathematical expression - where the operands are contained in leaf nodes and the operator nodes all have two children (see below for example) - what type of traversal algorithm should be used to evaluate the expression?
a) Pre-order
b) In-order
*c) Post-order
d) Level-order
Explanation: Any expressions in the left and right sub-trees must be evaluated first, before the operation in the current node can be applied. This is an example of post-order traversal (see 2019 Week 7b-Trees 1 slides).
Tags: Trees
Author: pm779 (pm779)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4253586
Created: 3:21pm, 31 Dec 2019
Class for an AVL tree node is given below:class AVLNode { int value; int balance; AVLNode left, right;};In this AVL tree node, what does the balance value of 1, 0 and -1 indicate?
*a) � 1 = node balance on the right subtree is one higher than on the left.� 0 =node balance on the left and on the right subtree are the same.� -1 = node balance on the left subtree is one higher than on the right.
b) � 1 = node balance on the left subtree is one higher than on the right.� 0 = node balance on the left and on the right subtree are the same.� -1 = node balance on the right subtree is one higher than on the left.
c) � 1 =node balance on the left and on the right subtree are the same.� 0 =node balance on the left subtree is one higher than on the right.� -1 = node balance on the right subtree is one higher than on the left.
d) � 1 = node balance on the right subtree is one higher than on the left.� 0 = node balance on the left subtree is one higher than on the right.� -1 = node balance on the left and on the right subtree are the same.
Explanation: This is taken from the powerpoint slides from Week 8 Lecture B called Trees 3.The balance of nodes in an AVL tree indicates whether the tree needs to be rebalanced to the left or to the right.The balance is calculated via the subtracting the height of the right subtree with the height of the left subtree.Below is an example of a balanced tree. The balance value of each node is shown.Example Tree: Node-1 Node-1 balance = 1 / \ Node-2 balance = 0Node-2 Node-3 Node-3 balance = 0 / \ Node-4 balance = 0 Node-4 Node-5 Node-5 balance = 0
Tags: Trees
Author: rgw28 (rgw28)
Avg Rating: 3.9100
Avg Difficulty: 0.3636
Total ratings: 11
==> Comment 1: The answer to this question is relative to how the balance function is programmed rather than the node class itself. (by: agkolia [ag2214])



ID: 4253572
Created: 1:31pm, 31 Dec 2019
Three types of search that we can use to find an element in an ordered set of data are binary search, interpolation search and linear search. What are their complexities?
a) Binary Search is?(n), Interpolation Search is?(log(n)),Linear Search is?(n)
b) Binary Search is ?(log(n)), Interpolation Search is ?(n), Linear Search is ?(n)
*c) Binary Search is ?(log(n)), Interpolation Search is ?(log(log(n))), Linear Search is ?(n)
d) Binary Search is ?(log(n)), Interpolation Search is ?(log(n)), Linear Search is ?(n)
e) None of the above
Explanation: See slides 5-10 in lecture week2a.
Tags: Search, Complexity
Author: tristan (tr548)
Avg Rating: 4.2900
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4253569
Created: 12:52pm, 31 Dec 2019
I add the following numbers to a Binary Search Tree in this order: 13, 5, 19, 8, 7, 16, 18, 12, 17What is the depth of the tree? What is the minimum number of nodes I would need to add to make it complete?
a) depth:4, nodes:23
b) depth:5, nodes:23
c) depth:5, nodes:24
d) depth:3, nodes:22
*e) depth:4, nodes:22
Explanation: The depth is 4. The number of total nodes in a complete tree of depth d is 2^(d+1)-1, which in this case is 31. As we already have 9 nodes on the tree, we have to add another 22.
Tags: ADTs, Trees
Author: ts2042 (ts2042)
Avg Rating: 4.2000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4253563
Created: 12:34pm, 31 Dec 2019
Santa was trying to mathematically speed up his delivery times, so he made a graph (graph A) where the vertices were houses and two houses had an edge between them if they were on the same street. He also decided to make a graph (graph B) to monitor friendships between his elves so he could best choose which elves would get each other for the factory Secret Santa that year; however, he found it to be nearly pointless, as although he has 1000 elves working for him, almost all of them are friends with each other! In this graph each elf is a vertex and they have an edge drawn between each other if they are friends.To respresent each graph, should Santa use an adjacency matrix or an adjacency list?? Hurry up, he has to start preparing for Christmas 2020 ASAP!!
a) Matrix for Graph A, List for Graph B
b) Matric for Graph A, Matrix for Graph B
c) List for Graph A, List for Graph B
*d) List for Graph A, Matrix for Graph B
Explanation: In graph A, there are billions of vertices, each of which is not likely to be connected to more than a hundred others. A matrix would store way too much data, most of which wouldn't be used! An adjacency list would be a much more suitable option.In graph B, almost all vertices are connected, so although a list and a matrix would store a similar amount of data (roughly 1000x1000), a matrix would be much less complicated. The amount of data to store is not too much.
Tags: ADTs, Lists, Graphs
Author: ts2042 (ts2042)
Avg Rating: 4.5600
Avg Difficulty: 0.7778
Total ratings: 9



ID: 4253557
Created: 12:10pm, 31 Dec 2019
Which of the following algorithms is stable?
*a) Merge sort
b) Heap sort
c) Selection sort
d) Shell sort
e) Quick sort
Explanation: A stable algorithm is one where keys of the same value remain in the same order after sorting.
Tags: Sorting
Author: felix (fjtm20)
Avg Rating: 3.7000
Avg Difficulty: 0.4000
Total ratings: 10
==> Comment 1: 2019 slides, week 7a, slide 5, say that selection can be stable. (by: ts2042 [ts2042])
====> Reply 1: You are correct, it can be modified so that is stable but then it is not longer same algorithm.



ID: 4253560
Created: 11:44am, 31 Dec 2019
Given the AVL tree:When the value of 12 is inserted, which rotation is required in order to balance the tree?
a) Left rotation
b) Left-right rotation
c) Right rotation
*d) Right-left rotation
e) No rotation required
Explanation: The value of 12 is initially inserted into the tree as the left node of 14, meaning the tree is unbalanced.Then, traversing the tree from the node that was inserted, updating the heights and checking balance factors, it is found at value 11, it is not balanced. Therefore, a rotation of some kind needs to take place.Since the since the right node of 11 has the value on its left, a right rotation must occur. However, once this is complete the tree is still unbalanced, so a left rotation must occur.
Tags: Trees
Author: felix (fjtm20)
Avg Rating: 4.2000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4253425
Created: 10:47pm, 30 Dec 2019
The following is code for a Node for a particular ADT. Which ADT is it?class Node{ public Object element; public Node[ ] next; public Node(Object o){ element = o; next = new Node[5]; }}
a) Linked List of length 5
b) Doubly-Linked List of length 5
c) Binary Search Tree of depth 5
*d) Skip List with 5 lanes
e) AVL Tree of depth 5
Explanation: In a skip list, there are different lanes; hence the 'next' property is an array of nodes rather than just one node, as the ith node in the array follows from the current node in the ith lane. Binary Search Trees and AVL Trees also point to multiple nodes, but these are commonly programmed as the 'left' and 'right' properties.
Tags: ADTs, Lists, Trees
Author: ts2042 (ts2042)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4253359
Created: 5:41pm, 30 Dec 2019
Using the hash function h(x) = x%5, insert the elements 31, 60, 7, 46, 73, 82, 9, 57, 23, 92, 28 into an open hash table with slots 0,...,4. Which of the following options shows the third element of the longest list after the insertions?
a) 82
b) 28
*c) 57
d) 46
e) None of the above
Explanation: Using the method shown in slide 24 of the week 10b hash table powerpoint, the hash table becomes:6031, 467, 82, 57, 9273, 23, 289So the slot corresponding to 2 is the longest and its third element is 57.
Tags: Hashtables
Author: ksewell (ks963)
Avg Rating: 4.6700
Avg Difficulty: 0.5833
Total ratings: 12



ID: 4253347
Created: 5:02pm, 30 Dec 2019
What is the loop invariant of insertion sort?
a) The minimum component of the unsorted part of the array is placed at the beginning
b) The largest element in the array is always placed at the rightmost position
*c) The subarray A[0 to i-1] is always sorted
Explanation: A) Selection sort loop invariant.B)Bubble sort invariantC) When insertion sort begins the first element is automatically sorted but I = 1 in the loop. The next iteration i = 2 and the first 2 elements are sorted(i.e I = 0 to I = 1) and so on and it can be generalised to the statement made in B. More information can be found in the Introduction to Algorithms textbook (2009) Third edition.
Tags: Sorting
Author: ail24 (ail24)
Avg Rating: 4.1800
Avg Difficulty: 1.0909
Total ratings: 11



ID: 4253282
Created: 1:31pm, 30 Dec 2019
Suppose a Binary Search Tree contains a collection of surnames. Which type of tree traversal would you use to print these names alphabetically?
a) Pre-order
*b) In-order
c) Post-order
d) Breadth-first
Tags: Trees
Author: sw2229 (sw2229)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4253251
Created: 12:08pm, 30 Dec 2019
What is the�Time complexity� of an algorithm (T(n))?
a) The total time taken for the algorithm to finish (using, for example, a stopwatch).
b) The time taken for the algorithm to finish excluding stoppage time (e.g. the algorithm being halted due to another process being scheduled).
*c) The number of instructions used by an algorithm as a function of the size of the input data.
d) The average time taken for many hundreds/thousands of runs of the algorithm.
Explanation: We cannot consider the time complexity to be a set time as there are many factors that must be taken into account such as, how many CPU cores does the processor have, is multi threading enabled, are there any other processes running at this time, what is the clock speed of the processor and much more.We therefore consider time complexity as a function of the size of the input data. This way we can generalize the complexity of the algorithm to all processors and applications and it allows the algorithm to be directly compared to another algorithm.We calculate the time complexity by determiningthe number of elementary operations an algorithm performs.
Tags: Complexity
Author: tristan (tr548)
Avg Rating: 4.2900
Avg Difficulty: 0.3571
Total ratings: 14



ID: 4253299
Created: 11:50am, 30 Dec 2019
When considering Big-O notation, if |f(n)| = B|g(n)| ? n = bthen we say that...
*a) f is of order at most g, writtenf(n) ? O(g(n))
b) f is of order at least g, writtenf(n) ? O(g(n))
Explanation: So as n gets large, if the function f(n) remains smaller than some function B(g(n)) then we say that f(n) ? O(g(n)) because Big-O is an upper bound, i.e. f(n)will never have order greater than O(g(n)).
Tags: Complexity
Author: tristan (tr548)
Avg Rating: 3.8000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 4253231
Created: 11:12am, 30 Dec 2019
In which case are all of the following sorting algorithms stable?
a) Shell sort, insertion sort, bubble sort
b) Heap sort, merge sort, quick sort
c) Shell sort, quick sort, insertion sort
*d) Selection sort, insertion sort, bubble sort
Explanation: see slide 5 of week 7(a) powerpoint
Tags: Sorting, Applications
Author: cg853 (cg853)
Avg Rating: 3.7100
Avg Difficulty: 1.0000
Total ratings: 7



ID: 4253227
Created: 11:05am, 30 Dec 2019
What does it mean for an algorithm X to be asymptotically more efficient than another algorithm Y
a) X is a better choice for all inputs
*b) X is a better choice for large inputs
c) Y is a better choice for large inputs
d) X is a better choice for small inputs
Explanation: definitions of time complexity (for all b>=B)
Tags: Complexity
Author: cg853 (cg853)
Avg Rating: 4.4300
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4253117
Created: 1:14am, 30 Dec 2019
Define Singly Linked List.
a) Must have a special node at the beginning of the list.
b) Each node contains pointers to more than one nodes.
c) Each node has a pointer to the next node and the last node points the the first node.
d) Each node stores a reference to the object that is the element of the sequence and a pointer to the next node and previous node.
*e) Each node stores a reference to the object that is the element of the sequence and a pointer to the next node only.
Explanation: A = header linked listB = multi linked listC = circular linked listD = doubly linked list
Tags: Lists
Author: min (mjt65)
Avg Rating: 4.0000
Avg Difficulty: 0.1250
Total ratings: 16



ID: 4253105
Created: 12:56am, 30 Dec 2019
What is mean by binary trees are identical?
a) When the binary trees are structurally identical and have different value in the nodes.
*b) When the binary trees are structurally identical and have same value in the nodes.
c) When the binary trees are structurally different and have different value in the nodes.
d) When the binary trees are structurally different and have same value in the nodes.
e) All the binary trees are identical.
Explanation: Tree 1 Tree 2 10 10 2 4 2 41 5 6 8 1 5 6 8
Tags: Trees
Author: min (mjt65)
Avg Rating: 3.7500
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4253095
Created: 12:28am, 30 Dec 2019
Choose the correct steps of insertion sorting on the array below: 7 6 2 5 1
*a) 6 7 2 5 12 6 7 5 12 5 6 7 11 2 5 6 7
b) 2 7 6 5 12 6 7 5 12 5 6 7 11 2 5 6 7
c) 1 6 7 2 51 2 6 7 51 2 5 6 71 2 5 6 7
d) 7 6 2 1 57 6 1 2 57 1 2 5 61 2 5 6 7
e) 6 2 5 1 72 5 1 6 72 1 5 6 71 2 5 6 7
Explanation: In insertion sort, it should start sorting with first 2 elements and ignore the rest. After sorted the first 2 elements, focus on the first 3 elements and sort it. Then, continue with the next elements until the last.
Author: min (mjt65)
Avg Rating: 3.8900
Avg Difficulty: 0.5556
Total ratings: 9



ID: 4252978
Created: 6:48pm, 29 Dec 2019
What is the in-order traversal of the tree seen below? 8 / \ 6 9 / \ \ 2 7 15 /1
a) 8, 6, 9, 2, 7, 15, 1
b) 8, 6, 2, 1, 7, 9, 15
*c) 1, 2, 6, 7, 8, 15, 9
d) 1, 2, 7, 6, 15, 9, 8
e) None of the above
Explanation: A shows level order traversalB shows pre-order traversalC shows in-order traversalD shows post-order traversalSlides: Week7b-Trees1 slides 15, 22, 24 & 26
Tags: Trees
Author: royabouhamad (ra767)
Avg Rating: 3.1300
Avg Difficulty: 0.3750
Total ratings: 8
==> Comment 1: should be 1, 2, 6, 7, 8, 9, 15 rather than 1, 2, 6, 7, 8, 15, 9 I believe, typo? (by: stb37 [stb37])



ID: 4252808
Created: 10:59am, 29 Dec 2019
f(n) = 2, g(n) = 56 log(n), h(n) = 17n log(n)Which of the following statements is correct?
a) g is O(f), h is (g), f is (h)
*b) g is O(f), g is O(h), f is (h)
c) g is (f), f is O(g), f is (h)
d) f is (g), g is (h), f is O(h)
e) None of the above are correct
Explanation: Very similar but just different numbers to Q3 of the 2017-18 exam from two years ago.
Tags: Complexity
Author: stb37 (stb37)
Avg Rating: 4.8300
Avg Difficulty: 1.0833
Total ratings: 12
==> Comment 1: Which slides are these from? (by: felix [fjtm20])
====> Reply 1: These aren't from slides, they're from an exam two years ago. The relevant slides will be from the first couple of weeks of lectures on the big-Oh content.



ID: 4252672
Created: 8:15pm, 28 Dec 2019
When creating a new hashtable, why should we create it such that it has a prime number of buckets?I.e. we should only create hashtables w/ a prime number of buckets, for example 2021 buckets rather than 2000.
a) Harder for hackers to obtain access to our hashtable
*b) Ensures fewer collisions and more even distribution of values
c) Reduces the load factor of a hashtable
d) Guarantees the hashtable will not need to be resized
e) Easier for us to encrypt the data in our hashtable
Explanation: Using prime numbers ensures fewer collisions and more even distributions. slide 35 Week 10b
Tags: ADTs, Hashtables
Author: stb37 (stb37)
Avg Rating: 4.3800
Avg Difficulty: 0.7500
Total ratings: 8



ID: 4252659
Created: 6:59pm, 28 Dec 2019
What is the experimental time complexity of shell sort?
a)
b)
*c)
d)
Explanation: Lecture 11 - Sorting 2, previous year's lecturer's slides. Slide 8 (not on the slide but in the comments).The worst case is n^2, but there is no theoretical average case.
Tags: Sorting, Complexity
Author: sn545 (sn545)
Avg Rating: 3.6700
Avg Difficulty: 0.8889
Total ratings: 9



ID: 4252655
Created: 4:34pm, 28 Dec 2019
If N = 91, and k 1 mod 72, then mod N.What is the value of ?
a) x = 1
b) x = N - 1
*c) x = 14
d) x = mod N
e) x = mod N
Explanation: Rivest�Shamir�Adleman (RSA) Corollary from Lecture 11b.N =pq, where p and q are distinct primes (p=7,q=13)k 1 mod((p-1)(q-1)) = 1 mod(6.12) = 1 mod 72Hence the Corollary states = mod N, so our answer is C) x = 14
Tags: Cryptography
Author: stb37 (stb37)
Avg Rating: 4.6200
Avg Difficulty: 1.3846
Total ratings: 13



ID: 4252626
Created: 4:30pm, 28 Dec 2019
Here is a binary tree: 10 / \ 5 15 / / \2 11 20 / 18What would the preorder traversal be?
a) 2, 5, 11, 18, 20, 15, 10
b) 2, 5, 10, 11, 15, 18, 20
*c) 10, 5, 2, 15, 11, 20, 18
Explanation: Week7b-Trees1 Slide15A is postorder & B is inorder.
Tags: Trees
Author: spf29 (spf29)
Avg Rating: 3.7000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 4252504
Created: 9:36am, 28 Dec 2019
Take the input array: [49, 42, 67, 85, 23, 56, 34, 15]. After one iteration of h-sorting (the underlying operation in Shellsort) with h = 4, what is the resulting array?
a) [42, 34, 23, 15, 85, 67, 56, 49]
*b) [23, 42, 34, 15, 49, 56, 67, 85]
c) [15, 23, 34, 42, 49, 56, 67, 85]
d) [49, 23, 56, 34, 15, 67, 85, 42]
e) [49, 42, 23, 56, 34, 15, 67, 85]
Explanation: Applying h-sorting as specified in 2019 Week5a PowerPoint Slides 3-6 to the array.
Tags: Sorting
Author: agkolia (ag2214)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 9



ID: 4252334
Created: 6:46pm, 27 Dec 2019
Let there be a standard, closed hash table with linear probing from left to right, with slots from 0 to 10. Consider a hash function h(x) = x % 11. Inserting elements in order: 19, 30, 41, 1110, 9, 17, 108, 555, 125, 234, 5. What does the hash table look like at the end?
a) 1110, 9, 108, 5, 125, 555, 17, 234, 19, 30, 41
b) 19, 30, 41, 1110, 9, 17, 108, 555, 125, 234, 5
c) 5, 9, 17, 19, 30, 41, 108, 125, 234, 555, 1110
d) 234, 125, 555, 17, 5, 19, 30, 41, 1110, 9 ,108
*e) None of the above
Explanation: Week 10b, from slide 14. Answer should have been 1110, 9, 108, 234, 125, 555, 17, 5, 19, 30, 41.
Tags: Hashtables
Author: sarahpruden (sp2105)
Avg Rating: 4.0000
Avg Difficulty: 1.2000
Total ratings: 5



ID: 4252600
Created: 5:21pm, 27 Dec 2019
An closed hash table of length 10 is used with hash function h(k)=k%10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below.012 423 234 345 526 467 3389In what order where the values inserted?
a) 46, 42, 34, 52, 33, 23
b) 34, 46, 23, 52, 33, 42
*c) 46, 34, 42, 23, 52, 33
d) 42, 34, 23, 33, 46, 52
e) none of the above
Explanation: In the first one the numbers would be ordered in the following way 42 52 34 33 46 23in the second one, they would be ordered as 52 23 34 33 46 42and in the last one, 42 23 34 33 52 46only one that works is CBecause it's a closed hash table, when the key we want to put a number in is full, we have to look for the next empty one
Tags: Sorting, Applications, Hashtables
Author: cg853 (cg853)
Avg Rating: 4.6400
Avg Difficulty: 0.7143
Total ratings: 14



ID: 4252321
Created: 4:52pm, 27 Dec 2019
In a weighted, undirected graph if we apply Dijkstra's algorithm and then we add 1 to all the edge weights, does the shortest path remain the same?
a) yes
*b) no
Explanation: it depends on the number of nodes in the path. For example:a-b-c-fl-------l (a-f also connected), with a-b=5, b-c=2, c-f=3 and a-f=11the shortest path before adding 1 to all nodes is a-b-c-f (total of 10) but after adding 1 to all nodes it becomes a-f (12<13)
Tags: Applications, Graphs
Author: cg853 (cg853)
Avg Rating: 4.2900
Avg Difficulty: 1.2857
Total ratings: 7



ID: 4252053
Created: 5:40pm, 26 Dec 2019
Supposeis the adjacency matrix representing a graph. Which of the following is the matrix representing vertices that areedges apart, whereis a natural number?
a)
*b)
c)
d)
e)
Explanation: From 2019 Lecture 17 slides 10 and 11,would tell us the vertices that are 2 edges apart andwould tell us which vertices are 3 edges apart. Thereforetells us the vertices which areedges apart.
Tags: Graphs
Author: pm779 (pm779)
Avg Rating: 3.9300
Avg Difficulty: 0.2000
Total ratings: 15



ID: 4252007
Created: 3:32pm, 26 Dec 2019
You find yourself volunteering at the local library during the holidays to pad out your CV.Each day, people take books from shelves and put them back in the wrong place, out of order.You're asked to ensure that all books are sorted after the library closes each day, but this takesages and you need to get home to revise. You decide to use a sorting algorithm to speed things up.You make the following observations:There are thousands of books in the library but only a small number of them are misplaced each day.People tend to put books back close to where they were taken from.Given these observations, which of the following algorithms would be most efficient?
a) Merge sort.
b) Selection sort.
*c) Insertion sort.
d) Quick sort.
Explanation: The important observation is that the books are almost sorted since people put them back close to where they were taken from.The following complexities can be found in Week 7a, slide 5.Merge sort has complexity for all cases. It also requires working space which would make a mess of the library floor.Selection sort has complexity for all cases.Insertion sort has best-case complexity. The best case for insertion sort is when the list is almost sorted, which is one of our observations.Quick sort has complexity for all cases.
Tags: Sorting, Complexity
Author: jw3015 (jw3015)
Avg Rating: 4.3300
Avg Difficulty: 0.9167
Total ratings: 12



ID: 4251896
Created: 12:29am, 26 Dec 2019
What is the best case time complexity for the following code snippet:public static void sort(int[]array) { for(int i = 0; i<array.length-1; i++) { int min = array[I]; int minIndex = I; for(int j = i+1; j<array.length;j++) { if(array[j]<min) { min = array[j]; minIndex = j; } } int temp = array[minIndex]; array[minIndex] = array[I]; array[i] = temp; }}
*a) O(n2)
b) O(n)
c) O(n+m)
d) O(n*logm)
e) O(n*m)
Explanation: This code is the sorting algorithm for selection sort. The complexity of selection sort in the best, average and worst case isO(n2).For more information about selection sort: Week 4a-post 2019 slides 6 to 8.
Tags: Sorting, Complexity
Author: ail24 (ail24)
Avg Rating: 3.8800
Avg Difficulty: 0.7500
Total ratings: 8
==> Comment 1: Bit picky but you haven't actually defined n in your code... It's O((array.length-1)^2) (by: mo383 [mo383])



ID: 4251857
Created: 3:52pm, 25 Dec 2019
What is the best, average and worst case for a bubble sort?
a) Best:T(n)Average:T(n/2)Worst:T(n^2)
b) Best: T(n)Average: T(n)Worst: T(n^2)
*c) Best: T(n)Average: T(n^2)Worst: T(n^2)
d) Best: T(n^2)Average: T(n^2)Worst: T(n^2)
Explanation: Refer to Week 7a slide 5.
Tags: Sorting, Complexity
Author: rhodeman (jhr38)
Avg Rating: 4.0700
Avg Difficulty: 0.2143
Total ratings: 14



ID: 4251787
Created: 9:04pm, 24 Dec 2019
Consider the following adjacency matrix representing a directed graph. Using the methods in lecture 17 - Graphs 1, find the nodes that are exactly two edges apart.
a) Mary -> CamFred -> TomFred -> JoshTom -> CamJosh -> TomCam -> FredCam -> Josh
*b) Mary -> JoshMary -> FredFred -> CamFred -> TomTom -> JoshTom -> FredJosh -> CamCam -> JoshCam -> Tom
c) Mary -> TomMary -> JoshFred -> FredFred -> JoshFred -> CamTom -> TomTom -> JoshJosh -> FredJosh -> JoshCam -> TomCam -> Cam
d) Mary -> JoshMary -> FredMary -> TomFred -> TomTom -> JoshTom -> FredJosh -> TomCam -> JoshCam -> Tom
Explanation: Refer to lecture 17 - Graphs 1 Slide 11. You have to multiply the matrix by itself to find the adjacency matrix representing all nodes exactly two edges apart. Then, translate the matrix to the appropriate nodes. Answer A is the same graph as before. Answer C is nodes exactly three edges apart. Answer D is random nodes.
Tags: Graphs
Author: rhodeman (jhr38)
Avg Rating: 4.1400
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4251780
Created: 7:56pm, 24 Dec 2019
Below this paragraph is a diagram of tree; A / \ B C / \D EConsidering with the list of values, describe how 'Post-order' search / traversal is done by showing what the output would be for this search / traversal method:
a) A, B, D, E, C
b) D, B, E, A, C
*c) D, E, B, C, A
d) D, E, B, A, C
e) D, B, E, C, A
Explanation: D, E, B, C, A - This is 'Post order' traversalD, B, E, A, C - This is 'In order' traversalA, B, D, E, C - This is 'Pre order' traversalD,E,B,A,C and D,B,E,C,A are not any form of searching or traversal!
Tags: Trees
Author: awpk21 (awpk21)
Avg Rating: 4.0000
Avg Difficulty: 0.2857
Total ratings: 14



ID: 4251779
Created: 7:39pm, 24 Dec 2019
Regarding Hash Tables, which of the followingstatements is false?
a) The efficiency of a hash table can depend upon the type, how full the table is and how many collisions you have in the table
b) It takes on averageO(1) for the following operations to be performed in an Hash Table; inserting, finding and remove elements (If the load factor is limited)
*c) Open Hash Tableshandle collisions by inserting objects to the next sequentially available index.
d) Hash Tables need to be sized in accordance to limit the load factor
e) None of the above
Explanation: It takes on average O(1) for all operations to be performed in an Hash Table. It can take O(n) operations, if you were considering the worst case for a Hash Table.Open Hash Tables handles collisions by adding values to the end of the list. Closed Hash Tables handle collisions by inserting objects to the next sequentially available index.Hash Tables need to be sized for the load factor because it is calculated by the number of values you intend to add, divided by the number of buckets in the array.
Tags: Hashtables
Author: awpk21 (awpk21)
Avg Rating: 3.6700
Avg Difficulty: 0.8333
Total ratings: 6
==> Comment 1: For answer B you might want to specify that it's not a closed hash table, with regards to the removing elements part. (by: sarahpruden [sp2105])



ID: 4251737
Created: 1:43pm, 24 Dec 2019
Consider a list and the operations that can be performed on it. If you wanted to retrieve a value'get' from an index/node in a list, which of the following does not take an average of O(n) operations?
*a) An Array List
b) A Linked List
c) Linked List and Array List
d) Neither
Explanation: An Array List does not take O(n) operations on average. This is given to other list structures like aLinked List that can consist of this Big O. On the other hand, anArray List has an average case of O(1) operations.This is apparent as the Array List would simply have to search up the index that is being requested to retrieve the value. Compared to the Linked List, this has to search the index that would contain another index in a node, thus following this path 'n' times to eventually retrieve the value from a node in the list, wherever in the list that may be.
Augmented explanation 1: Reference:2019 Week 3a - Slide 152019 Week 3b - Slide 10 (by: awpk21 [awpk21])
Tags: Lists, Search
Author: awpk21 (awpk21)
Avg Rating: 3.8000
Avg Difficulty: 0.4000
Total ratings: 5



ID: 4251588
Created: 7:05pm, 23 Dec 2019
Which of these statements is true of passwords?
a) Always store passwords as they are when the user types them.
*b) Store the hash of a password instead of the password itself.
c) When hashing passwords your own version of a hash function is always best to use
d) MD5 is a more secure hashing algorithm than SHA-3
Explanation: A is false because you should never store passwords in clear as it makes it vulnerable to attacks.B is true because storing the hash means even if the database is hacked the hacker can't see the actual password and is very hard to reverse engineerC is false because your own version wont be as secure as the ones that have been tested.D is false as MD5 is an algorithm that was popular in 1990 and has vulnerabilities and SHA-3 is currently the most secure one
Tags: Cryptography, Hashtables
Author: mn585 (mn585)
Avg Rating: 4.0000
Avg Difficulty: 0.5385
Total ratings: 13



ID: 4251579
Created: 6:40pm, 23 Dec 2019
What is the best time complexity for sorting a sorted list using selection sort?
a) O(n)
b) O(Log n)
*c) O(n2)
d) O(1)
e) O(n log n)
Explanation: Selection sort has worst, best and average time complexity of O(n2) because it runs through the whole list multiple times whether the list is sorted or not
Tags: Lists, Sorting
Author: mn585 (mn585)
Avg Rating: 3.6700
Avg Difficulty: 0.2222
Total ratings: 9



ID: 4251573
Created: 6:27pm, 23 Dec 2019
What is the equation to calculate the average number of steps required for Closed hashing.
*a) = 1/2(1+1/(1-L))
b) = 1 + L/2
Explanation: for explanation take a look at "2019 week10b slide 31"
Tags: Hashtables
Author: mn585 (mn585)
Avg Rating: 4.0000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4251553
Created: 4:50pm, 23 Dec 2019
Let p = 5. What is 29equivalent to mod p? Hint: see lecture 11b 2019
*a)
b)
c)
Explanation: This is a result of Fermat's Little Theorem (slide 12 of lecture 11b 2019). In this case we have p=5, x=2, k=9.
Tags: Cryptography
Author: md825 (md825)
Avg Rating: 3.9200
Avg Difficulty: 0.5833
Total ratings: 12



ID: 4251548
Created: 4:31pm, 23 Dec 2019
What is the average case time complexity of insertion sort?
a)
*b)
c)
d)
e)
Explanation: Best case for insertion sort is, however worst case and average case is.
Tags: Sorting
Author: md825 (md825)
Avg Rating: 3.7100
Avg Difficulty: 0.1429
Total ratings: 14



ID: 4251544
Created: 4:23pm, 23 Dec 2019
Which of the following sorting algorithms is stable?
*a) Merge sort
b) Heap sort
c) Shell sort
Explanation: See lecture notes on sorting. A sorting algorithm is stable if equal items retain their relative position after sorting.
Tags: Sorting
Author: md825 (md825)
Avg Rating: 4.3800
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4251463
Created: 11:38am, 23 Dec 2019
A company wants to store 10,000 values in a closed hash table using linear probing to find values.To be fast enough, they require values to be found in no more than three steps of linear probing on average.What is the minimum number of buckets that should be used for the closed hash table for this condition to be met?
a) 10,000 buckets
*b) 12,500 buckets
c) 15,000 buckets
d) 17,500 buckets
e) 20,000 buckets
Explanation: We can calculate the average number of steps linear probing will take based on the load factor using this expression: (2019 week 10b, slide 31)Since we know the average number of steps, three, we can rearrange this function to find the required load factor : where n is the average number of steps. Evaluating this gives .The company wants to insert 10,000 values, so we can work out how big the hash table should be using .
Tags: ADTs, Hashtables
Author: jw3015 (jw3015)
Avg Rating: 4.4000
Avg Difficulty: 1.4000
Total ratings: 10



ID: 4251360
Created: 1:37am, 23 Dec 2019
Consider a Closed Hash Table with a Fixed size. Which of the following approaches is NOT a viable way of deleting entries?(Sorry CL.)
a) Remove the desired elementGo to the next bucketIf the bucket is empty, quitIf the bucket is full, delete the element in that bucket and re-add it to the hash table using the normal means. The item must be removed before re-adding, because it is likely that the item could be added back into its original spot.Repeat step 2.
*b) Remove the desired elementFill the bucket with a "Dummy" element that has a special "empty" value.When searching/inserting, skip over this element as if it was a real element.
c) Remove the desired elementFlag the empty bucket.When searching, skip over flagged bucketsWhen inserting treat flagged elements like empty buckets and remove flag at the end of insertion
d) In the case of removing many items from the hash table.Create a new Hash table with only the elements you wish to keep, ommiting the ones you wish to delete.
Explanation: In a Fixed size hash table, if you chose the method outlined by B, you will run out of space as spaces will be taken up by the Dummy elements.The sildes in 10b said CL doesn't recommend looking into this but JHD was going to more in Week11. I didn't go to Week 11 and can't see anything about it in the notes. Please let comment if you think it is an irrelevent question. Thanks!
Tags: Hashtables
Author: jth47@bath.ac.uk (jth47)
Avg Rating: 3.8000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4251356
Created: 12:48am, 23 Dec 2019
which tree traversal does the following order of operations:1_ Process the node in the left sub-tree2_ Process the node in the right sub-tree3_ Process the current node
a) In-Order Traversal
*b) Post-Order Traversal
c) Pre-Order Traversal
d) Level order traversal
Explanation: For more information check week 7b slides
Tags: Trees
Author: ats45 (ats45)
Avg Rating: 3.5700
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4251339
Created: 10:54pm, 22 Dec 2019
Which of the following is a False statement for Shell Sort?
a) It is based on H-sort
b) The last step is always a Bubble sort
c) Worst case worst gap sequence complexity is O(n^2)
*d) Shell sort is a "stable" sort.
Explanation: See Week 5a powerpoint.Shell sort is not stable as elements can "jump" over elements with the same value
Tags: Lists, Sorting, Complexity
Author: jth47@bath.ac.uk (jth47)
Avg Rating: 4.2200
Avg Difficulty: 0.6667
Total ratings: 9



ID: 4251331
Created: 9:44pm, 22 Dec 2019
Which of the following inputs makes mergesort in ascending order perform the largest numberof comparisons?
a) 2,1,4,3
b) 1,2,3,4
c) 3,4,1,2
*d) 3,1,2,4
Explanation: D -Takes one more comparison compared to the rest.
Tags: Lists, Sorting, Complexity
Author: jth47@bath.ac.uk (jth47)
Avg Rating: 3.6000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4251292
Created: 6:03pm, 22 Dec 2019
Consider the following AVL tree:After inserting the value 7, what sequence of rotations would be required to rebalance the tree?(The subtrees at which rotations are applied are left unspecified)
a) Left rotation.
b) Right rotation.
*c) A left rotation, then a right rotation.
d) A right rotation, then a left rotation.
e) No rotations required.
Explanation: The value 7 would be inserted as 6's right child. This causes 8 to have a balance factor of -2, meaning its left subtree is two nodes higher than its right subtree (which is empty). The 8 subtree must be rebalanced.We cannot perform any left rotations at node 8 because it has no right child to take its place.A right rotation at 8 gives the following tree, which is symmetrically as unbalanced as before:To properly balance the tree, we must first perform a left rotation at node 6 followed by a right rotation at node 8, as shown in the following two trees:The final tree is now balanced (node 4 has a balance factor of 1, node 7 has a balance factor of 0).
Tags: ADTs, Trees
Author: jw3015 (jw3015)
Avg Rating: 3.8600
Avg Difficulty: 0.8571
Total ratings: 7



ID: 4251262
Created: 3:06pm, 22 Dec 2019
Let p and q be primes such that p*q = N and p != q.If (p-1)(q-1) = 36What is N?
a) N = 3
b) N = 56
*c) N = 57
d) N = 70
e) N = 30
Explanation: p = 3 and q = 19 so 3*19 = 57
Tags: Cryptography
Author: djk49 (djk49)
Avg Rating: 4.0900
Avg Difficulty: 0.9091
Total ratings: 11
==> Comment 1: if p=2, q=37 then p and q are distinct primes with (p-1)(q-1)=36, so N could also be 74 (by: jwb59 [jwb59])



ID: 4251260
Created: 2:34pm, 22 Dec 2019
This adjacency matrix shows who is friends with who.Which node has the most friends?
*a) 1
b) 2
c) 3
d) 4
e) None
Explanation: Node 1: has 2 friendsNode 2: has 1 friendNode 3: has 0 friendsNode 4: has 1 friend
Tags: ADTs, Applications, Graphs
Author: djk49 (djk49)
Avg Rating: 3.4300
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4251258
Created: 2:15pm, 22 Dec 2019
What doesSystem.currentTimeMillis() measure?
a) The number of secondssince 1 Jan 1970.
*b) The number of milliseconds since 1 Jan 1970.
c) The number of nanoseconds in this Java Virtual Machine since whenever.
d) The number of seconds since 1 Jan 2000.
e) The number of milliseconds since 1 Jan 2000.
Explanation: Solution: Week 1(b) Slide 2 2019
Tags: Applications
Author: djk49 (djk49)
Avg Rating: 3.7800
Avg Difficulty: 0.3333
Total ratings: 9



ID: 4251221
Created: 11:58am, 22 Dec 2019
What is 413 mod 7?
a) 0
b) 1
c) 2
*d) 4
e) 5
Explanation: Application of Fermat's Little Theorem 2019 Lectures - Week 11b - Slide 12. p = 7, k = 1 mod 6, x = 4.
Tags: Cryptography
Author: rossthomas (rt578)
Avg Rating: 3.8200
Avg Difficulty: 1.3636
Total ratings: 22



ID: 4251063
Created: 9:03pm, 21 Dec 2019
Which is a better way to represent a graph (in terms of memory storage) if you had lots of edges but few vertices?
a) Adjacency list
*b) Adjacency matrix
Explanation: Powerpoint: "graphs1TF" - Slide 17
Tags: Graphs
Author: lm889 (lm889)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 6



ID: 4251062
Created: 8:54pm, 21 Dec 2019
A certain quadratic time algorithm uses 4 elementary operations to process an input of size 10.What is the most likely number of elementary operations it will use if given an input of size100?
a) 40
*b) 400
c) 4000
d) 4
Explanation: Since the time algorithm is quadratic and you have increase the input size by 10. The number of elemtary operations is multiplied by 10^2 = 100. Thus, 4 * 100 = 400.
Tags: Complexity
Author: lm889 (lm889)
Avg Rating: 4.1700
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4251061
Created: 8:51pm, 21 Dec 2019
An algorithm has runtime T(n)=n^2+ n^3+ 55n+108 + 0.0025n^5 for input of size n. Whatis the asymptotic time complexity of this algorithm?
a) O(n^4)
*b) ?(n^5)
c) O(n^2)
d) ?(n^3)
Explanation: The greatest power in the time complexity is n^5.
Tags: Complexity
Author: lm889 (lm889)
Avg Rating: 3.7000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 4251060
Created: 8:44pm, 21 Dec 2019
What is the maximum number of children any node in a binary tree can have?
a) 0
b) 1
*c) 2
d) 3
e) As many as you want
Tags: Trees
Author: lm889 (lm889)
Avg Rating: 3.2900
Avg Difficulty: 0.0000
Total ratings: 7



ID: 4251057
Created: 8:27pm, 21 Dec 2019
What are the leaves of a perfectly balanced binary tree when you enter numbers in order: 10,8,6,2,11,100,7
a) 2,6,11,100
b) 2,7,11,100
c) 2,8,10,100
*d) 2,7,10,100
Explanation: Root = 8Children of 8 = 6 11Children of 6 = 2 7Children of 11 = 10 100Therefore leaves are 2,7,10,100
Tags: Trees
Author: lm889 (lm889)
Avg Rating: 3.7500
Avg Difficulty: 0.7500
Total ratings: 8
==> Comment 1: This is wrong. 10 is not a leaf. (by: stb37 [stb37])
====> Reply 1: Yes it is.
====> Reply 2: Apologies, when you said in order I thought you meant to produce the tree with the root as 10.



ID: 4251032
Created: 7:37pm, 21 Dec 2019
Consider the following skip list. If we were to insert a node with value "Cameron" which has 4 lanes and insert a node with value "Diego" which has 2 lanes. What does the skip list look like now?
a)
*b)
c)
d)
Explanation: Refer to lecture week 3b slide 17. "Cameron" comes between Barry and Derek alphabetically and has 4 lanes so must have four elements in its pointer array. "Diego" comes between Derek and Edgar alphabetically and has two lanes so must have two elements in its pointer array. The number of lanes for other nodes must stay the same.
Tags: Lists
Author: rhodeman (jhr38)
Avg Rating: 3.7100
Avg Difficulty: 1.0000
Total ratings: 7



ID: 4251027
Created: 7:30pm, 21 Dec 2019
Suppose you are creating a new social media platform that allows people to create a single account for themself. Then they can add any people that they are friends with who are also using the platform to their list of friends.As the platform is still fairly new, the number of people using the platform is significantly less than the total number of friends assigned between people.You want to represent a graph showing all people on the platform (as vertices on the graph) and the friends each person has (as the edges on the graph).Is it better to represent this graph using an adjacency matrix or an adjacency list?
*a) Adjacency Matrix
b) Adjacency List
c) Neither one is better than the other
Explanation: An adjacency matrix is better if you have a graph with lots of edges and fewer vertices, while an adjacency list is better if you have a graph with lots of vertices and fewer edges.
Tags: Graphs
Author: connor_crees (cic41)
Avg Rating: 3.8000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4251021
Created: 7:15pm, 21 Dec 2019
Given a large data set to sort, which of the following sorting algorithms would be the best to use based on its average time complexity?
a) Selection Sort
b) Insertion Sort
*c) Quick Sort
Explanation: Average time complexities of the algorithms:Selection Sort -?(n2)Insertion Sort - ?(n2)Quick Sort -?(n logn)
Tags: Sorting, Complexity
Author: connor_crees (cic41)
Avg Rating: 3.7500
Avg Difficulty: 0.0000
Total ratings: 8



ID: 4251019
Created: 6:48pm, 21 Dec 2019
Suppose you have an AVL tree storing elements in alphabetical order.Out of the following binary tree traversals, which will output the tree elements in alphabetical order?
a) Pre-order traversal
*b) In-order traversal
c) Post-order traversal
d) Level-order/Breadth-first traversal
Explanation: For each node in the tree, in-order traversal first processes the nodes in the left sub-tree (less than the current node), then the current node, then finally the nodes in the right sub-tree (greater than the current node).
Tags: Trees
Author: connor_crees (cic41)
Avg Rating: 3.6700
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4251012
Created: 6:03pm, 21 Dec 2019
Which matrix represents the nodes which can be traversed to in 2 steps on the following graph?
*a)
b)
c)
d)
Explanation: C is the adjacency matrix. Multiplying it by itself gives those nodes that are 2 paths apart (answer A), with the number '2' representing 2 different ways of getting from one node to another in 2 steps.B shows the nodes 3 steps apart (multiplying the adjacency matrix by itself 3 times gives this result)D shows the correct matrix but with the '2's replaced by '1's
Tags: Graphs
Author: moi21 (moi21)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4251007
Created: 5:10pm, 21 Dec 2019
Place the following algorithms in order of most to least efficient when dealing with around 10,000 items:A: Bubble sortB: Quick sortC: Bucket sortConsider the average case complexities.
a) ABC
*b) CBA
c) BAC
d) ACB
e) BCA
Explanation: Bubble sort: O(n2)Quick sort: O(nlogn)Bucket sort: O(n + k), where k is the number of bucketsInterestingly, will much more data, 'clustering' can occur, meaning that many items are put into the same bucket and thus can take longer, hence the specified amount of data.https://smartbear.com/blog/develop/bucket-sort-vs-quick-sort-which-is-faster-aqtime-b/ is an interesting read :)
Tags: Sorting, Complexity
Author: moi21 (moi21)
Avg Rating: 3.2000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4251006
Created: 4:48pm, 21 Dec 2019
Which of these lines best represents the time complexity of a binary search algorithm?
a) Graph A
b) Graph B
*c) Graph C
Explanation: A: ExponentialB: LinearC: LogarithmicA binary search is logarithmic, as the number of nodes to be searched is cut roughly in half with each pass.
Tags: Trees, Complexity
Author: moi21 (moi21)
Avg Rating: 4.3300
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4251004
Created: 4:38pm, 21 Dec 2019
What is the time complexity of the following code:for (int i=1; i<n; i++) for (int j=1; j<2*n; j*2) for (int k=1; j<n+1; k++) System.out.println("hello world");for (int l=1; l<10; l++) for (int m=1; m<n; m++) System.out.println("HELLO WORLD");
a)
b)
c)
d)
*e)
Explanation: n*n for lines 1 and 3 (constants don't affect complexity)*logn for line 2 (j*2)+n for line 6line 5 doesnt affect the complexity
Tags: Complexity
Author: cg853 (cg853)
Avg Rating: 3.6700
Avg Difficulty: 1.1667
Total ratings: 6
==> Comment 1: Since lines 5 and 6 aren't in the first for loop, aren't they treated as a seperate function? Hence the time complexity is just nlog^2n? Using bog oh rule that you just use the max time complexity of the two functions that you are using? (by: stb37 [stb37])
====> Reply 1: why would it be nlog^2n instead of n^2*logn? you're right for the second part, the +n from line 6 doesn't affect the complexity because first triple for loop is very slow (I only removed constants)
====> Reply 2: Sorry this is a typo by me. I meant n^2 log n as you said, apologies.



ID: 4251003
Created: 4:34pm, 21 Dec 2019
Here is some code given in lectures:What line will need to go at X to print the time taken for MyClass.m() to run?
a) System.out.println(end);
*b) System.out.println(end-start);
c) System.out.println(start)
d) System.nanoTime();
e) System.out.println(System.nanoTime());
Explanation: See slide 4 week 1b
Tags: Applications, Complexity
Author: moi21 (moi21)
Avg Rating: 3.1400
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4251002
Created: 4:27pm, 21 Dec 2019
What is semantic application integration?
a) Allows users to find items in a semi-structured body of information using conceptual matches rather than textual matches
b) Complex information is captured in a conceptual structure and presented in work context
*c) Allows multiple applications to access multiple data sources based on the meaning of the data
Explanation: A: Concept-based searchB: Context-aware case entry and retrievalC: Semantic application integration
Tags: Graphs
Author: moi21 (moi21)
Avg Rating: 2.6000
Avg Difficulty: 1.4000
Total ratings: 5



ID: 4251001
Created: 4:21pm, 21 Dec 2019
Is the following tree a valid AVL tree?
a) Yes
*b) No
Explanation: Although the root node is balanced, its children are not.
Tags: Trees
Author: moi21 (moi21)
Avg Rating: 3.4000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 4250999
Created: 4:10pm, 21 Dec 2019
Given the incomplete Java code for the classes DoublyLinkedList and ListNode2:class ListNode2 { Object element; ListNode2 prev = null; ListNode2 next = null;ListNode2(Object e, ListNode2 p, ListNode2 n) { element = e; prev = p; next = n;}}class DoublyLinkedList { private ListNode2 head = null; private ListNode2 tail = null; private int n = 0;//other methods from DoublyLinkedList commented outpublic void insert(Object o, int i) { if (i < 0 || i > n) { System.out.println("i value out of bounds"); }ListNode2 node = head; for (int j = 0; j < i - 1; j++) { node = node.next; }node.next = new ListNode2(o, node, node.next);Xif (i == n) { tail = node.next;}n++;}The insert method is used to insert object o in doubly linked list at ith position as seen in coursework 2. Which code must go at the place marked with X for the method to work correctly?
*a) if (node.next.next != null) {node.next.next.prev=node.next;}
b) if (node.next.next != null) {node.next.prev=node.next;}
c) if (node.next.prev != null) {node.next.next.prev=node.next;}
d) nothing
Explanation: We need to make sur node.next.next is not null in order to adjust node.next.next.prev, making the list go both ways
Tags: ADTs, Lists
Author: cg853 (cg853)
Avg Rating: 3.8600
Avg Difficulty: 1.2143
Total ratings: 14



ID: 4254122
Created: 2:52pm, 21 Dec 2019
Given the following numbers 58, 4, 102, 13, 27, 99, 1, arrange them in a complete balanced binary search tree. Which of the following is the preordered traversal of the tree?
*a) 27,4,1,13,99,58,102
b) 1,4,13,27,58,99,102
c) 27,4,99,1,13,58,102
d) 27,99,102,58,4,13,1
e) none of the above
Explanation: pre-order traversal consists of processing the current node's value out, then processing to nodes in left subtree and then processing the nodes in the right subtree.
Tags: Sorting, Applications, Trees
Author: cg853 (cg853)
Avg Rating: 4.6700
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4250979
Created: 2:41pm, 21 Dec 2019
Which of the following statements from a to d about array lists is FALSE? If none of them is false, choose option e.
a) There exists an index i anywhere in the array list such that removing at that index takes a complexity of .
*b) The worst case to insert an element anywhere in a non-full array list without resizing takes a time complexity of O(log n).
c) The worst case of removing an element from the array list is always slower than to get an element in the same list.
d) Array lists are an example of ADT.
e) None of the statements above is false.
Explanation: The worst case to insertan element anywhere in a non-full array list without resizing takes .
Tags: ADTs, Lists, Complexity
Author: cg853 (cg853)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4250972
Created: 2:11pm, 21 Dec 2019
What is the worst case run time complexity of selection sort?
a) O(n^3)
b) O(nlog(n^2))
c) O(nlog(n))
*d) O(n^2)
e) O(nlog(log(log(n^5))))
Explanation: All cases of selection sort are O(n^2)
Tags: Sorting
Author: bu220 (bu220)
Avg Rating: 3.7500
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4250971
Created: 2:07pm, 21 Dec 2019
In a real world application when would you use a linked list over an array list?
a) When every you are going to be inserting into the middle of the list no matter the size of the list
b) When every you are going to be inserting into the middle of the list and the list is small
*c) When every you are going to be inserting into the middle of the list and the list is large
d) If the list requires frequent access to items in the centre of the list
e) When the order of items in the list does not matter
Explanation: For most applications an array list will be the way to go even if insertion into the centre of the list is frequent. This is because a lot of programming languages have blazing fast array copying operations such as java's System.arraycopy. This means the overhead from iteration over the list in a linked list is not outweighed by cost of copying the array in an array list for most cases. For this reason a list has to be large before any performance benefit can be noticed when using a linked list over an array list and inserting into the middle.
Tags: ADTs
Author: bu220 (bu220)
Avg Rating: 3.2000
Avg Difficulty: 1.0000
Total ratings: 5



ID: 4250969
Created: 1:51pm, 21 Dec 2019
Finish the sentence correctly:An AVL tree is a ...
*a) a tree which is balanced and is a height balanced tree
b) immutable object once initialised
c) a tree which is unbalanced and is a height balanced tree
d) a tree with each node having atmost 3 children
Explanation: An AVL tree is a self balancing binary tree with height difference of at most 1.
Tags: Trees
Author: bu220 (bu220)
Avg Rating: 3.4400
Avg Difficulty: 0.1111
Total ratings: 9



ID: 4250803
Created: 4:44pm, 20 Dec 2019
Which of the following statements about linked lists is true?
*a) Linked list lets you add an element at the start of the array with cost ?(1)
b) inserting elements anywhere between the head and the tail of the linked list requires every element to be shifted by 1 on the right
c) linked lists support random access for every element with index i
d) removing elements anywhere between the head and the tail of the linked list requires every element to be shifted by 1 on the left
Explanation: For reference check week 3b slides.
Tags: ADTs, Lists
Author: ats45 (ats45)
Avg Rating: 4.0900
Avg Difficulty: 0.3636
Total ratings: 11



ID: 4250837
Created: 4:34pm, 20 Dec 2019
Which of the following statement is not true?
a) If an array has been recently sorted, insertion sort will have ?(n)
*b) Stooge sort is faster than Merge sort
c) Selection sort is not a stable sorting algorithm
d) If an array has been already sorted and the pivot chosen is the first element of the array, Quick sort will have?(n^2)
e) Whatever is the case, the runtime of selection sort will be?(n^2)
Explanation: For more information, check week 4b/8 and the other slides regarding sorting
Tags: Sorting
Author: ats45 (ats45)
Avg Rating: 4.0000
Avg Difficulty: 0.6000
Total ratings: 5



ID: 4250734
Created: 1:04pm, 20 Dec 2019
In the worst case scenario, what is the big-o of insertion sort?
a) T(N^3)
b) T(N)
*c) T(N^2)
d) T(NlogN)
Explanation: Refer to week 4a ppt slide 16 for more info
Tags: Sorting, Complexity
Author: lm2066 (lm2066)
Avg Rating: 4.0000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 4250468
Created: 9:18pm, 19 Dec 2019
Consider the following binary tree, which of the following traversal is true? 15 / \ 7 19 / \ / \ 6 8 16 21
a) Preorder: 6,7,8, 15, 16,19,21.Postorder: 15,7,6,8,19,16,21.Inorder: 6,8,7,16,21,19,15.
b) Preorder: 15,7,6,8,19,16,21.Postorder: 6,7,8, 15, 16,19,21.Inorder: 6,8,7,16,21,19,15.
c) Preorder: 6,8,7,16,21,19,15.Postorder: 15,7,6,8,19,16,21.Inorder: 6,7,8, 15, 16,19,21.
*d) Preorder: 15,7,6,8,19,16,21.Postorder: 6,8,7,16,21,19,15.Inorder: 6,7,8, 15, 16,19,21.
e) None of the above.
Explanation: Lecture note week7b trees orhttps://www.tutorialspoint.com/data_structures_algorithms/tree_traversal.htm
Tags: Trees
Author: yjc51 (yjc51)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 6



ID: 4250450
Created: 8:40pm, 19 Dec 2019
Linked List vs Array List comparison.Which of the following is false?
a) It is faster to remove an item from the middle of a linked list than from the middle of an array.
b) It is faster to insert a new item at the front of a linked list than an array.
c) It is faster to get to the 700th item in an array than linked list.
*d) None of the above is wrong.
Explanation: The answer is D because none of the above is wrong.A is correct because we can just change the reference of the nodes to remove the node containing the item to be removed in a few steps, while we have to remove the item in an array, then shift all the following items left one slot.B is correct because we can once again insert a new item at the front of the linked list by changing the references to the items, while we have to shift all the n items in an array right one slot.C is correct because we can get to any item in an array in 1 step, while we have to pass through 699th nodes to reach the 700th node in a list.
Tags: Lists
Author: yjc51 (yjc51)
Avg Rating: 3.8800
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4250399
Created: 7:00pm, 19 Dec 2019
Find the Bound Challenge! (What is the average run time of the function below)int count = 0;void foo(){ for (int i = 0; i <n; i++) for(int j = 0; j < 100*n; j++) for(int k = 0; k < n*m; k++) count++}
*a)
b)
c)
d)
e) None of the above.
Explanation: Lecture noteWeek2b-Powerpointon moodle page 22,23. (Find the Bound challenge)First for loop has runtime nSecond for loop has runtime 100nThird for loop has runtime n*mHence we get the average time complexity
Tags: Complexity
Author: yjc51 (yjc51)
Avg Rating: 4.0000
Avg Difficulty: 0.6667
Total ratings: 3



ID: 4250380
Created: 6:31pm, 19 Dec 2019
A user on Stack Overflow has asked you to fudge his coursework to work.His assignment is to make a class, with a method that reverses an array.He gave you the incomplete code in Java.Which code would you suggest him to put instead of a? for the method to work?
a)
*b)
c)
d)
Explanation: Function reverse takes the array as a parameter.Inside the function, a new array (size of the original array) is initialised. The original array is iterated from the first element (i = 0) and each element of it(i < n; i++) is placed in the new array, starting from the back.
Tags: Lists, Applications
Author: mr791 (mr791)
Avg Rating: 4.5600
Avg Difficulty: 0.8889
Total ratings: 9



ID: 4250265
Created: 4:06pm, 19 Dec 2019
Honda vs Lamborghini pt 4if you haven't answered part 1-3 of this question please do so first:part 1: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213part 2: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250257part 3: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250259Having received information and payment from a client about a new target the hitman must now attempt to kill his target. The target is having a press conference about their recent success. Looking at his route (lengths given in minutes) and using Djikstra's shortest path algorithm, what is the minimum time it will take him to get from his home at C to the conference at E?
a) 8
b) 9
*c) 5
d) 6
e) 4
Explanation: The shortest path is C>A>B>E so the minimum time needed is 5 minutes
Tags: Applications
Author: dpah20 (dpah20)
Avg Rating: 4.0000
Avg Difficulty: 0.0000
Total ratings: 4



ID: 4250259
Created: 3:58pm, 19 Dec 2019
Honda vs Lamborghini pt 3if you havent answered part 1 or two of this question please do so first:part 1: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213part 2: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250257Having decided on the hitman with the best value for money they now need to communicate with him. But they need to use a cypher to do so. They decide to use a Ceasar shift with key 8. Code the following message to send to the hitman:CEO OF HONDA
a) NPZ ZQ SZYOL
b) KBW WN PWAWL
*c) KMW WN PWVLI
d) KMW HY AHGWT
Explanation: The Ceasar shift cypher shifts each letter by a key. In this examble the key is 8 so A -> I and B -> J and so on.
Tags: Cryptography
Author: dpah20 (dpah20)
Avg Rating: 4.6300
Avg Difficulty: 0.2500
Total ratings: 8



ID: 4250257
Created: 3:53pm, 19 Dec 2019
Honda Vs Lamborghini pt 2if you haven't answered part 1 of this question please use the following linkhttps://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213As the year draws to a close, Honda is set to beat Lamborghini in profits due to their new method of storing ID numbers of vehicles! This is quite embarrassing for Lamborghini so the board of directors meet to discuss how they can beat Honda. After their meeting, they come to the conclusion they have no other choice but to assassinate the CEO. They download the TOR browser and navigate the dark web to a hitman site. Each hitman listed has a price, a time-frame and a success rate. They decide on a formula to decide which hitman has the best value and then sort them using the following steps:1) pick the first hitman2) Go along the list and put all the worse hitmen in one group and the better in another group3) In this better group they repeat the process. They then repeat this process in the worse group4) They then concatenate the two sorted groups into one sorted listWhat algorithm did they use?
a) Merge Sort
b) Bubble Sort
*c) Quick Sort
d) Insertion Sort
Explanation: Quicksort chooses a pivot (in this case the first element) and then categorises the rest of the elements into two groups of worse and better than the pivot. This method is called recursively on the two groups until you have two sorted lists which can then be concatenated
Tags: Sorting
Author: dpah20 (dpah20)
Avg Rating: 4.3800
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4250253
Created: 3:46pm, 19 Dec 2019
Which of the following sorting algorithms has its best case time complexity (for n elements), to be the same as the time complexity of tree traversal methods (for a tree of n nodes)?
a) Quick sort
b) Merge sort
c) Selection sort
*d) Insertion sort
Explanation: See 2019 weeks 7a at page 5 for reference to all sorting algorithms, along with their average and worst case scenarios for time complexity as well.Moodle: "Week7a.pdf"See 2019 Week 7b at page 29 for the big-Oh of traversals' reference.Moodle: "Week7b-Trees1.pptx"
Author: quadristavrioverde (sk2285)
Avg Rating: 4.0000
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4250241
Created: 3:24pm, 19 Dec 2019
Suppose you have the following AVL tree:Select the correct order in which the following 3 tree traversal ways are displayed: i) A > B > D > E > C > F > Gii) D > B > E > A > F > C > Giii) D > E > B > F > G > C > A
a) i) in-orderii) pre-orderiii) post-order
b) i) post-orderii) in-orderiii) pre-order
*c) i) pre-orderii) in-orderiii) post-order
d) i) pre-orderii) level-orderiii) post-order
e) i) post-orderii) level-orderiii) pre-order
Explanation: The definitions for each traversal order method are:Pre-order:1. Process the current node.2. Process the nodes in the left  sub-tree.3. Process the nodes in the right  sub-tree.In-order:1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub-tree.Post-order:1. Process the nodes in the left sub-tree.2. Process the nodes in the right sub-tree.3. Process the current node.For further information regarding Binary Tree Traversals see 2019 Week7b between pages 14-28See .pptx file from moodle: "Week7b-Trees1.pptx"
Tags: Trees
Author: quadristavrioverde (sk2285)
Avg Rating: 4.3100
Avg Difficulty: 0.2308
Total ratings: 13



ID: 4250215
Created: 2:42pm, 19 Dec 2019
In data structures and algorithms, we use various sorting algorithms to sorta data. Depending on various factors, we might choose a different algorithm.Which of the following, appropriately and formally defines the term"Sorting" for a sorting algorithm?
a) It is the process of replacing items with other items, depending on whether they are smaller or bigger in value.
*b) It is the process of ordering a bunch of items based on one (or more) rules, subject to one (or more) constraints.
c) It is the process of re-ordering items one by one in a list, subject to one (or more) constraints.
d) It is the process of ordering a bunch of items based on one (or more) rules.
Explanation: The definition of Sorting is given in the set of slides 2019 week4b on page 2. It is followed by the definitions of items, rules and constraints, individually.See PDF file on moodle: "Week4b-post.pdf"
Tags: Sorting
Author: quadristavrioverde (sk2285)
Avg Rating: 4.0000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 4250213
Created: 2:40pm, 19 Dec 2019
Honda are looking to overtake Lamborghini in net profit next year. They hired a specialist to take a look at their company and see where they can save time and money. Each vehicle they make is equipped with a 10 digit ID. They found that they use a linear search algorithm to search through an unsorted list of vehicle IDs when shipping these vehicles to the retailers. What data structure should they use to store the vehicle IDs in order to reduce time and processing power needed to find each ID and as a result beat the slow lamborghinis?
a) Array
b) Adjacency Matrix
c) Heap
d) AVL Tree
*e) Hash Table
Explanation: A Hash table uses an algorithm to provide each ID with a new key. The ID is then put into the cell corresponding to this key. This means that it takes T(1) time to find each ID rather than T(n)
Tags: Search
Author: dpah20 (dpah20)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 6



ID: 4250189
Created: 10:16am, 19 Dec 2019
An AVL Tree is made containing 35 nodes. What is the minimum height of the tree
a) 33
b) 5
*c) 6
d) 24
e) no minimum
Explanation: As all nodes have maximum of two child nodes each. The minimum height of the tree is (log2(33)) rounded up which is 6
Tags: Trees
Author: dpah20 (dpah20)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4249780
Created: 9:02pm, 18 Dec 2019
The run times for a sorting algorithm, for a list size and time taken in seconds , are as follows: = 420, = 69 = 840, = 1104 = 1680, = 17664What is the run time complexity of the algorithm?
a)
b)
*c)
d)
e)
Explanation: When doubles, the time taken, , is increased by a factor of , which is .
Tags: Applications, Complexity
Author: mr791 (mr791)
Avg Rating: 4.1800
Avg Difficulty: 0.5455
Total ratings: 11



ID: 4249694
Created: 7:22pm, 18 Dec 2019
Before working at the University of Bath, while working in Honda, Dr. Tom Finch created a binary tree about one of Honda's competitors.When delivering the Power Point presentation, the tree on the projector looked like this:He also passed round some handouts, with his comments and text explaining some of the aspects of the presentation.But to be more environmentally friendly, he decided to save some paper, and print the tree in one line:He was later asked:"Which tree traversal algorithm did you use on the binary tree to get this output?"What was his reply?
*a) In-order
b) Pre-order
c) Post-order
d) Level-order
e) Breadth First
Explanation: Week 7b slides from Moodle_____________________________________________________P.S. He later realised that he should have kept the tree as it was...
Tags: Trees
Author: mr791 (mr791)
Avg Rating: 4.6800
Avg Difficulty: 0.4737
Total ratings: 19



ID: 4249684
Created: 7:06pm, 18 Dec 2019
Starting with an empty circular buffer of size 7 that allows overwriting:1) Insert: 4 then 1 then 9 then 23) Call Remove twice4) Insert: 3 then 1 then 1 then 8 then 3If I were to print the elements of the buffer in order from the start, what would be printed?
a) 4, 1, 9, 2, 3, 1, 1, 8, 3
b) 4, 1, 3, 1, 1, 8, 3
*c) 9, 2, 3, 1, 1, 8, 3
d) 3, 1, 1, 8, 3, 4, 1
Explanation: Initially, we insert [4, 1, 9, 2] which go in order. Then when calling remove the oldest two elements are removed so now the buffer looks like [9, 2] with the start point being shifted to the position that 9 is in. We now insert 5 more elements 3, 1, 1, 8, 3 which all go in order so the final buffer is C
Tags: ADTs, Lists
Author: dpah20 (dpah20)
Avg Rating: 3.4000
Avg Difficulty: 1.2000
Total ratings: 5



ID: 4249666
Created: 6:50pm, 18 Dec 2019
By constructing the adjacency matrix of the graph below (with rows/columns arranged alphabetically), which of the following matrices describes vertices which are three edges apart?
a)
b)
*c)
d)
Explanation: The adjacency matrix isIn general, computing Antells us which vertices are n edges apart.Here, A3gives us the result in (C).See Lecture17 - Graphs1 slides 7-11
Tags: Graphs
Author: mark_skid (js2810)
Avg Rating: 4.8200
Avg Difficulty: 1.3636
Total ratings: 11



ID: 4249632
Created: 4:15pm, 18 Dec 2019
Insert the arrayinto a Self-BalancingBinary Search Tree. What is the output if you perform a Level-Order Traversal on the tree?
a) 1,2,3,4,5,6,7,8
*b) 4,2,6,1,3,5,7,8
c) 4,6,2,7,5,3,1,8
d) 4,2,1,3,6,5,7,8
e) None of the above
Explanation: Using the definition of a BST (as given in 2019 W8a Slide 4 of the lecture slides), the tree has the following structure:Root: 4Level 1: 2,6Level 2: 1,3,5,7Level 3: 8So our output is 4,2,6,1,3,5,7,8.Performing the wrong traversal may give one of the other choices, as will incorrectly applying the definition of a BST.
Tags: Trees
Author: mo383 (mo383)
Avg Rating: 4.1700
Avg Difficulty: 0.8333
Total ratings: 6



ID: 4249461
Created: 12:27pm, 18 Dec 2019
Which statement best describes what happens when you sort an array, arr, of length n during one pass of aShell (k-)Sort(assuming k<n)?
a) Shell's areoften shown as an illustration of the golden ratio,,in nature, similarly to the Fibonacci Numbers. As a result we do the following:1) Find the largest Fibonacci number smaller than n, call this "r"2) Create a temporary array made up of arr at unique indices of the Fibonacci sequence (e.g. arr[0], arr[1], arr[2], arr[3], arr[5], arr[8], ... ,arr[r])3) Sort the temporary array.4) Update the values of arr at the indices of the Fibonacci numbers based on the sorted temporary array.5) Traverse the array backwards to create a second temporary array (e.g. arr[n], arr[n-1], arr[n-2], arr[n-3], arr[n-5], arr[n-8], ... ,arr[n-r])6) Sort the temporary array7) Update the values of arr at the indices {n - Fibonacci numbers} based on the sorted temporary array.8) Increase the index of the elements we're sorting by k and repeat
b) 1) Split the array into "shells" of length k2) Sort the shells3) Sum the total value of each shell4) Re-order the shells based off of their total shell value and concatenate the arrays back together5) Repeat
*c) 1) Compare elements arr[0] and arr[k]2) Swap if arr[k] is smaller3) Compare arr[1] and arr[k+1]4) Swap if arr[k+1] is smaller and so on5) If we performed a swap before reaching the end of the array, repeat. Otherwise we're done.
d) 1) Sort the firstelements2) Sort the lastelements3) Repeat
e) Shell Sort does not exist
Explanation: (c) is the only feasible sorting algorithm. Donald Shell invented Shell sort and shells have no correspondence with the workings of the algorithm - (a) and (b) are completely made up. (d) is somewhat similar to Stooge sort, (with 3=k) but again is made up. A google search will quite quickly allow you to deduce (e) is false.See the 2019 Week 5a .ppt file for the explanation of shell sort.
Tags: Sorting
Author: mo383 (mo383)
Avg Rating: 3.7500
Avg Difficulty: 1.0000
Total ratings: 4



ID: 4248846
Created: 11:56pm, 17 Dec 2019
Which of these sorting is best suited for recently sorted data?
a) Merge sort
b) Selection sort
c) Quick sort
*d) Insertion sort
Explanation: Insertion sort works by placing the last element in a sub-array into a correct position after the rest of the sub-array has already been sorted. If the original array is sorted, the last element of a sub-array is already in its' correct place, eliminating the need to move it somewhere else. Thus, only n comparisons are required for a sorted array (or list).
Tags: Lists, Sorting
Author: iljaiskovs (ii263)
Avg Rating: 4.2500
Avg Difficulty: 0.2500
Total ratings: 12



ID: 4248823
Created: 11:42pm, 17 Dec 2019
Consider a closed hash table with linear probing and load factor L. For what lowest value of L does the expected number of steps to find an item exceed 2?
a) L 0.4
b) L 0.5
c) L 0.555...
d) L 0.6
*e) L 0.666...
Explanation: For a closed hash table, the expected number of steps is�(1+ 1/(1-L)).Solving�(1+ 1/(1-L)) 2 gives L 0.666...See Week10b slide 31 for further.
Tags: Hashtables
Author: mark_skid (js2810)
Avg Rating: 4.5500
Avg Difficulty: 1.1818
Total ratings: 11



ID: 4248679
Created: 10:24pm, 17 Dec 2019
Given the following binary tree, which method of tree traversal would result in the output:a b d c e f
a) In-order traversal
*b) Pre-order traversal
c) Post-order traversal
d) Level-order traversal
Explanation: Pre-order traverses in the following way:Processes the current node (starting at the root)Processes nodes in left sub-treeProcesses nodes in right sub-treeRefer to Week7b slides 14-28 for details.
Tags: Trees
Author: mark_skid (js2810)
Avg Rating: 4.1400
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4248545
Created: 8:16pm, 17 Dec 2019
How do you calculate steps to search for/insert an element in an OPEN hash table with load factor L?
a) 1 + (L/3)^2
*b) 1 + L/2
c) 1 + L
d) 1 + (L/2)^2
Explanation: Naturally this value is dependent on the effectiveness of your hashing algorithm and the size of the array 2019 Lecture 10b Slides 32,33
Tags: Search, Hashtables
Author: dpah20 (dpah20)
Avg Rating: 4.2500
Avg Difficulty: 0.7500
Total ratings: 4



ID: 4248512
Created: 7:36pm, 17 Dec 2019
Which of the following sorting algorithms is NOT stable?An algorithm is stable if it retains the order of equal elements.Ie: if x = y and x comes before y in the unsorted list, then x will come before y in the sorted list.
a) Selection Sort
*b) Quick Sort
c) Bubble Sort
d) Insertion Sort
e) Merge Sort
Explanation: There is a 50/50 chance that the order of two equal elements will swap order during quick sort. This depends on what pivot is chosen. In the rest of the algorithms, the order will be preserved
Tags: Sorting
Author: dpah20 (dpah20)
Avg Rating: 2.7300
Avg Difficulty: 0.6364
Total ratings: 11
==> Comment 1: Isn't Selection Sort also unstable though, unless it's in a list? (by: stb37 [stb37])
====> Reply 1: Nah in 2019 Week 4a Slide6 doesn't do the swap at the start. Also the revision notes on moodle say it is stable in the slides
====> Reply 2: Both on the lecture slides and in the revision notes it says that selection sort is unstable



ID: 4248507
Created: 7:31pm, 17 Dec 2019
What is the correct order of operations for a post-order traversal of a binary tree?
a) 1) process current node, 2) process left node, 3) process right node
b) 1) process left node, 2) process current node, 3) process right node
*c) 1) process left node, 2) process right node, 3) process current node
Explanation: A post-order traversal will process the current node after both its children have been processed. A pre-order traversal will process the current node before its children and an in-order traversal will process the node after the left child but before the right child.
Tags: Search, Trees
Author: dpah20 (dpah20)
Avg Rating: 4.0000
Avg Difficulty: 0.1250
Total ratings: 8



ID: 4248407
Created: 6:18pm, 17 Dec 2019
What is the difference between precision and accuracy?
a) Precision is the ability of the measurement system to detect and faithfully indicate small changes in the characteristic measurement result.Accuracy iss how close measurements are to the true value.
b) Precision is how close measurements are to the true value. Accuracy is how close measurements are to each other.
c) There is no difference between them.
*d) Precision is how close measurements are to each other. Accuracy is how close measurements are to the true value.
Explanation: The definitions of precision and accuracy can be found in week 1b-powerpoint v2 slide 8 2019.
Tags: Complexity
Author: ail24 (ail24)
Avg Rating: 3.8000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 4248211
Created: 3:39pm, 17 Dec 2019
What is the maximum number of child nodes that a leaf node can have?
*a) 0
b) 2
c) There is no maximum number
Explanation: A leaf node is a node with no children hence the maximum number of child nodes that a leaf node can have is 0. (2019 Lecture 7b slide 6)
Tags: Trees
Author: wpjc20 (wpjc20)
Avg Rating: 4.3300
Avg Difficulty: 0.2778
Total ratings: 18



ID: 4248159
Created: 2:33pm, 17 Dec 2019
An algorithm has a runtime, for input size n, of T(n)=10000n4+0.075n2+0.091n+102500.What is the asymptotic time complexity of this algorithm?
a) O(n5)
b) ?(n3)
c) O(n3)
*d) ?(n4)
e) None of the others
Explanation: From lectures 2019 week1a slides 14,15, we can define the asymptotic time complexity of this algorithm, and show it is?(n4).T(n)? O(n4): for b=1 and B= 10001. Eg for 1=n, T(n)=10001n4T(n)? ?(n4): for a=1 and A= 10000. Eg for 1=n, 10000n4 = T(n)Therefore T(n)? T(n4), and our answer is D.
Tags: Complexity
Author: pd479 (pd479)
Avg Rating: 3.4200
Avg Difficulty: 0.1667
Total ratings: 12



ID: 4248139
Created: 2:21pm, 17 Dec 2019
An algorithmhas time complexity. Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 5.Assuming, what is the lowest possible value ofb for which the definition holds?
a)
b)
c)
*d)
e)
Explanation: You need to solve for the roots of |T(N)| = | 5N2|. Then you need to find the range of values for which 5N3 outgrows T(N).You should obtain the roots in answers (a), (c), (d) and (e) (and a further 2 roots). Using the definition it is clear that we must pick b=10, as all other selections of b allows you to pick an n, (e.g n=9) where the definition does not hold.
Augmented explanation 1: You need to solve for the roots of |T(N)| = | 5N2 |. Then you need to find the range of values for which 5N3 outgrows T(N).You should obtain the roots in answers (a), (c), (d) and (e) (and a further 2 roots). Using the definition it is clear that we must pick b=10, as all other selections of b allows you to pick an N, (e.g N=9) where the definition does not hold. (by: mo383 [mo383])
Tags: Complexity
Author: mo383 (mo383)
Avg Rating: 3.4300
Avg Difficulty: 1.8571
Total ratings: 7



ID: 4248112
Created: 2:01pm, 17 Dec 2019
A phone network provider wishes to store the mobile numbers for their customers (a large amount of people). The application needs to be able to add and remove new mobile numbers quickly, for when a customer joins or leaves the provider, and the company wants to be able to determine quickly whether an individual with a specific name is a customer, and be able to retrieve their phone number. Which data structure would be MOST appropriate to store the phone numbers in memory?
a) Linked List
b) Closed hashtable
*c) Open hashtable
d) Sorted ArrayList
e) Sorted Array
Explanation: We know the answer must be either B or C, because for large data sets hashtables are the most efficient to store data (is in O(1) steps, rather than O(N or logN), lecture 2019 week10b slide3), and the best way to access specific unsorted data like these mobile numbers will be. It can be shown the open hashtable (answer C) is the most suitable, because it's runtime is quicker than a closed hastable (lecture 2019 week10b slide33), and due to each bucket being a linked list, it is really easy to delete a value compared to a closed hashtable- just removing it from the linked list (lecture 2019 week10b slide 26).
Tags: Applications
Author: pd479 (pd479)
Avg Rating: 4.8500
Avg Difficulty: 0.9231
Total ratings: 13



ID: 4248125
Created: 1:41pm, 17 Dec 2019
Suppose that you are an employee in the sales department at a large car manufacturing company, (i.e. Honda). Your boss has tasked you with reducing the cost of transporting new cars to dealerships from the factory, in order to maximise profits.Below is a graph with the costs associated with delivering a single car to dealerships from other locations, our factory is at location A. Using Djikstra's Algorithm, calculate the cheapest costs to deliver to each dealership from our factory at A.
a) B = 7C = 9D = 22E = 26F = 11
b) B = 7C = 9D = 22E = 20F = 14
c) B = 7C = 9D = 20E = 20F = 14
*d) B = 7C = 9D = 20E = 20F = 11
e) B = 7C = 9D = 20E = 26F = 11
Explanation: D is the correct answer. Djikstra's Algorithm was covered in the lecture named shortest_path on Moodle.
Tags: Applications, Graphs
Author: stb37 (stb37)
Avg Rating: 4.3300
Avg Difficulty: 0.4667
Total ratings: 15



ID: 4248076
Created: 1:32pm, 17 Dec 2019
An array is provided with the following numbers: {16, 87, 54, 98, 61, 33, 74}. If a perfectly balanced binary search tree is constructed from this array, which number will be in the root node?
a) 16
*b) 61
c) 54
d) 74
e) None of the others
Explanation: From lecture 2019 week7b slide 6. Using the numbers within the array, aperfectly balanced binary search tree will be created as below: 61 / \ 33 87 / \ / \16 54 74 98From this. it is clear the root node is 61 (answer B), because it is the value at the start(top) of the tree, and using this as the root node makes the tree balanced.
Tags: Trees
Author: pd479 (pd479)
Avg Rating: 3.6700
Avg Difficulty: 0.7778
Total ratings: 9



ID: 4248063
Created: 1:21pm, 17 Dec 2019
For the list: 9,1,2,3,10,4,5,6,8Which of the algorithm will be the fastest when trying to sort the above defined list without minding about the memory.
a) Merge sort halving the first list as: 9,1,2,3 and 10,4,5,6,8
*b) Quick sort with pivot being chosen by the end of the list
c) Bubble sort with flag implementation
Explanation: Quick sort choosing pivot 8, by the first iteration it will return the sorted list.
Tags: Lists, Sorting, Complexity
Author: vib20 (vib20)
Avg Rating: 4.3300
Avg Difficulty: 1.0000
Total ratings: 3



ID: 4248027
Created: 12:49pm, 17 Dec 2019
Which of these functions has the lowest growth rate?
a) n
b) nlog(n)
*c) log(n)
d) n2
e) 2n
Explanation: 2019 Lectures - Week2b - Lecture 4 - Complexity 2 - Slide 12. A list of functions with ascending growth rate is given.
Tags: Complexity
Author: rossthomas (rt578)
Avg Rating: 3.1500
Avg Difficulty: 0.0000
Total ratings: 13



ID: 4248012
Created: 12:34pm, 17 Dec 2019
In what order are the vertices 'settled' whenDijkstra�s Algorithm is applied to the below graph to determine the lengths of the shortest paths from A to all other vertices?
a) A B C D E F
*b) A C F B D E
c) A C E D F B
d) E D B F C A
e) C B F D E A
Explanation: 2019 Lectures - Lecture 18 - Graphs 2 - Slide 6 - Currently saved on Moodle as shortest_path.pdf. The starting vertex A is settled first with a length of 0. Lengths to B and C are noted as 10 and 2 respectively. A to C has the shortest length so C is settled next with a length of 2. Length of ACF is noted as 4. ACB is shorter than AB so length A to B is updated to 5. A to F is the next shortest length so F is settled with a length of 4. Length of ACFD is noted as 6. A to B is the next shortest length so B is settled with a length of 5. Length of ACBE is noted as 8. Length of A to D is the next shortest length so D is settled with a length of 6. Length of A to E is the next shortest length so E is settled with a length of 8.
Tags: Graphs
Author: rossthomas (rt578)
Avg Rating: 4.2500
Avg Difficulty: 0.5000
Total ratings: 4



ID: 4248003
Created: 12:30pm, 17 Dec 2019
Which of the following searching algorithms performs the best giving that we have as much memory as needed and we apply them to the most appropiate data structures.
a) Linear search
b) Binary search
c) Binary tree search
*d) Hash search
Explanation: Hash search can be O(1) depending on how good the hash function is.
Tags: Lists, Search, Complexity
Author: vib20 (vib20)
Avg Rating: 3.8800
Avg Difficulty: 0.5000
Total ratings: 8



ID: 4247982
Created: 12:19pm, 17 Dec 2019
After executing the Dijkstra's algorithm on the following graph what is the shortest path from A to E?
a) AE
b) ACE
*c) ACFE
d) ABDE
Tags: Graphs
Author: vib20 (vib20)
Avg Rating: 3.6700
Avg Difficulty: 0.5000
Total ratings: 6



ID: 4247940
Created: 11:55am, 17 Dec 2019
Which of the following BSTs is not a valid AVL Tree?
a) A
b) B
c) C
*d) D
e) E
Explanation: 2019 Lecture Slides - Week 8a - Trees 2 - Slide 30 - An AVL tree is a BST in which the heights of the left and right sub-trees of each node differ at most by 1. The root node in tree D has a left sub-tree of height 2 and a right sub-tree of height 0 so the difference is 2.
Tags: ADTs, Trees
Author: rossthomas (rt578)
Avg Rating: 4.1800
Avg Difficulty: 0.1818
Total ratings: 11



ID: 4247907
Created: 11:32am, 17 Dec 2019
The picture below shows a balanced AVL Tree.If I were to insert 10 (or '0010') into the tree. What will the balanced AVL Tree look like after?
a)
*b)
c)
d)
e)
Explanation: W8(b) Trees3 is the lecture where AVL Trees were covered.Below is a pic of the tree with weightings:Now when we insert 10 (or '0010') it is a child of '0009', which means that the node at '0006' becomes unbalanced and hence rotates. This means that '0007' becomes a child of '0006', and '0008' becomes the child of the root '0004'. After this rotation, the tree is balanced and hence there is no more rotations, leaving the AVL Tree as:This leaves us with B being the correct answer. (https://www.cs.usfca.edu/~galles/visualization/AVLtree.html could be useful to visualise this)
Tags: Trees
Author: stb37 (stb37)
Avg Rating: 4.3300
Avg Difficulty: 1.0667
Total ratings: 15



ID: 4247866
Created: 11:03am, 17 Dec 2019
Which one of the following sorting algorithms, is a non-comparison sorting algorithm?
*a) Counting Sort
b) Heap Sort
c) Shell Sort
d) Selection Sort
e) Stooge Sort
Explanation: W7(a) slide 8/16 states that Counting Sort is a non-comparison sorting algorithm. The other 4 mentioned all make use of comparisons in their sorting algorithms.
Tags: Sorting
Author: stb37 (stb37)
Avg Rating: 3.6300
Avg Difficulty: 0.6250
Total ratings: 8



ID: 4247858
Created: 10:58am, 17 Dec 2019
Which one of the following hash functions is the current reccomendation?
a) MD5
b) SHA-1
*c) SHA-3
d) SHA-224
e) SHA-2
Explanation: SHA-3 (also known as Keccak), is the current reccomendation. SHA-2/SHA-224 has also not yet been cracked yet, but is considered to be less secure (easier to crack).W11(a)post slide 17/21
Augmented explanation 1: SHA-3 (also known as Keccak), is the current reccomendation. SHA-2/SHA-224 has also not yet been cracked yet, but is considered to be less secure (easier to crack). SHA-3 is more recent than SHA-2 also.W11(a)post slide 17/21 (by: stb37 [stb37])
Tags: Cryptography
Author: stb37 (stb37)
Avg Rating: 3.2500
Avg Difficulty: 0.2500
Total ratings: 4



ID: 4247843
Created: 10:52am, 17 Dec 2019
Which of the following sorting algorithms, uses h-sorting as part of its alogorithm?
a) Selection Sort
b) Heap Sort
c) Insertion Sort
*d) Shell Sort
e) Merge Sort
Explanation: W5(a) Powerpoint on Shell Sort. Slides 4-6 explain how h-sorting works.
Tags: Sorting
Author: stb37 (stb37)
Avg Rating: 4.2900
Avg Difficulty: 0.2857
Total ratings: 7



ID: 4247819
Created: 10:33am, 17 Dec 2019
What is the time complexity of Tree traversal Methods in a binary tree?i.e. Pre-Order, Post-Order etc
a) (log2n)
b) (n2)
*c) (n)
d) (n log2n)
e) (log22n)
Explanation: W7(b) Trees1 slide 29
Tags: Trees, Complexity
Author: stb37 (stb37)
Avg Rating: 4.0000
Avg Difficulty: 0.1429
Total ratings: 7



ID: 4247809
Created: 10:27am, 17 Dec 2019
Which one of the following sorting algorithms, is not a stable sorting algorithm?
*a) Heap Sort
b) Insertion Sort
c) Merge Sort
Explanation: W7(a) Sorting and Proving slide 5/16Definition: A sorting algorithm is said to be 'stable' if equal items retain their relative position after sorting. W4(a) Sorting 10/23
Tags: Sorting
Author: stb37 (stb37)
Avg Rating: 4.2900
Avg Difficulty: 0.4286
Total ratings: 7



ID: 4247785
Created: 10:14am, 17 Dec 2019
For the following binary tree, which tree traversal method would print the following output?Output : d e b f g c a
a) Preorder Traversal
*b) Post-Order Traversal
c) In-Order Traversal
d) Level-Order Traversal
Explanation: w7b Trees1 slides 14-26
Tags: Trees
Author: stb37 (stb37)
Avg Rating: 3.6000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 4246985
Created: 10:54pm, 16 Dec 2019
Which of these is not a requirement for a good cryptographic hash?
a) Pre-image resistance
b) Collision resistance
*c) Second collision resistance
d) Second pre-image resistance
Explanation: 2019 Week 11a slide 16
Tags: Cryptography, Hashtables
Author: davenport (james_davenport)
Avg Rating: 4.2500
Avg Difficulty: 1.0000
Total ratings: 4



ID: 3658916
Created: 9:33pm, 22 Jan 2019
Consider this question on cryptography: To ensure Eve doesn't replace Alice's public key with her own, what can Alice do?
a) Make her public key private
b) Release fake keys to disguise the original key
c) Encrypt the key
*d) Have her public key signed by a Certificate Authority
e) Get rid of Eve.
Explanation: Lecture 20 - Cryptography, slide 12.
Augmented explanation 1: To those selecting C: the public key is what is used to encrypt a message in the first place (by: nmparrott [nmp31])
Tags: Cryptography
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.5909
Total ratings: 44



ID: 3658281
Created: 12:34pm, 22 Jan 2019
What is the RSA encryption system based on?
a) The presumed difficulty of discrete logarithms
b) The presumed difficulty of finding Mersenne primes
*c) The presumed difficulty offactoring large integers
d) The presumed difficulty of integrating trigonometric functions
e) The presumed difficulty of finding the circumference of the sun given half a dozen apples cost �3.20
Explanation: A) This is actually the basis of the ElGamal encryption systemB) Not a basis for an encryption system (that I am aware of)C) RSAD) Sorry for the use of 'presumed', integrating trig functions is difficult, but not a basis of an encryption systemE) Apples are expensive these days :(
Tags: Cryptography
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.7576
Total ratings: 33



ID: 3658272
Created: 12:20pm, 22 Jan 2019
Running a 7-sort (Shellsorting) followed by a 4-sort and then a 2-sort on the following array [10,5,7,11,15,3,4,9] will give which of the following arrays.
a) [9,3,4,10,15,5,7,11]
b) [4,3,9,7,10,5,11,15]
c) [3,5,4,9,7,10,15,11]
*d) [4,3,7,5,9,10,15,11]
e) [5,7,3,4,9,11,10,15]
Explanation: 7-sort: [9,5,7,11,15,3,4,10]4-sort: [9,3,4,10,15,5,7,11]2-sort: [4,3,9,5,7,10,15,11]2-sort second pass: [4,3,7,5,9,10,15,11]For more details see lecture Sorting 2 (Shell sort)
Tags: Sorting
Author: kb672 (kb672 - permission to this course revoked)
Avg Rating: 4.0900
Avg Difficulty: 1.3478
Total ratings: 23



ID: 3656550
Created: 6:38pm, 20 Jan 2019
When is quick sort (ascending) not of O(nlogn) complexity?
a) When running the algorithm on a slow computer
b) When the data type of the elements is a string
c) When the data is in a random order
*d) When the data is entered in descending order
e) When it's a Wednesday
Explanation: A) The speed of the computer will not effect complexity, only total time run. It still has the same number of elementary operations.B) Should not effect time complexityC) When the data is in a random order then that is the best time that it will run with O(nlogn)D) If the data is sorted into descending order we will have O(n2) complexity, much like bubble sortE) The day of the week does not affect time complexity (I hope.)
Tags: Sorting, Complexity
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.4750
Total ratings: 40



ID: 3658342
Created: 1:55pm, 20 Jan 2019
This is a closed hash table that uses linear probing:[7,4,3,5, ,11, , ,12, , , , ]This is the hashing algorithm it uses: h(x) = (x2- 7x) % 13If we were to remove 4, would our hash table break?
a) No, it will work fine.
*b) Yes, it's broken.
Explanation: Look at 3, if we were to put that into our hashing algorithm: 32-7*3 = 9-21 = -12 =1 mod 13. If we were to remove 4 & then look at position 1 to find 3, we would find an empty space and our probe will stop, so despite 3 being in the hash table, we can't find it. Thus our hash table is broken.
Tags: Hashtables
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.8750
Total ratings: 24



ID: 3655929
Created: 7:17pm, 19 Jan 2019
Using the formula we were taught in lectures, what is the average number of steps it will take to find an element in this closed hash table using linear probing? And, how many steps will it take to find '4' if we use this hashing algorithm?Hash Table:[ , , , ,12,1,4,7]Hashing Algorithm:(x2-4) % 8(Hint: Hash table has 8 total buckets)
a) Average number of steps: 5/6Number of steps to find '4': 2
b) Average number of steps: 5/6Number of steps to find '4': 3
c) Average number of steps: 1.5Number of steps to find '4': 2
*d) Average number of steps: 1.5Number of steps to find '4': 3
e) Average number of steps: 11/6Number of steps to find '4': 1
Explanation: L = 4/8 = 1/2This is a closed hash table so to calculate the average number of steps we use: 0.5(1+1/(1-L))This gives us 3/2.Inserting 4 into the hashing algorithm we get 42-4 % 8 = 4So we look at bucket 4 in the hash table which is occupied by 12, so we go to the next one, which contains 1, and so we go to the next one which contains 4. That was 3 steps.
Tags: Hashtables
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.8125
Total ratings: 16
==> Comment 1: Is the question meant to say how many steps to 'insert' 4? (by: mcb68 [mcb68])
====> Reply 1: No, I meant find. 4 is already in the hash table



ID: 3651203
Created: 5:12pm, 13 Jan 2019
Which of the following procedures describes ElGamal public key cryptography?
a) Key Generation1. Bob generates multiplicative cycle group G with generator g.2. Bob chooses a random exponent x in {0, ..., |G| - 1}3. Bob publishes G, g and g^xEncryption1. Alice gets Bob's public key: G, g and g^y2. Alice chooses a random exponent y in {0, ..., |G| - 1} and her message m3. Alice computes and sends g^x, m*g^xyDecryption1. Bob computes g^xy = g^yx2. Bob computes m = (m*g^xy)*(g^xy)^-1
b) Key Generation1. Bob generates multiplicative cycle group G with generator g.2. Bob chooses a random exponent x in {0, ..., |G| - 1}3. Bob publishes G, g and m*g^xEncryption1. Alice gets Bob's public key: G, g and g^x2. Alice chooses a random exponent y in {0, ..., |G| - 1} and her message m3. Alice computes and sends g^y, m*g^xyDecryption1. Bob computes g^xy = g^yx2. Bob computes m = (m*g^xy)*(g^xy)
*c) Key Generation1. Bob generates multiplicative cycle group G with generator g.2. Bob chooses a random exponent x in {0, ..., |G| - 1}3. Bob publishes G, g and g^xEncryption1. Alice gets Bob's public key: G, g and g^x2. Alice chooses a random exponent y in {0, ..., |G| - 1} and her message m3. Alice computes and sends g^y, m*g^xyDecryption1. Bob computes g^xy = g^yx2. Bob computes m = (m*g^xy)*(g^xy)^-1
d) Key Generation1. Bob generates multiplicative cycle group G with generator g.2. Bob chooses a random exponent x in {0, ..., g}3. Bob publishes G, g and g^xEncryption1. Alice gets Bob's public key: G, g and g^x2. Alice chooses a random exponent y in {0, ..., |G| - 1} and her message m3. Alice computes and sends g^y, m*g^xyDecryption1. Bob computes g^xy = g^yx2. Bob computes m = (m*g^xy)*(g^xy)^-1
Explanation: From lec 10 slides 7 - 9.
Tags: Cryptography
Author: ptear20 (ptear20 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 1.2188
Total ratings: 32
==> Comment 1: The answers look far too similar (by: nmparrott [nmp31])



ID: 3627925
Created: 2:36pm, 11 Dec 2018
Which of these options is NOT properties of minimum spanning tree?
a) sum of the weights of all the edgesis minimum among all the spanning trees
*b) The tree is always unique
c) Reaches out to (spans) all vertices.
d) can be applied with Prim�s Algorithm
Explanation: MST is not necessarily uniqueLecture 19 Graph3
Tags: Graphs
Author: vrkr (nt514 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.4643
Total ratings: 28
==> Comment 1: I can't see 'Lecture 19' on Moodle? Could you please provide a link? (by: jwb59 [jwb59])



ID: 3627893
Created: 2:16pm, 11 Dec 2018
What does recursion do?
*a) calls function itself one or more times until a specified condition is met
b) input will be used again after the function executed
c) acts as infinite loop to operate on continuous application
d) None of these correct
Explanation: It is a programming technique involving the use of a procedure, subroutine, function, or algorithm that calls itself one or more times until a specified condition is met at which time the rest of each repetition is processed from the last one called to the firstreferencehttps://www.merriam-webster.com/dictionary/recursion
Tags: ADTs
Author: vrkr (nt514 - permission to this course revoked)
Avg Rating: 3.3900
Avg Difficulty: 0.0833
Total ratings: 36



ID: 3619435
Created: 7:05pm, 07 Dec 2018
Which of the following sorting algorithms is unstable?
a) Attic Sort
b) Bubble Sort
c) Crumble Sort
d) Insertion Sort
*e) Shell Sort
Explanation: Lecture 12 - Sorting 3 - Slide 19. I made attic and crumble sort up
Tags: Sorting
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 2.8900
Avg Difficulty: 0.1852
Total ratings: 27



ID: 3619431
Created: 7:04pm, 07 Dec 2018
Which of the following is NOT an advantage of using a singly Linked List instead of an array?
a) Can easily expand and contract size
b) Faster insertion of new elements
c) Faster deletion of elements
*d) Allows Random access
Explanation: Linked Lists do not allow Random Access, only sequential access.
Tags: Lists
Author: wew21@bath.ac.uk (wew21 - permission to this course revoked)
Avg Rating: 3.7600
Avg Difficulty: 0.3529
Total ratings: 17



ID: 3619419
Created: 7:00pm, 07 Dec 2018
Which of the following are reasons why different data structures or algorithms might be used for different problems?
a) The time complexity of the algorithm is better
b) The amount of data required to process is very small
c) The algorithm is 'in place', so does not use additional storage
d) The algorithm will never run with worst case time complexity with the data being used
*e) All of the above
Explanation: The time complexity is usually the first thing we look at. A better time complexity means that on average, with a large data set, the algorithm will run faster.Sometimes we are only dealing with a very small amount of data, in which case an algorithm with a bad time complexity (e.g. quadratic) might be quicker if the constant is lower.Sometimes the data we are using is sorted or organised in a way that means an algorithm may never run on the worst case scenario, or may generally run faster than the average/amortised time.
Tags: ADTs, Complexity
Author: ptear20 (ptear20 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.4783
Total ratings: 23



ID: 3619407
Created: 6:55pm, 07 Dec 2018
what is O(n) of the following function,for(int i = 0; i <= n; i++){ for(int j = 0; j <= n; j++){ j++; }}
a) n^2
*b) n*log2(n^2)
c) 2^n
Explanation: the first loop is run through n times,the second loop is run through n/2 times as j is increased by two each timethis results in a O(n) of n*log2(n^2).
Tags: Complexity
Author: ji307 (ji307 - permission to this course revoked)
Avg Rating: 2.0000
Avg Difficulty: 0.4000
Total ratings: 15
==> Comment 1: The answer is not correct, I think (by: samz285 [gz285])
==> Comment 2: You are not increasing j by two in each iteration of the inner loop. (by: mk2022 [mk2022])



ID: 3619401
Created: 6:53pm, 07 Dec 2018
Which of the following statements about AVL trees is NOT true?
a) Every node in an AVL has at most two children
b) For any node, all nodes in its left sub-treemust be strictly less than the node�s value.
*c) For any node, all nodes in its right sub-treemust be strictly greater than the node�s value.
d) The heights of the left and right sub-trees of each node differ at most by 1
e) The balance value of a node is zero if the node's left and right sub-trees have the same height
Explanation: For any node, all nodes in its right sub-treemust be greater than (OR equal to) the node�s value.
Tags: Trees
Author: wew21@bath.ac.uk (wew21 - permission to this course revoked)
Avg Rating: 2.4600
Avg Difficulty: 0.7692
Total ratings: 13



ID: 3619396
Created: 6:51pm, 07 Dec 2018
Which one is used to represent the average complexity of an algorithm?
*a) ?(�)
b) O(�)
c) O(�)
Explanation: O(�) represents the upper bound of complexity, which means the worst time possible;O(�) represents the lower bound of complexity, which means the best time possible.
Tags: Complexity
Author: achau26 (astc20 - permission to this course revoked)
Avg Rating: 2.7000
Avg Difficulty: 0.1000
Total ratings: 20



ID: 3619372
Created: 6:44pm, 07 Dec 2018
In an average BST with n values, how many steps are typically required to find a value?
a) ?(n logn)
b) ?(n)
c) ?(n2)
*d) ?(logn)
Explanation: Source: DA Lecture 14 Trees 2
Tags: Trees
Author: nb705 (nb705)
Avg Rating: 3.0700
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3619370
Created: 6:44pm, 07 Dec 2018
Which sorting algorithms are stable?
a) Shellsort, Quicksort, Bubblesort
*b) Mergesort, Bubblesort, Insertionsort
c) Selectionsort, Heapsort, Insertionsort
d) Bubblesort, Shellsort, Heapsort
Explanation: Shellsort, Quicksort, Heapsort and Selectionsort are unstable
Tags: Sorting
Author: achau26 (astc20 - permission to this course revoked)
Avg Rating: 3.5900
Avg Difficulty: 0.3529
Total ratings: 17



ID: 3619358
Created: 6:41pm, 07 Dec 2018
According to thethe following source code file StringRepeater.java:There are four statements about this code:(1). Theformula for the elementary operationsin this code is T(n)= 4+4n.(2). For big n, the complexity class of this code is O(n^2).(3).To measure the runtime of this code, we can test this code in 500 times or more, and average the running time to get a fairly precise runtime.(4).Changing the type of the input and output as StringBuffer, and change the loop code "result.append(s)" can reduce the runtime of the code.Which of the following statements are true?
a) (1)(3)
b) (2)(3)
c) (1)(3)(4)
*d) (2)(3)(4)
e) (1)(2)(3)(4)
Explanation: Based on the PS1, question 2,3:(1). Not True, the operation "result + s" in the code has a special runtime (not just 1 elementary operation, since the type is string)(2).True, by the measurement of this test, we can observe the runtime hasa quadratic growing trend.(3). True, by lecture 4, averaging the measurements canquantify accuracy.(4). True, as PS1 test, this is better than the previous code.
Tags: Applications, Complexity
Author: samz285 (gz285 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 1.1429
Total ratings: 14



ID: 3619340
Created: 6:33pm, 07 Dec 2018
Two or more pieces of code running simultaneously are known as what?
a) Processes
b) Processors
c) Branches
*d) Threads
e) Leaves
Explanation: Threads are 2 or more pieces of code running simultaneously, processes are two or more programs running at the same time.
Tags: ADTs
Author: t_collins1710 (tpc41 - permission to this course revoked)
Avg Rating: 2.8100
Avg Difficulty: 0.4375
Total ratings: 16



ID: 3619332
Created: 6:32pm, 07 Dec 2018
Suppose you have the following hash table, implemented using linear probing, and that the hash function we are using is the function, h(x) = x mod 9.0 1 2 3 4 5 6 7 8 [hash ids]9 18 12 3 14 4 21 [elements entered]Which of the following are orders in which the elements could have been added to the table:(i) 9, 14, 4, 18, 12, 3, 21(ii) 12, 3, 14, 18, 4, 9, 21(iii) 12, 14, 3, 9, 4, 18, 21(iv) 9, 12, 14, 3, 4, 21, 18(v) 12, 9, 18, 3, 14, 21, 4 ?
a) (iii) only
*b) (iii) and (iv)
c) (i) and (v)
d) (iv) only
e) None of the above
Explanation: In (i), 4 would be inserted at index 4 instead of 6.In (ii), 18 would be inserted at index 0 instead of 1.In (v), 21 would be inserted at index 6 instead of 7.
Tags: Hashtables
Author: ptear20 (ptear20 - permission to this course revoked)
Avg Rating: 4.4600
Avg Difficulty: 1.2500
Total ratings: 28
==> Comment 1: A good, unique question (by: samz285 [gz285])



ID: 3619311
Created: 6:27pm, 07 Dec 2018
When should you use an adjacency matrix rather than an adjacency list?
a) Lots of edges and lots of vertices
*b) Lots of edges and few vertices
c) Few edges and few vertices
d) Few edges and lots of vertices
Explanation: Source: DA Lecture 17 Graphs 1
Tags: Graphs
Author: nb705 (nb705)
Avg Rating: 3.5300
Avg Difficulty: 0.4211
Total ratings: 19



ID: 3619309
Created: 6:27pm, 07 Dec 2018
Consider a sorting algorithm which takes ... to sort a random array (n being the size of the input array)- 10 seconds for an input for n = 100- 10 seconds for an input for n = 1000- 10 seconds for an input for n = 10,000
a) T(n)
b) T(n2)
c) T(log n)
*d) T(1)
Explanation: Since no matter the size of n, the sorting time remains the same, henceT(1)If every time, n doubles, the time doubles, it would beT(n)If every time, n doubles, the time quadruples, it would beT(n2)If every time, n doubles, the time increases by a constant amount, it would beT(log n)
Tags: Sorting, Complexity
Author: nlc29 (nlc29 - permission to this course revoked)
Avg Rating: 3.2100
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3619305
Created: 6:26pm, 07 Dec 2018
An implementation of the selection sort algorithm takes 2 seconds to sort 10^5 random Integers. How long will the same algorithm likely take to sort 10^6 random integers?
a) 4 seconds
b) 20 seconds
c) 100 seconds
*d) 200 seconds
e) 1000 seconds
Explanation: Selection sort isT(n^2). Then, (n)^2=k*2 where k is a constant of proportionality. In this case k=1/2*(10^5)^2 and so (10^6)^2=k*ans, ans = 2*((10^6)^2)/((10^5)^2)=2*100=200
Tags: Sorting, Complexity
Author: wew21@bath.ac.uk (wew21 - permission to this course revoked)
Avg Rating: 3.7200
Avg Difficulty: 0.6800
Total ratings: 25



ID: 3619301
Created: 6:25pm, 07 Dec 2018
When working with a perfectly balanced, binary, AVL tree consisting of the values[84,112,201,267,273,1023,1749,2044] by traversing from start to finish the following output is given:84,201,267,112,1023,2044,1749,273What type of transversal was used?
a) A Level-Order Transversal
b) An In-Order Transversal
c) A Pre-Order Transversal
*d) A Post-Order Transveral
Explanation: A (Level-Order) would be273, 112,1749,84,267,1023,2044,201B (In-Order)would be84,112,201,267,273,1023,1749,2044C (Pre-Order) would be 273,112,84,267,201,1749,1023,2044D (Post-Order) is correct(84,201,267,112,1023,2044,1749,273)
Tags: Trees
Author: wp311 (wp311 - permission to this course revoked)
Avg Rating: 2.2000
Avg Difficulty: 1.4000
Total ratings: 10
==> Comment 1: The only issue is that there is not just one tree that could be formed using these numbers, so the answer may be difficult to get to. (by: moi21 [moi21])



ID: 3619297
Created: 6:23pm, 07 Dec 2018
Which of the following is the most efficient unstable sorting algorithm based on time complexity?
a) Selection sort
b) Merge sort
*c) Heap sort
d) Insertion sort
e) Bubble sort
Explanation: Selection sort - unstable but theta(n^2)Merge sort - can be theta(n) but it is stableHeap sort - theta(n*log(n)) and unstableinsertion - stablebubble - stable
Author: tc702 (tc702 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3619273
Created: 6:19pm, 07 Dec 2018
Which of the following is a stable sorting method?
a) Quick sort
*b) Merge Sort
c) Heap Sort
d) Select Sort
Explanation: Source: DA Lecture 12 Sorting 3
Tags: Sorting
Author: nb705 (nb705)
Avg Rating: 3.0900
Avg Difficulty: 0.2727
Total ratings: 11



ID: 3619247
Created: 6:13pm, 07 Dec 2018
Which one of these is one of Carey's rules of sorting
a) Choose a sorting algorithm that best meets your requirements regardless of complexity.
*b) Don't choose a sorting algorithm until you understand the requirements of the problem.
c) Always choose the simplest sorting algorithm.
d) The first thing to choose when starting a sorting problem is which algorithm to use.
Explanation: This is as quoted in the lectures
Author: tc702 (tc702 - permission to this course revoked)
Avg Rating: 3.0700
Avg Difficulty: 0.5333
Total ratings: 15



ID: 3619228
Created: 6:07pm, 07 Dec 2018
How do you calculate the load factor for a Hash Table
a) Load = number of pieces of data / total buckets in array
*b) Load = max.no of buckets required / total buckets in array
c) Load = max.no of buckets required / number of empty buckets
d) Load = 100 / number of empty buckets
Explanation: This is the formula quoted in lectures
Author: tc702 (tc702 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3619202
Created: 5:58pm, 07 Dec 2018
What are singly linked lists?
a) Linked lists with elements that have one pointer to the previous element.
b) Linked lists withelements that have one pointer to the previous element and one pointer to the next element.
*c) Linked lists withelements that have one pointer to the next element.
d) Linked lists withelements that have one pointer to either the previous or next element.
Explanation: Singly linked lists have elements with one pointer to the next element in the list. This allows for only one direction of traversal.
Tags: Lists
Author: db839 (db839 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.2308
Total ratings: 13



ID: 3619192
Created: 5:55pm, 07 Dec 2018
Why is removing an item an issue in closed hash tables that utilised linear probing to handle collisions?
a) Because once the value is removed the hash table becomes more empty, which makes searching through the table far less efficient.
*b) The value removed will cause issues if a value that has been linearly probed is searched for as the removed value may end a search prematurely with the empty space.
c) If removing values is allowed in a hash table, the linear probing insertion algorithm will no longer function correctly as it would allow values to be inserted into the incorrect spaces for searching.
d) Removing an item is not an issue in this case because linear probing is mainly concerned with inserting elements into a hash table as opposed to inserting them.
Explanation: Searching with linear probing functions by continuing a search at the next bucket if the current bucket does not hold the correct value being searched for, so if a value has been moved to another bucket using linear probing and a value in between the original hash value bucket and the new probed location in the table is removed, the search for that value will end prematurely at the empty space. Thus the searching of hash tables will become inaccurate as a result.
Tags: Search, Hashtables
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.2727
Total ratings: 11



ID: 3619162
Created: 5:47pm, 07 Dec 2018
Which ONE statement out of these are true?
a) The height of a node is dependant on it's children, the balance of a node is dependant on it's ancestors?
b) The height of a node is dependant on it's ancestors, the balance of a node is dependant on it's ancestors?
c) The height of a node is dependant on it's ancestors, the balance of a node is dependant on it's children?
*d) The height of a node is dependant on it's children, the balance of a node is dependant on it's children?
Explanation: Both the height and the balance of a node depends on the node children only.
Tags: Trees
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 2.7500
Avg Difficulty: 0.8333
Total ratings: 12



ID: 3619163
Created: 5:45pm, 07 Dec 2018
What is the purpose of linear probing in hash tables?
a) In order to fill up the hash table as much as possible in order to improve the efficiency of searching.
*b) To spread out collisions throughout the hash table so that values with the same hash value can still be stored and searched with minimal issue in the table.
c) To decide which value should be stored in the hash table when a collision occurs during insertion.
d) To ensure that any values attempting to be inserted at the end of the hash table is moved to the front of the table, not exceeding it's limits.
Explanation: Linear probing moves values that have the same hash value as a item already stored in the hash table to the next available bucket for storage. When searching for a value that has been moved, if the bucket does not contain the value searched for, the search will continue to the next bucket until it finds the value, completing the search, or finds an empty bucket, indicating the value is not in the table. This allows for collisions to still be stored in the hash table without disallowing values to be inserted into the table, up to a point.
Tags: Search, Hashtables
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 3.6500
Avg Difficulty: 0.5294
Total ratings: 17



ID: 3619153
Created: 5:43pm, 07 Dec 2018
Which of the following is in-order binary tree traversal?
a) Process current node.Process nodes in left subtree.Process nodes in right subtree.
*b) Process nodes in left subtree.Process current node.Process nodes in right subtree.
c) Process nodes in left subtree.Process nodes in right subtree.Process current node.
Explanation: In-order binary tree traversal processes the nodes in the left subtree first, then processes the current node and then processes the nodes in the right subtree.Answer A is pre-order traversal.Answer C is post-order traversal.
Tags: Trees
Author: db839 (db839 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.2727
Total ratings: 11



ID: 3619129
Created: 5:38pm, 07 Dec 2018
Which of these is the right description for the load of a hash table?
*a) Max # of keys to insert /Total buckets in the array
b) Min # of keys to insert / Total buckets in the array
c) Total buckets in the array /Max # of keys to insert
d) Average # of keys to insert / Total buckets in the array
Explanation: Lecture 9
Tags: Hashtables
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 3.1700
Avg Difficulty: 0.2500
Total ratings: 12



ID: 3619123
Created: 5:36pm, 07 Dec 2018
Which of the following is not a property of the Upper Bound O(n)?
a) If g(n) = O(f1(n)) and h(n) = O(f2(n)), then g(n)+h(n) = O(max{f1(n), f2(n)})
b) For all c>0: cf(n) = O(f(n))
c) If f(n) = O(g(n)) and g(n) = O(h(n)), then f(n) = O(h(n))
*d) If f1(n) = O(g(n)) and f2(n) = O(g(n)), then f1(n)f2(n)=O(g(n))
e) If g1(n) = O(f1(n)) and g2(n) = O(f2(n)), then g1(n)g2(n) = O(f1(n)f2(n))
Explanation: The answer is D. Consider the functions f1(n)==f2(n). Both f1(n)=O() andf2(n)=O(), however, f1(n)f2(n)==/=O().
Tags: Complexity
Author: mv371 (mv371 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.7500
Total ratings: 8



ID: 3619107
Created: 5:32pm, 07 Dec 2018
What is a stable sorting algorithm?
a) A sortingalgorithm that sorts each half of the list evenly.
b) A sorting algorithm that is not recursive.
*c) A sorting algorithm that keeps equal valued items in the same order as before sorting.
Explanation: A stable sorting algorithm re-orders items, keeping equal valued items in the same order as before the sorting started.
Tags: Sorting
Author: db839 (db839 - permission to this course revoked)
Avg Rating: 3.2000
Avg Difficulty: 0.2000
Total ratings: 15



ID: 3619105
Created: 5:32pm, 07 Dec 2018
Which of these would be a correctly balanced, binary, AVL tree consisting of the values [84,112,201,267,273,1023,1749,2044]?
a)
b)
c)
*d)
Explanation: It is not A since 273 is greater than 267It is not B since273 is greater than 267 (and it is not perfectly balanced).It is not C since the tree is not perfectly balanced as the number of nodes in the left and right subtrees at 1749 does not differ by at most 1.D is correct.
Tags: Trees
Author: wp311 (wp311 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3632420
Created: 5:25pm, 07 Dec 2018
Which of the following has the correct time complexities for the following sorting algorithms.
a) Selection sort always ?(n^2)Shell sort approx ?(n^1.25)Quick sort always ?(n log(base 2)n)
b) Selection sort always ?(n^2)Insertion sort?(n^2) worst case, or?(n log(base 2)n) best caseHeap sort always?(n log(base 2)n)
*c) Selection sort always ?(n^2)Shell sortapprox ?(n^1.25)Merge sort always ?(n log(base 2)n)
d) None of the above are all true
Explanation: For a) Quicksort only has ?(n log(base 2) n) average, but ?(n^2) for already/mostly/reverse ordered arrays.For b) Insertion sort has?(n) for best case
Tags: Complexity
Author: mca42 (mca42 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.9773
Total ratings: 44



ID: 3619083
Created: 5:25pm, 07 Dec 2018
What type of graph would I use to represent a mutual exchange of Christmas presents?
*a) Undirected graph
b) Directed graph
Tags: ADTs, Graphs
Author: jr934 (jr934)
Avg Rating: 2.5000
Avg Difficulty: 0.2500
Total ratings: 16



ID: 3619082
Created: 5:24pm, 07 Dec 2018
Which of the following scenarios would use an adjacency matrix over an adjacency list?
a) Representing a map of Bath with buildings as the nodes and the streets connecting them as the edges.
b) A graphical representation of YouTube with user accounts being the nodes and the relationship being if they are subscribed to the channel or not.
c) A graph of all the train systems in the UK with the nodes being train stations and the relationships being if a train goes directly from one stop to the other.
*d) A graphical depiction of all the ports in the world with companies offering trips to nearly every other port directly. The nodes being the ports, and the relationship being whether or not a ship travels between them.
Explanation: Despite there being a large number of ports, the situation describes that there is a ship travelling from one to almost every other port in the world, meaning the number of relationships is much larger than the number of nodes in the graph, making it a dense graph requiring an adjacency matrix.
Tags: Graphs
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.6667
Total ratings: 9



ID: 3619081
Created: 5:24pm, 07 Dec 2018
Which of the following best describes a doubly linked list?
a) Two pointers to the previous element.
*b) One pointer to previous element and one pointer to next element.
c) Two pointers to the next element.
d) Two pointers to the previous element and two pointers to the next element.
Explanation: Unlike a singly linked list, in which every element has a pointer to the next element, in a doubly linked list each element has a pointer to the previous element and a pointer to the next element. This allows traversal in both directions.
Tags: Lists
Author: db839 (db839 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3619075
Created: 5:22pm, 07 Dec 2018
When are O(Big-Oh), ?(Big-Theta), and O(Big-Omega), meant to be used for estimating complexity/run times/instructions required?
*a) O - To over-estimate and identify the upper-bound, aka Worst case.? - Wherever possible, as it states the exact complexity.O - To under-estimate and identify the lower-bound, aka Best case.
b) O - To under-estimate and identify the lower-bound, aka Best case.? - Wherever possible, as it states the exact complexity.O -To over-estimate and identify the upper-bound, aka Worst case.
c) O - Wherever possible, as it states the exact complexity.? -To over-estimate and identify the upper-bound, aka Worst case.O - To under-estimate and identify the lower-bound, aka Best case.
d) O - To under-estimate and identify the lower-bound, aka Best case.? - To over-estimate and identify the upper-bound, aka Worst case.O - Wherever possible, as it states the exact complexity.
e) O - Wherever possible, as it states the exact complexity.? - To under-estimate and identify the lower-bound, aka Best case.O -To over-estimate and identify the upper-bound, aka Worst case.
Explanation: From lecture 4:When do I use them??(�) whenever you can: �the complexity is exactly of the order n2�O(�) for over-estimating: �it can�t be more than n3�O(�) for under-estimating: �it must be at least n�
Tags: Complexity
Author: jjb72 (jjb72 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 0.3158
Total ratings: 19



ID: 3619070
Created: 5:20pm, 07 Dec 2018
In what type of hash table is linear probing used?
a) Open hash table
*b) Closed hash table
c) Neither, it is not used for hash tables
Tags: ADTs, Lists, Hashtables
Author: jr934 (jr934)
Avg Rating: 3.4000
Avg Difficulty: 0.3500
Total ratings: 20



ID: 3619065
Created: 5:18pm, 07 Dec 2018
For a heap in an array if the data for a non-root node is in array[i], where is its parent?
a) array[0]
*b) array[(i-1)/2]
c) array[i-1]
d) array[arraySize-i]
Tags: ADTs, Lists
Author: jr934 (jr934)
Avg Rating: 3.9400
Avg Difficulty: 0.7500
Total ratings: 16



ID: 3619054
Created: 5:10pm, 07 Dec 2018
Which of these sorts is unstable?
*a) Selection Sort
b) Merge Sort
c) Bubble Sort
d) None of the above
Explanation: See D&A midterm revision lecture, slide 31.
Tags: Sorting
Author: rlw44 (rlw44 - permission to this course revoked)
Avg Rating: 3.2900
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3619045
Created: 5:07pm, 07 Dec 2018
for the following AVL tree, what tree will be the result of adding the string "10" 5 / \ 2 7 / \ / \ 0 3 6 9
a) 5 / \ 2 7/\ /\0 3 6 9 \ 10
*b) 5 / \ 2 7 /\ /\0 3 6 9 \ 10
c) 5 / \ 10 7 /\ /\ 0 2 6 9 \ 3
d) 5 / \ 3 9 /\ /\0 2 7 10 / 6
Explanation: the string "10" is between 0 and 2 as it is not ordered numericallyno rotation is needed after insertion as it is balanced
Tags: Trees
Author: aro31 (aro31 - permission to this course revoked)
Avg Rating: 3.1700
Avg Difficulty: 1.1667
Total ratings: 12
==> Comment 1: it's a string Q.Q (by: sammie [sh2389])
==> Comment 2: Wrong confirm button, this is a string... (by: samz285 [gz285])



ID: 3619042
Created: 5:06pm, 07 Dec 2018
Which of the following is NOT true for an open hash table:
a) If you want to store up to 5000 items, and have an average number of steps to find/insert an item = 1.3. Then you need approximately 8000 buckets.
*b) Increasing the load factor does not affect the average number of steps needed to insert/find an item.
c) Open hash tables use pointers to singly linked lists in each bucket instead of the values directly.
d) Hash tables with a load factor of 0.1 allow very quick searching/inserting but wastes a lot of memory.
e) None of the above
Explanation: Although the increase is small in an open hash table, an increase in load factor still increases the average number of steps needed.
Tags: Hashtables
Author: mca42 (mca42 - permission to this course revoked)
Avg Rating: 2.8200
Avg Difficulty: 0.5455
Total ratings: 11
==> Comment 1: Statements A and B are true for this question given the information. (by: th779 [th779])
====> Reply 1: The question is which is not true, and B is false



ID: 3625771
Created: 5:05pm, 07 Dec 2018
Which of these is the definition of the lower bound?
a) g(n) = O(f(n)) ("g(n) is Oh of f(n)") iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
*b) g(n) = O(f(n)) ("g(n) is Big- Omega of f(n)") iff there are constants c>0 and n0>0 so that for all n>n0 : g(n) = c f(n)
c) g(n) = ?(f(n)) ("g(n) is Big- Theta of f(n)") iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n) = c1f(n) and g(n) = c2 f(n)
Explanation: See D&A midterm revision lecture, slide 9
Tags: Complexity
Author: rlw44 (rlw44 - permission to this course revoked)
Avg Rating: 3.2300
Avg Difficulty: 0.3462
Total ratings: 26



ID: 3619029
Created: 5:00pm, 07 Dec 2018
Which are the following statements are true?
a) Array is better than linked list at inserting a new item at the front
b) Linked list is easier to program
c) It's quicker to find an item in a linked list than in an array
d) It's quicker to remove an item from the middle of an array than from a linked list
*e) None of the above
Explanation: They're true if switched around, see lecture notes 7
Tags: Lists, Search
Author: msu26 (msu26 - permission to this course revoked)
Avg Rating: 3.5600
Avg Difficulty: 0.5000
Total ratings: 18



ID: 3619021
Created: 4:56pm, 07 Dec 2018
Which of these is the definition of a directed graph?
a) All edges are bi-directional. You can go either way along any edge.
*b) All edges go from one vertex to another in a specific direction.
Explanation: See D&A Lecture 17, slide 6
Tags: Graphs
Author: rlw44 (rlw44 - permission to this course revoked)
Avg Rating: 3.5600
Avg Difficulty: 0.1875
Total ratings: 16



ID: 3619017
Created: 4:55pm, 07 Dec 2018
There is a closed hash table with 120 slots, the number of elements stored in this hash table currently is 90.What is the average number of steps needed to find an element?
a) 4
*b) 2.5
c) 5
d) 2.16
e) 3.28
Explanation: Average # of steps = �(1+ 1/(1-L)) where L is load factor.L = Keys/slotsL = 90/120L = 0.75so �(1+ 1/(1-.75))�(1+ 1/(.25))�(1+ 4)�(5)Average # of steps = 2.5
Tags: Hashtables
Author: danielwa (dwa23 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.5789
Total ratings: 19



ID: 3619009
Created: 4:50pm, 07 Dec 2018
What is the worstcase complexity for the "inTree" method for a binary AVL tree with height of m layers?
*a) m
b) m2
c) m3
d) 1
e) log(m)
Explanation: for m layers complexity is m, forn nodes complexity is log2(n)
Tags: Trees
Author: aro31 (aro31 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.5000
Total ratings: 8



ID: 3619008
Created: 4:50pm, 07 Dec 2018
Which sorting algorithm would result in the following steps while sorting [2,9,7,4] ?[2,9,7,4] ?[2,9,7,4][2,9,7,4] ?[2,9,4,7][2,9,4,7] ?[2,4,7,9]
a) Selection Sort
*b) Insertion Sort
c) Bubble Sort
Explanation: Selection sortLooks at the entire array and selects the smallest element and swaps it with the first element.[2,9,7,4] ? [2,9,7,4] ? [2,4,7,9]Insertion sortMerges [1st] and [2nd] elements then merges [3rd] and [4th] elements, then merges [1st,2nd] and [3rd,4th].Pass 1[2,9,7,4] ?[2,9,7,4]Pass 2[2,9,7,4] ?[2,9,4,7]Pass 3[2,9,4,7] ?[2,4,7,9]Bubble sortShifts elements along one at a time like so:Pass 1[2,9,7,4] ?[2,9,7,4]Pass 2[2,9,7,4] ?[2,7,9,4] ?[2,7,4,9]Pass 3[2,7,4,9] ?[2,4,7,9]
Tags: Sorting
Author: wp311 (wp311 - permission to this course revoked)
Avg Rating: 3.0000
Avg Difficulty: 0.9231
Total ratings: 13
==> Comment 1: Looks like merge sort, not insertion (by: msu26 [msu26])
==> Comment 2: None of the above are correct. The steps for insertion sort would be:[] - > [] - > [] (by: rvs27 [rvs27])
====> Reply 1: (comment completed)[2,9,7,4] - > [2,7,9,4] - > [2,4,7,9]



ID: 3618994
Created: 4:43pm, 07 Dec 2018
What is the complexity of the following algorithm?for (int i=0; i<n; i++){ for (int j=1; j<n; j=j*2){ doTheThing; }}
a) n
b) n^2
c) logn
*d) nlogn
Explanation: outer loop has complexity n, inner loop has complexity logn. Thus we have nlogn.
Tags: Complexity
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.5769
Total ratings: 26



ID: 3618991
Created: 4:42pm, 07 Dec 2018
Which of these IS a valid AVL Tree?
a) 10 / \ 6 14 / \ / 4 7 9
b) 10 / \ 8 11 / \ 5 12 / \ 4 13
c) 10 / \ 8 12 / / \ 4 11 13 / 2
*d) 10 / \ 7 14 / \ \ 5 9 18
e) None of the above
Explanation: a) is not a BST because of 9.b) node 8 & 12 are unbalanced.c) node 8 is unbalanced.
Augmented explanation 1: sorry for b, 11 is unbalanced, not 12 (by: mca42 [mca42])
Tags: Trees
Author: mca42 (mca42 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6154
Total ratings: 13



ID: 3618988
Created: 4:41pm, 07 Dec 2018
What does a 'case' refer to when talking about an algorithm's time complexity?
*a) A case is the measure of resources an algorithm requires given a particular set of data. There exists 3 cases, Best Case, Worst Case, and Average Case.
b) A case is the measure of resources an algorithm requires given a particular set of data. There exists 2 cases, Best Case and Worst Case.
c) A case is the measure of resources an algorithm requires given a particular set of data. There exists 2 cases, Best Case and Average Case.
d) A case refers to how an algorithm handles a set of data
e) A case is a leather bag that contains objects
Tags: Complexity
Author: kwc43 (kwc43 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.2000
Total ratings: 20



ID: 3618987
Created: 4:41pm, 07 Dec 2018
Which of the following statements about linear data structures is FALSE?
a) Linked lists can be implemented to have constant time for adding elements to the end.
*b) It is always faster to find an element in a skip list that a linked list.
c) An array should be used if the amount of data is known and constant.
d) The average runtime complexity for performing a find in a linked list is n.
e) They are all false.
Explanation: A. You can add a reference to the tail for adding to the end. - TRUEB. A skip list is probabilistic so not necessarily - FALSEC. An array is very fast for accessing data and is easy to implement. It works well when the amount of data is always the same.D. See lecture 7
Tags: Lists
Author: bts26 (bts26 - permission to this course revoked)
Avg Rating: 3.8500
Avg Difficulty: 0.6154
Total ratings: 13



ID: 3618983
Created: 4:40pm, 07 Dec 2018
What is the adjacency matrix for this directed graph?
*a)
b)
c)
d)
e) None of these options are correct.
Explanation: The answer is A because an adjacency matrix for a directed graph shows if there is an edge from vertex I to vertex J (where vertex I is represented by the rows in the table and vertex J is represented by the columns in the table). In this example, if there is an edge then the cell contains a 1. Otherwise there is a 0 at that position in the table.The answer is not D because D is the adjacency matrix for the undirected version of this graph.
Tags: Graphs
Author: jessmead (jlm77 - permission to this course revoked)
Avg Rating: 4.1300
Avg Difficulty: 0.5333
Total ratings: 15
==> Comment 1: You need to say which nodes on the table are the from nodes ect... (by: cro26 [cro26])



ID: 3618968
Created: 4:36pm, 07 Dec 2018
True or false, Insertion Sort's time complexity is dependent on the configuration of data.
*a) True
b) False
Tags: Complexity
Author: kwc43 (kwc43 - permission to this course revoked)
Avg Rating: 2.9300
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3618966
Created: 4:35pm, 07 Dec 2018
What is the definition of a stable sorting algorithm?
a) Stable sorting algorithms are algorithms suitable for large number of elements
b) Stable sorting algorithms make use of the divide-and-conquer paradigm
*c) Stable sorting algorithms maintain the relative order of records with equal keys.
d) stable sorting re-orders items without taking into account their initial ordering.
Explanation: Refer to Sorting 1 slides
Author: ubza20 (ubza20)
Avg Rating: 3.8700
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3618961
Created: 4:33pm, 07 Dec 2018
What is the average performance for insertion sort?
*a)
b) O(n log n)
c) O(n)
Tags: Complexity
Author: adam (ap2280 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.1818
Total ratings: 11



ID: 3618960
Created: 4:32pm, 07 Dec 2018
Given that selection sort has a time complexity of O(n^2) for an unsorted set of data, what is the time complexity of selection sort for a sorted set of data?
*a) O(n^2)
b) O(1)
c) O(n)
d) O(n log n)
e) None of the above
Explanation: O(n^2) as selection sort's time complexity is independent of how the data is sorted
Tags: Complexity
Author: kwc43 (kwc43 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.6000
Total ratings: 10



ID: 3618954
Created: 4:31pm, 07 Dec 2018
Which of the following best describes a full binary tree?
*a) Every leaf node has the same depth and every non-leaf has exactly two children.
b) Every node has at most two children nodes.
c) Any node can have any number of children nodes
d) Given any node, all nodes in its left sub-treemust be less than the node�s value.Given any node, all nodes in its right sub-treemust be greater (or equal) than the node�s value.
Explanation: Refer to Trees Slides 1 and 2
Tags: Trees
Author: ubza20 (ubza20)
Avg Rating: 3.7000
Avg Difficulty: 0.7000
Total ratings: 10



ID: 3618951
Created: 4:29pm, 07 Dec 2018
A collision in a hash table is:
*a) When two different keys are mapped to the same table address.
b) When two table addresses are mapped to the same key.
c) When a table address does not have a mapped key.
Tags: Hashtables
Author: adam (ap2280 - permission to this course revoked)
Avg Rating: 2.8700
Avg Difficulty: 0.2000
Total ratings: 15



ID: 3618929
Created: 4:23pm, 07 Dec 2018
What is the worst case complexity of quick sort and in what scenario will this occur?
a) O(nlogn) the pivot is repeatedly chosen as the largest element of the list.
*b) O(n^2) the pivot is repeatedly chosen as the smallest element of the list.
c) O(nlogn) the pivot is randomly chosen.
d) O(n^2) the pivot is chosen randomly on a list which is in reverse order.
e) O(n) the pivot is chosen as either the largest or smallest element each time.
Explanation: The complexity of the worstcase is O(n^2) ruling out A, C and E.The average case when the pivot is chosen randomly should give complexity of O(nlogn)The worst case is when the pivot gives one sublist of (n-1) elements and the other sublist with 1 element. This occurs when either the smallest element is chosen repeatedly or the largest element is chosen repeatedly.See lecture: Sorting3orhttps://en.wikipedia.org/wiki/Quicksort#Worst-case_analysis
Tags: Complexity
Author: kb672 (kb672 - permission to this course revoked)
Avg Rating: 3.7400
Avg Difficulty: 0.7895
Total ratings: 19



ID: 3618926
Created: 4:22pm, 07 Dec 2018
What is Quicksort's best case performance?
a) O(n)
b)
*c) O(n log n)
Augmented explanation 1: The best case for any searching algorithm is n log (n)?(n x log2(n)?) - So at each level, we do n operations, and we have log2(n) levels, so we get the above result- worst case is when the array is sorted (or in reverse order) since we will only remove 1 element from the list each sort - ?(N^2 ) (by: nlc29 [nlc29])
Tags: Complexity
Author: adam (ap2280 - permission to this course revoked)
Avg Rating: 3.3900
Avg Difficulty: 0.3889
Total ratings: 18



ID: 3618924
Created: 4:22pm, 07 Dec 2018
What is the order for traversal of a binary tree with n elements?
a)
*b)
c)
d)
e) None of the above
Explanation: When traversing the tree we only need to visit each node once.
Tags: Trees
Author: bts26 (bts26 - permission to this course revoked)
Avg Rating: 3.2700
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3618917
Created: 4:19pm, 07 Dec 2018
What is the wprst case run time complexity of merge sort?
*a) nlogn
b) log n
c) n
d) n^3
e) N^2
Explanation: It is nlogn
Tags: Sorting, Complexity
Author: bu220 (bu220)
Avg Rating: 3.6200
Avg Difficulty: 0.2308
Total ratings: 13



ID: 3618897
Created: 4:13pm, 07 Dec 2018
What type of binary tree traversal does this process describe?:Step 1. Traverse the left subtreeStep 2. Traverse the right subtreeStep 3. Visit the root
a) Inorder Traversal
b) Preorder Traversal
*c) Postorder Traversal
d) Outorder Traversal
Explanation: The answer is: Postorder Traversal. A good way to remember the different traversals is the order in which steps happen as each traversal is made up the the same basic steps, current (C), left(L), and right (R).Preorder is: Current, then left, then right, so C L R.Inorder is: L C RPostorder is : L R C
Tags: Trees
Author: ll915 (ll915 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3618892
Created: 4:12pm, 07 Dec 2018
Which of the following statements are true?:
a) Quick sort is unstable and has a best case time complexity of O(n log n)
b) Quick sort is unstable and has a worst case time complexity of O(n2)
c) Quick sort is stable and has a best case time complexity of O(n log n)
*d) A and B
e) None of the above
Explanation: Quick sort is unstable, as sorting with quicksort re-orders items without taking into account their initial ordering.Quick sort's best and case preformance is O(n log n).Quick sort's worst case preformance is O(n2). However this only occurs when the array is already sorted in same, or reverse, order, or when all elements are same.
Tags: Sorting, Complexity
Author: ll915 (ll915 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 15



ID: 3618886
Created: 4:10pm, 07 Dec 2018
"In this type of search, a sequential search checks each element of a list, one by one, until a match is found or the whole list has been searched"Describes which searching algorithm?
a) Binary Search
b) Interpolation Search
c) Jump Search
*d) Linear Search
e) Exponential Search
Explanation: This describes linear search, as each element in the list is checked sequentially until a match is found.
Tags: Search
Author: ll915 (ll915 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2500
Total ratings: 16



ID: 3618862
Created: 4:02pm, 07 Dec 2018
Given n = 4, what is the final value of k in the below algorithm.int k = 0;for (int i=0; i<n; i++){ for (int j=n; j>0; j=j/2){ k++; }}
*a) k = 12
b) k = 15
c) k = 16
d) k = 20
e) None of the above
Explanation: j = 4 then 2 then 1 then 0 (won't run at 0), so we have k++ * 3, outer loop will run 4 times. So, k = 3*4=12
Tags: Applications
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 2.5300
Avg Difficulty: 1.0667
Total ratings: 15



ID: 3618860
Created: 4:02pm, 07 Dec 2018
You have two different algorithms to accomplish a given task. One algorithm runs in time 2nand another runs in 500 time. The maximum value of n in the algorithm is 10. What run time should be used?
*a) 2n
b) 500
Explanation: Up to n = 10.5, 2nis smaller than 500 .
Tags: Complexity
Author: alexemurphy (aem60 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.2500
Total ratings: 8



ID: 3618815
Created: 3:48pm, 07 Dec 2018
What is the most efficient type of number to choose when decided on the size of a hash table?
a) Random
*b) Prime
c) Power of 2
d) Power of 10
Explanation: Choosing a prime number results in more even distribution and fewer collisions.
Tags: Hashtables
Author: alexemurphy (aem60 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3618785
Created: 3:41pm, 07 Dec 2018
Which of these would be an appropriate hashing algorithm for the following list of names:Harry, Morgana, Ron, Gandalf, Derren, Alastair, Merlin, Hermione, Mordred
a) Assign a value randomly to each name and store it at the corresponding position in the hash table
b) Use the numerical value in the alphabet of the fifth letter of each name, and store it in the corresponding position in the hash table.
*c) Use the numerical value in the alphabet of the first letter of each name, and store it in the corresponding position in the hash table.
Explanation: Assigning values randomly means that you cannot find it when looking up names later.Using the fifth letter is not ideal as not all names have five letters, meaning that future names added may not be able to be stored.Using the first letter allows you to store and find names later.
Tags: Hashtables
Author: skybeak (cb2027 - permission to this course revoked)
Avg Rating: 3.3100
Avg Difficulty: 0.5385
Total ratings: 13



ID: 3618778
Created: 3:38pm, 07 Dec 2018
Given n = 5, what will be the final value of k in the algorithm below & what is it's run time complexity, which we'll call O?int k = 0;for (int i=0; i<n; i++){ for (int j=i; j<n; j++){ k = k++; }}
a) k = 15, O = n
b) k = 12, O = n^2
*c) k = 15, O = n^2
d) k = 18, O = n^2
e) None of the above.
Explanation: i = 0, k++ * 5. i = 1, K++ * 4. ... i = 4, k++ * 1. k = 5+4+3+2+1 = 15.Nested loops implies complexity of n^2.Please correct me if you believe I am wrong.
Tags: Applications, Complexity
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.7647
Total ratings: 17



ID: 3618754
Created: 3:31pm, 07 Dec 2018
What rough value bounds the maximum height of an AVL tree
*a) 1.44*log2(N)Where N is the number of nodes in the tree
b) 3log2(N)Where N is the number of nodes in the tree
c) N/3Where N is the number of nodes in the tree
d) H=Nc^2Where H is the height of the tree, N is the number of nodes and c is the balance constant.
Explanation: The maximum height of an AVL tree is bound by roughly 1.44*log2(N) as the height cannot exceed the (rounded up) value of this.
Tags: Trees
Author: skybeak (cb2027 - permission to this course revoked)
Avg Rating: 3.6200
Avg Difficulty: 1.0769
Total ratings: 13



ID: 3618742
Created: 3:28pm, 07 Dec 2018
Which of the following is NOT the difference between a Graph and a Binary Tree?
a) In Binary Trees, there are many rules / restrictions for making connections between nodes through edges.In Graphs, no such rules/ restrictions are there for connecting the nodes through edges.
b) In Binary Trees, there is parent child relationship so flow can be there with direction top to bottom or vice versa.In Graphs, there is no such parent child relationship.
*c) In Binary Trees, some children can have multiple parentsin Graphs, you cannot have loops or circuits
d) A Binary Tree is special form of graph i.e. minimally connected graph and having only one path between any two vertices.In Graphs, there can be more than one path i.e. graph can have uni-directional or bi-directional paths (edges) between nodes
Tags: Graphs, Trees
Author: ubza20 (ubza20)
Avg Rating: 3.3600
Avg Difficulty: 0.5714
Total ratings: 14



ID: 3618737
Created: 3:26pm, 07 Dec 2018
Which of the following answers describes the correct process of collision handling in a closed hash table with linear probing?
a) When collision: Program Crashes
b) When collision: Move backwards across hash table until open slot is found If reach end of hash table: Loop back to the end If no open slot: Return that hash table is full
*c) When collision: Move across hash table until open slot is found If reach end of hash table: Loop back to the beginning If no open slot: Return that hash table is full
d) When collision: Move across hash table until open slot is found If reach end of hash table: Loop back to the beginning If no open slot: Crash
e) When collision: Move forwards across hash table until open slot is found If reach end of hash table: Return that hash table is full
Explanation: Answer C: correctin the case of a collision in table [1,2,-,3,4,5] (where ' - ' represents an open slot)let's say we're inserting something with hash value 2: it will detect that there is already something in that hash slot, and move across to the next slot, which in this case is openlet's say now we're inserting something with hash value 3: it will detect that there is already something in that hash slot, move across to the next slots, which are full until it hits the end of the table (5) and then loop back to the beginning (1) and move across again until it hits where the collision occured again (indicating table is full) and return that the table is full and that the item cant be inserted.Answer A: noAnswer B: the moving across is done towards the end of the table not the beginningAnswer D: look at AAnswer E: missing the looping back
Tags: Hashtables
Author: gc606 (gc606 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.5385
Total ratings: 13



ID: 3618722
Created: 3:19pm, 07 Dec 2018
Which of these is the correct definition of a stable sorting algorithm?
a) A sorting algorithm that sorts a list without taking into account the initial ordering of elements.
*b) A sorting algorithm that takes into account the initial order of a list and maintains the order of equal-valued elements.
c) A sorting algorithm that sorts a list in reverse order.
Explanation: A sorting algorithm that takes into account the initial order of a list and maintains the order of equal-valued elements. As defined in lectures.
Tags: Sorting
Author: skybeak (cb2027 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.2727
Total ratings: 11



ID: 3618682
Created: 3:02pm, 07 Dec 2018
What is the complexity of the following code?int f( int n, int m) { int count = 0; for (int i = n; i > 0; i--) { for (int j = 0; j < m; j = j + 2) { count++; } } return count;}
a) max{ ?(n),?(m) }
b) ?(n* log(m))
*c) ?(n*m)
d) ?(n + m)
e) ?(n2)
Explanation: This function contains a nested loop where the operation in the inner loop runs approximately m/2 times giving us ?(m) for each iteration.This is iterated n times and so the complexity of the function as a whole is ?(n*m)
Tags: Complexity
Author: anoushka (as2934 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.6667
Total ratings: 18



ID: 3618664
Created: 2:56pm, 07 Dec 2018
Which sorting algorithm would have the following intermediate steps while sorting ?
*a) Selection Sort
b) Bubble Sort
c) Insertion Sort
Explanation: Selection sortLooks at the entire array and selects the smallest element (i.e. the 1 at the 4th index) and swaps it with the first element (i.e. the 4) giving. This process is then repeated with the 2 and the 3 giving the sorted array:Bubble sortTakes a lot more steps. It shifts elements along one at a time like so:Pass 1 Pass 2 Pass 3 Insertion sortLooks at the first two elements and shifts the 3 to the front, then the first three elements and shifts the 2 to the front and then all four elements and shifts the 1 to front:
Tags: Sorting
Author: hpa22 (hpa22 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 3618621
Created: 2:33pm, 07 Dec 2018
Which of the following statements is false?
a) Insertion sort is less efficient for large lists.
b) Quick sort is a comparison sort.
c) Merge sort is a divide and conquer algorithm.
*d) Shell sort is stable.
Explanation: Shell sort is not stable because items that are far apart (H items apart) can move far distances jumping earlier in the array than items that have their same value
Tags: Sorting
Author: resh (rc682 - permission to this course revoked)
Avg Rating: 3.4200
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3618582
Created: 2:09pm, 07 Dec 2018
Which of these formulas will provide theload factor of a hash table?
a)
b)
c)
*d)
e) None of the above
Explanation: As shown in lecture 9, the formula produces the load factor of a hash table.
Tags: ADTs, Hashtables
Author: fawm20 (fawm20 - permission to this course revoked)
Avg Rating: 3.0700
Avg Difficulty: 0.1333
Total ratings: 15



ID: 3618580
Created: 2:07pm, 07 Dec 2018
What's the difference between an open and closed hash table?
*a) In a closed hash table our data is stored in a fixed-size array, there are a fixed (closed) number of buckets for us to put values whereas in an open hash table instead of storing our values directly in array, each array bucket points to a linked list of values.
b) A closed hash table stores values in a linked list and an open hash table stores data directly in an array.
c) A closed hash table stores values in a tree and an open hash table stores data in an array.
d) A closed hash table stores values in an array and an open hash table stores data in a tree.
Explanation: The difference is to avoid the common drawbacks of a closed has table. Which are fixed capacity and it is difficult to delete items.
Tags: Hashtables
Author: resh (rc682 - permission to this course revoked)
Avg Rating: 3.2400
Avg Difficulty: 0.2353
Total ratings: 17



ID: 3618535
Created: 1:46pm, 07 Dec 2018
What is the average runtime of Skip List?
*a) O(logn)
b) O(n)
c) O(nlogn)
d) O(n^2)
Explanation: There are O(logn) levels because you half the number of items at each level. You will visit a maximum of 2 nodes per level. So search time is O(logn)
Tags: Lists, Complexity
Author: resh (rc682 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 3618749
Created: 1:36pm, 07 Dec 2018
I am implementing a Binary Search Tree (BST). Which of the following statements do not have to be true about my BST?
*a) It MUST have connected notes with a linked list.
b) It MUST have a reference to a root node
c) A given node MUST have all nodes in its right sub-tree greater or equal than node's value
d) All techniques for traversal in BST MUST have O(n)time-complexity
Explanation: Using a Linked List in your implementation is optional - (Source: Lecture 14, Slide 9).We may use Arrays,type of Node class etc--Crucially, it's important to recognise the Binary Search Tree has a higher abstraction, it doesn't specify how it's to be implemented. It needs to meet certain criteria, as well as being a Binary Tree, that allows for optimal traversal.
Tags: ADTs, Lists, Trees
Author: ab2339 (ab2339 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.8947
Total ratings: 19



ID: 3618489
Created: 1:18pm, 07 Dec 2018
What technique can avoid collision?
a) Make the hash function appear random
b) Use uniform hashing
c) Linear Probing Insertion
d) Use an open Hash Table
*e) All of the above
Explanation: A random hash function random may not be the best choice but it does help avoid collisions along with uniform hashing (giving every element equal chance to hash into any of the slots available in the array) as well as linear probing and using an open Hash Table
Tags: Hashtables
Author: rpnt (rnt21)
Avg Rating: 2.8600
Avg Difficulty: 0.7857
Total ratings: 14
==> Comment 1: Though these criteria are true, they may not be expected to know on the exam as what was discussed in the lectures did not include uniform hashtables and random hash functions. (by: bc678 [bc678])
==> Comment 2: Isn't C and D ways of dealing with collisions not avoiding them? Not sure about A and B (by: cro26 [cro26])



ID: 3618482
Created: 1:14pm, 07 Dec 2018
What are the two common types of graph traversal?
a) Depth-first and post-order
*b) Depth-first and breadth-first
c) Pre-order and post-order.
Explanation: Pre-order and post-order are tree traversal methods. Breadth-first and depth-first are two different ways to traverse a graph.
Tags: Graphs, Search
Author: dm893 (dm893 - permission to this course revoked)
Avg Rating: 3.4300
Avg Difficulty: 0.1739
Total ratings: 23



ID: 3618480
Created: 1:13pm, 07 Dec 2018
Which of these sorting algorithms has theworst space efficiency?
a) Quicksort
*b) Mergesort
c) Shell Sort
d) Selection Sort
e) Heapsort
Explanation: Quicksort has O(log n) space complexity. All of the others have O(1) complexity, with the exception of mergesort, which has a complexity of O(n).
Tags: Sorting, Complexity
Author: fawm20 (fawm20 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3618475
Created: 1:09pm, 07 Dec 2018
What are the complexity of linear search algorithm, binary search algorithm and merge sort algorithm respectively?
*a) O(n), O(logn), O(nlogn)
b) O(n^2), O(logn), O(nlogn)
c) O(nlogn), O(n), O(n^2)
Explanation: It is the definition of different sort algorithms
Tags: Complexity
Author: novae (yl2893 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.4706
Total ratings: 17



ID: 3618472
Created: 1:07pm, 07 Dec 2018
What is transitivity? In terms of time complexity.
a) If f1(n) = O(g1(n)) & f2(n) = O(g2(n)) then f1(n) + f2(n) = O(max{f1(n), f2(n)})
b) If f1(n) = O(g1(n)) & f2(n) = O(g2(n)) then f1(n) + f2(n) = O(min{f1(n), f2(n)})
*c) If f(n) = O(g(n)) & g(n) = O(h(n)) then f(n) = O(h(n))
d) c*f(n) = Of(n), for all c>0
e) None of the above
Explanation: Lecture 4 - Complexity 2, slide 7.
Tags: Complexity
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.6800
Avg Difficulty: 0.5789
Total ratings: 19
==> Comment 1: Ok wow, just wow. This question... I mean, I'm blown away. Now I've read a lot of Multiple Choice Data Structures and Algorithms Questions in my time but this one takes the cake. A lot of you may say "Oh this guy's just another commenter" and "He knows nothing of the complexity of Multiple Choice Data Structures and Algorithms Questions" but to them, I say "O! now be gone; more light and light it grows. Rom. More light and light; more dark and dark our woes.� (That's Shapeskear for any of you uneducated people out there haha). What I'm perfectly trying to explain to you is that this question of all is by far one of the most intelligent and insiteful questions i have come across in this barren landscape of questions that you call Multiple Choice Data Structures and Algorithms Questions. But now I shall take my leaf and if any of you...*sniggers*....simpletons out there didn't understand this comment, then about you do yourself a favour and pick up a book. I've been listening to The Art of War by Sun Tzu on Audible. This comment was made possible by audible. Audible is the leading provider of audio books. They have over 180,000 of audio books to choose from. Visit www.audible.com for one free audio book! This is the best place for audio books and I cannot recommend it enough. (by: geordieross [gjcr20])



ID: 3618465
Created: 1:02pm, 07 Dec 2018
Which of these statements istrue? An adjacency matrix is...
a) A 2-dimensional array which can only be used to represent an undirected graph
b) A 2-dimensional array in which all arr[x][y] = arr[y][x]
c) A data structure that cannot be represented as a 1-dimensional array
d) All of the above
*e) None of the above
Explanation: A - False: It can be used to represent undirected graphs by making both arr[x][y] and arr[y][x] equal.B - False: This is only the case when representing undirected graphs.C - False: See lecture 17 for details.
Tags: ADTs, Graphs
Author: fawm20 (fawm20 - permission to this course revoked)
Avg Rating: 3.1800
Avg Difficulty: 0.7647
Total ratings: 17



ID: 3618462
Created: 1:01pm, 07 Dec 2018
Add new nodes with the following datas in order : 50, 76, 21, 4, 32, 100, 64, 52, use the tree insertion algorithm, find out the value which the node based on.
*a) 52
b) 64
c) 32
d) 100
Explanation:
Tags: Trees
Author: novae (yl2893 - permission to this course revoked)
Avg Rating: 1.1100
Avg Difficulty: 0.8889
Total ratings: 9
==> Comment 1: Either the question does not make sense or the answer is 50, and you've not included it. (by: nmparrott [nmp31])



ID: 3618461
Created: 1:00pm, 07 Dec 2018
In which order will mergesort perform the WORST?
a) 1,2,3,4,5
b) 5,2,3,4,1
c) 3,1,5,4,2
d) 5,4,3,2,1
*e) None of the above.
Explanation: Mergesort efficiency is not changed by ordering of the data.
Tags: ADTs, Sorting, Complexity
Author: warren997374 (shy35 - permission to this course revoked)
Avg Rating: 3.3000
Avg Difficulty: 0.6000
Total ratings: 10
==> Comment 1: It might be better to change the last answer to "all of the above". (by: joebr [jayb20])



ID: 3618459
Created: 12:59pm, 07 Dec 2018
Depth First Search is equivalent to which of the traversal in the Binary Trees?
a) In-order Traversal
*b) Pre-order Traversal
c) Post-order Traversal
d) Level-order Traversal
e) None of the above
Explanation: Depth First Search explores all the nodes aggressively to one path and then backtrack to the node. This is equivalent to the pre-order traversal of a Binary Tree.
Tags: Search, Trees
Author: rpnt (rnt21)
Avg Rating: 3.9200
Avg Difficulty: 0.9167
Total ratings: 12



ID: 3618444
Created: 12:53pm, 07 Dec 2018
What is the average runtime complexity of an Array list's add operation? (if resize doubles array size)
*a) 1
b) log n
c) n
d) n^2
e) n log n
Explanation: Over many adds() only about as many copys() as adds() writes
Tags: Lists, Complexity
Author: rpnt (rnt21)
Avg Rating: 3.8000
Avg Difficulty: 0.7000
Total ratings: 10



ID: 3618440
Created: 12:53pm, 07 Dec 2018
Which of the following is NOT an advantage of using open hash table over closed hash table.
a) Open hash tables have no fixed number of buckets.
b) You can remove objects in an open hash table.
*c) Open hash table uses less memory.
d) Open hash tables are almost always more runtime efficient.
e) None of the above.
Explanation: Closed hash table uses less memory since its a fixed size.
Tags: ADTs, Complexity, Hashtables
Author: warren997374 (shy35 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3618435
Created: 12:50pm, 07 Dec 2018
Which binary search tree is correct in the figure?
a) A
*b) B
c) C
Explanation: An important property of a Binary Search Tree is that the value of a Binary Search Tree nodeis larger than the value of the offspring of its left child, but smaller than the value smaller than its right child.
Tags: Trees
Author: novae (yl2893 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 0.6667
Total ratings: 6



ID: 3618427
Created: 12:45pm, 07 Dec 2018
Which statement is false?
a) The average time complexity for searching an array and a linked list is the same.
b) Bubble sort has a faster best case than merge sort
c) Insertion sort is a stable sorting algorithm
*d) The average case time complexity for searching a BST is slower than an AVL tree
Explanation: A) True, the average time complexity for searching both isT(n)B) True, the best case for bubble sort isT(n), whereas it isT(nlog(n)) for merge sortC) Insertion sort takes into account the order of the inputted data, so therefore is a stable sorting algorithmD) The average case of searching a BST and AVL tree isT(log(n))
Tags: ADTs, Lists, Sorting, Search, Trees
Author: jb2716 (jb2716 - permission to this course revoked)
Avg Rating: 1.6700
Avg Difficulty: 0.6667
Total ratings: 15
==> Comment 1: Arrays allow random access and so searching them is faster than linked lists. With arrays, you can use binary search but you can only use linear search with linked lists. (by: nmparrott [nmp31])



ID: 3618425
Created: 12:43pm, 07 Dec 2018
What is the tree equivalent of a linked-list 'head' pointer?
a) A leaf node.
b) A parent node.
c) A child node.
*d) A root node.
e) A depth node.
Explanation: Since a tree is a linked list based data structure it carries over some similarities. However, in a linked list we have the head pointer but in a tree we have a root pointer.Both these pointers point to the first node of each data structure.
Tags: Lists, Trees
Author: dm893 (dm893 - permission to this course revoked)
Avg Rating: 3.0700
Avg Difficulty: 0.1333
Total ratings: 15



ID: 3618414
Created: 12:40pm, 07 Dec 2018
What operation has the lowest average runtime complexity in a singly linked list.
a) get(i)
*b) add(o)
c) insert(o, i)
d) remove(i)
e) find(o)
Explanation: add(o) has constant runtime complexity O(1), while others have linear O(n).
Tags: ADTs, Lists, Complexity
Author: warren997374 (shy35 - permission to this course revoked)
Avg Rating: 3.2000
Avg Difficulty: 0.5333
Total ratings: 15
==> Comment 1: Add(Object o) will only have a constant runtime if a tail pointer is maintained. (by: iwonderwhothisislol [eg574])



ID: 3618407
Created: 12:38pm, 07 Dec 2018
1, 3, 7, 8, 9, 11 is a _________ traversal of this binary tree.
*a) Inorder
b) Preorder
c) Postorder
Tags: Trees
Author: danielwa (dwa23 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.4211
Total ratings: 19



ID: 3618390
Created: 12:32pm, 07 Dec 2018
Which sorting algorithm does this piece of code belong to?Note: numbers is a list of unique ints.for (int position=1; position < numbers.length; position+=1) { int currentIndex = position; while (true) { if (currentIndex == 0) { break; } if (numbers[currentIndex] < numbers[currentIndex-1]) { int temp = numbers[currentIndex-1]; numbers[currentIndex-1] = numbers[currentIndex]; numbers[currentIndex] = temp; currentIndex-=1; } else { break; } }}
a) Bubble sort
*b) Insertion sort
c) Selection sort
d) Shell sort
Explanation: It starts at position 1 and compares the value at the current index to the one before. If its smaller it swaps the two values and the current index is decreased by one. If not (or the current index is the start of the list) it exits the loop and starts again at the next position until every position has been done. This is the key process in insertion sort.
Tags: Sorting
Author: atwm20 (atwm20 - permission to this course revoked)
Avg Rating: 3.8500
Avg Difficulty: 1.0000
Total ratings: 13



ID: 3618377
Created: 12:25pm, 07 Dec 2018
Which of these is not part of a graph.
a) Vertices
b) Arcs
c) Edges
*d) Branches
e) Nodes
Tags: Graphs
Author: danielwa (dwa23 - permission to this course revoked)
Avg Rating: 2.5800
Avg Difficulty: 0.3333
Total ratings: 12



ID: 3618353
Created: 12:18pm, 07 Dec 2018
Which sorting algorithm has the worst average time complexity (?)
*a) Bubble Sort
b) Quicksort
c) Mergesort
Tags: Sorting, Complexity
Author: danielwa (dwa23 - permission to this course revoked)
Avg Rating: 2.8100
Avg Difficulty: 0.3750
Total ratings: 16



ID: 3618337
Created: 12:14pm, 07 Dec 2018
The following code is for an insertion sort. Select from the options below, the line of code which should replace Xpublic static void insertionSort(int[] array) { int[] a = array; int n = a.length; for (int i=1; i<n; ++i){ int key = a[i]; int j = i-1; while (j>=0 && a[j].compareTo(key) > 0){ a[j+1] = a[j]; j = j-1; } X }}
a) a[j] = key;
b) a[i] = key;
*c) a[j+1] = key;
d) a = key;
e) None of the above
Explanation: After you have compared all the elements to the key and moved them around, you must then re add the key to your array.
Tags: Sorting
Author: jb2716 (jb2716 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.9000
Total ratings: 10



ID: 3618909
Created: 12:09pm, 07 Dec 2018
Which one correctly describes the complexity of the following code fragment?for (int i = 1; i < n; i = i * 2){ for(int j = n; j > 0; j--) { System.out.print("hello world"); }}for (double i = n; i > 1; i = i / 2){ System.out.print("goodbye world");}
a)
b)
*c)
d)
e) None of the above
Explanation: When for loops are nested as in the first two we multiply the complexities. As the first one doubles each time it has log n order. The second one works from n to 1 linearly so that gives n. Thus we have n log n. The final for loop has log n complexity but we take the worst case so that gives O(n log n).
Tags: Complexity
Author: bts26 (bts26 - permission to this course revoked)
Avg Rating: 4.1700
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3618318
Created: 12:07pm, 07 Dec 2018
A post order traversal of the tree; [a] / \ [b] [c]
a) a b c
b) a c b
*c) b c a
d) b a c
e) c a b
Explanation: Post order traversal prints the node after printing the left and right subtrees, hence post order
Tags: Trees
Author: jp2037 (jp2037 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.5000
Total ratings: 14



ID: 3618315
Created: 12:07pm, 07 Dec 2018
Which of the following statements about doubly-linked lists is true?
a) Doubly-linked lists can only move in one direction.
b) In order to insert a node, only the new node's pointers must be updated.
c) Nodes in doubly-linked lists have 3 pointers: prev, current and next.
*d) The previous pointer for the "head" node and the next pointer for the "tail" node have the same value.
e) It is impossible to insert or remove the "head" node of a doubly-linked list.
Explanation: The values of the previous pointer for the "head" node and the next pointer for the "tail" node are both NULL, and thus equal.
Tags: Lists
Author: yungsawn (as3063 - permission to this course revoked)
Avg Rating: 3.4800
Avg Difficulty: 0.5238
Total ratings: 21



ID: 3618525
Created: 12:06pm, 07 Dec 2018
Which of the following are NOT advantages of using a Heap data-structure in Java?
a) Heap is flexible with memory-management: the allotted memory can be altered. It allows for resizing
b) Heap is the maximally efficient implementation of a priority queue
*c) Heap comparisons are very fast
d) Heap is implemented in common Graph algorithms, eg. Dijkstra's algorithm
Tags: ADTs, Graphs
Author: ab2339 (ab2339 - permission to this course revoked)
Avg Rating: 2.7300
Avg Difficulty: 0.9333
Total ratings: 15



ID: 3618309
Created: 12:05pm, 07 Dec 2018
Which of the following statements about linked lists is false?
a) The time complexity of finding the ith element is?(n)
*b) When you have a tail pointer, the time complexity of adding an element to the end is?(logn)
c) It is faster to add and remove elements in a linked list than in an array
d) A tail pointer in a linked list is optional
Explanation: Without a tail pointer, the time complexity of adding to the end is?(n), however with a tail pointer, the complexity changes to?(1).
Tags: ADTs, Lists, Complexity
Author: jb2716 (jb2716 - permission to this course revoked)
Avg Rating: 3.6800
Avg Difficulty: 0.5455
Total ratings: 22



ID: 3618300
Created: 12:00pm, 07 Dec 2018
Which of the following statements about array lists and arrays in java are false1.Array lists can be resized whereas arrays can't.2.Array lists can have gaps in the list whereas a standard array cannot.3. A linear search in an array list is slower than in an array (where both have the same elements).4. An array can be of a primitive data type whereas an array list can be of a primitive or non-primitive data type.5. Array lists are always single dimensional however arrays can also be multi-dimensional.
a) 2 and 5
b) 3 and 4
*c) 2 and 4
d) 4 and 5
e) 1 and 2
Explanation: 1. True: an array is a set space in memory so it cannot be resized, however an array list uses pointers to the next value so can be resized by re-directing the pointers.2. False: array lists can have gaps in memory (so not a linear block of memory) but not in the list as each element must have a pointer to the next element.3. True: in an array the value is checked then the next value in memory is looked at, however in a linked list the pointer for the next value must also be looked at each time.4 False: an array list cannot be of a primitive data types such as int or char. Wrapper classes must be used.5. True: An can be both whereas array lists are only ever single dimensional (Note: a common work around of this is to make an array list of lists).
Tags: Lists
Author: atwm20 (atwm20 - permission to this course revoked)
Avg Rating: 4.3800
Avg Difficulty: 1.1250
Total ratings: 16



ID: 3618290
Created: 11:56am, 07 Dec 2018
What is the equation for finding the average number of steps for inserting/finding an item in a hash table? With this equation, what is the average number of steps to find a bucket for a hash table that is 80% full?
a) 1/2(1 + 1(1 - L)) & 6
b) 2(1 + 1(1 - L)) & 3
*c) 1/2(1 + 1(1 - L)) & 3
d) 1/2(1 - 1(1 + L)) & 3
Explanation: At 80% full then 1 - L = .2
Tags: Hashtables
Author: jp2037 (jp2037 - permission to this course revoked)
Avg Rating: 2.4300
Avg Difficulty: 0.5714
Total ratings: 14
==> Comment 1: Should write (1/2)*(1 - 1/(1-L)) (by: kb672 [kb672])
====> Reply 1: Also should specify whether closed hash table or open.



ID: 3618279
Created: 11:51am, 07 Dec 2018
Why, in general, is Radix sort less popular than Quicksort for integer sorting?
a) Radix sort, in all situations, is slower than Quicksort.
b) It isn't less popular, in high quality coding it is used more frequently due to its efficiency.
*c) Quicksort is more flexible (thus a preference for most situations), Radix sort requires more memory.
Explanation: Radix sort will usually be more memory intensive; However, this can be outweighed by the potential increase in speed of sorting, especially when data is almost sorted. Quicksort is universal, and widely used already, this makes it easier for programmers to implement it or create libraries to re-use and re-implement quicksorts; thus making it more popular (even with integers).'radix sort needs more memory, but the memory required depends on the number of bits you use on each pass' StackOverflow'O(f(n)) really means in order of K*f(n), where K is some arbitrary constant. For radix sort this K happens to be quite big' StackExchange
Tags: Sorting
Author: jjb72 (jjb72 - permission to this course revoked)
Avg Rating: 2.8600
Avg Difficulty: 1.2857
Total ratings: 7



ID: 3618262
Created: 11:44am, 07 Dec 2018
What is the correct formula for the load factor of a hash table?
a) L = total buckets in the array / max number of keys to insert
b) L = amount of free buckets in the array / total buckets in the array
*c) L = max number of keys to insert / total buckets in the array
d) L = least amount of keys to insert / total buckets in the array
e) L = (1 + 1/(1 - X))
Explanation: The �load� of a hash table is the maximum number of values (�keys�) you intend to add divided by numberof buckets in the array.A load of L=.3 means your array has 30X more buckets than you need (you�ll only fill 30% of the buckets).
Tags: Hashtables
Author: jp2037 (jp2037 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.4375
Total ratings: 16



ID: 3618185
Created: 11:12am, 07 Dec 2018
Which of the following sorting algorithms has the best/ quickest WORST CASE time complexity?
a) Quick Sort
b) Bubble Sort
c) Insertion Sort
*d) Merge Sort
e) Selection Sort
Explanation: Quick sort - O(n^2)Bubble sort -O(n^2)Insertion sort - O(n^2)Merge Sort - O(n log(n))Selection Sort-O(n^2)This is because Merge Sort is a divide and conquer approach. It has a set number of steps for n which always gives O(n log(n)) for best, average and worst case. Although Quick Sort is also a divide and conquer approach, it's worst case time complexity is O(n^2) like the rest.
Tags: Sorting, Complexity
Author: atwm20 (atwm20 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.5882
Total ratings: 17



ID: 3618166
Created: 11:05am, 07 Dec 2018
Which of the following sorting algorithms is stable?
a) Selection Sort
b) Shell Sort
*c) Insertion Sort
d) Quick Sort
e) Heap Sort
Explanation: Insertion sort is stable - it takes into account the initial order of the objects to be sorted.
Tags: Sorting
Author: yungsawn (as3063 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3618154
Created: 11:01am, 07 Dec 2018
Which of the following statements about basic trees is false?
a) Trees are made up of nodes.
*b) The top node of a tree is called the "leaf" node.
c) Every tree has a "root" node.
d) Every node on a tree can have zero or many "children" nodes.
e) Tree nodes can have two or more "next" pointers.
Explanation: The top node of a tree is called a "root" node - a "leaf" node refers to a node with 0 children.
Tags: Trees
Author: yungsawn (as3063 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.1818
Total ratings: 11



ID: 3618142
Created: 10:55am, 07 Dec 2018
I am tasked with programming a sorting algorithm with large data-sets on a powerful computer. This is an important part of my company's time-critical, safety application. I'm told that completing the sorting very quickly- in all possible cases - is the biggest priority. What's the appropriate choice of algorithm?
a) Insertion Sort
*b) Merge Sort
c) Quick Sort
d) Heap Sort
e) Bubble Sort
Explanation: Merge Sort has O(nlogn)worst case scenario run time, it's only drawback is space inefficiency, which isi not a factor in this case.While Quick Sort - if well implemented - is normally superior, it's worst case is polynomial runtime -O(n^2) -which is undesirable in a time-critical task given large data sets.It is well known thatHeap Sortis usually outperformed in real world/ industry, with its advantage lying in its superior memory efficiency.
Tags: Sorting
Author: ab2339 (ab2339 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 1.0000
Total ratings: 17



ID: 3618134
Created: 10:52am, 07 Dec 2018
In this question we'll consider the Abstract Data Type: Heaps.If the data for a node in a heap is stored in position i in an array, what positions will its children be stored in?
a) Left Child: Right Child:
*b) Left Child: Right Child:
c) Left Child: Right Child:
d) Left Child: Right Child:
e) None of the above.
Explanation: Let's consider the example i = 0. Its children are in position 1 & 2 & we can deduce that 2i+1 = 2(0)+1 = 1 & 2i+2 = 2(0)+2 = 2. This doesn't rule out option C so we'll also consider the example i = 3. Its children are in position 7 & 8 & deduce that2i+1 = 2(3)+1 = 7 & 2i+2 = 2(3)+2 = 8. Therefore the answer is B. Refer to lecture 16 - Trees 4 if you are still unsure of the reasoning.
Tags: Trees
Author: nmparrott (nmp31 - permission to this course revoked)
Avg Rating: 3.3900
Avg Difficulty: 0.8889
Total ratings: 18



ID: 3617916
Created: 7:28am, 07 Dec 2018
Sort the algorithm complexities from fastest to slowest when n = 100.1. 1502. 50n3. 5n^24. log(3000n)5. 6nlog(400n)
*a) 4, 1, 5, 2, 3
b) 4, 5, 2, 1, 3
c) 1, 2, 3, 4, 5
d) 3, 2, 5, 1, 4
e) 5, 1, 3, 2, 4
Explanation: 1. 1502. 50(100) = 50003. 5(100)^2 = 500004. log(3000(100)) = 5.477...5. 6(100)log(400(600)) = 2761.2...
Tags: Complexity
Author: sll57 (sll57 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.3529
Total ratings: 17



ID: 3617889
Created: 6:56am, 07 Dec 2018
What is the average runtime complexity of a binary tree search?
a) O(1)
b) O(n2)
*c) O(log n)
d) O(n!)
e) O(n)
Explanation: Lecture 2 in the notes.
Tags: Search, Trees, Complexity
Author: mf569 (mf569 - permission to this course revoked)
Avg Rating: 3.7700
Avg Difficulty: 0.2727
Total ratings: 22



ID: 3617840
Created: 5:40am, 07 Dec 2018
Consider functions g(n) and f(n) with g(n) >0 and f(n) >0 for n>0.Which of the following is the correct definition for the exact bound?
a) g(n) = ?(f(n)) ("g(n) is Big-Theta of f(n)")iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n)= c1f(n) and g(n)= c2f(n)
b) g(n) = O(f(n)) ("g(n) is Big-Omega of f(n)")iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
*c) g(n) = ?(f(n)) ("g(n) is Big-Theta of f(n)")iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n) = c1f(n) and g(n) = c2f(n)
d) g(n) = ?(f(n)) ("g(n) is Big-Theta of f(n)")iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n) = c1f(n) and g(n)= c2f(n)
e) None of the above
Explanation: These definitions are provided in lecture 4.
Tags: Complexity
Author: gander (jg2048 - permission to this course revoked)
Avg Rating: 3.1800
Avg Difficulty: 0.3636
Total ratings: 11



ID: 3617816
Created: 5:22am, 07 Dec 2018
Which of the following statement is true?
a) A binary tree is completed if for each node the number of nodes in its left and right subtrees differ by at most one.
b) An integer maxheap must be completed, and the value contained the nodes at the deepest level is never bigger than the value of every nodes at the previous/upper level.
c) To sort an interger array which is almost sorted in an ascending way (only last element is unsorted), the heapsort is better than the insertion sort.
d) To heapsort an array of numbers in a descending way more efficiently, we need to insert all numbers in this array into a new maxheap first, then extract the max value and re-heapify this heap while there are numbers left on this maxheap.
*e) None of the above.
Explanation: A. (Lecture 14/16) This is the definition of�perfectly balanced�. Thecomplete binary tree is not only that the top N-1 levels of the tree are completely filled with nodes, but also itsnodes on the bottom-most level must be as far left as possible.B.(Lecture 16)The value contained by a node (expect the top node) is ALWAYS <= the values of the node�s parents.C.(Lecture 16) (https://www.youtube.com/watch?v=ZZuD6iUe3Pc) This is best case of the insertion sort, which is O(n), compared with theO(n log(n)) in the heapsort algorithm.D. (Lecture 16)Wasting a lot of time on the inserting node (O(n log(n)), not efficiently), we canconvert the array into a maxheap by O(n).
Tags: Sorting, Trees
Author: samz285 (gz285 - permission to this course revoked)
Avg Rating: 2.2700
Avg Difficulty: 1.4667
Total ratings: 15



ID: 3617805
Created: 5:14am, 07 Dec 2018
You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 7, meaning there are 7 slots in your hash table; 0,1,2,3,4,5,6. Inserting the elements 22, 8, 5, 26, 4, 13, 9 in that order, what would be the end result?
a) 26, 22, 8, 9, 4, 5, 13
b) 26, 22, 9, 8, 4, 5, 13
*c) 13, 22, 8, 9, 4, 5, 26
d) 13, 22, 8, 9, 5, 4, 26
e) 13, 22, 8, 26, 4, 5, 9
Explanation: 22mod7=1 so goes in slot 1, 8mod7=1, since slot 1 is occupied, it goes in the next free slot to the right, slot 2. 5 goes in slot 5, 26mod7=5 so goes in slot 6 as is next available, 4 goes in slot 4, 13mod7=6. Since slot 6 is occupied, we wrap around back to slot 0, and finally 9mod7=2, but since there is only one remaining space, 9 ends up in slot 3, giving us13, 22, 8, 9, 4, 5, 26.
Tags: Hashtables
Author: gander (jg2048 - permission to this course revoked)
Avg Rating: 4.2100
Avg Difficulty: 0.6316
Total ratings: 19



ID: 3617567
Created: 2:35am, 07 Dec 2018
Which of these algorithms have the fastest best case?(assume all elements are distinct)
a) Heap sort
b) Merge sort
c) Selection sort
*d) Insertion sort
e) Shell sort
Explanation: Heap sort is O(nlogn) (if not all keys are distinct then it can be O(n))Mergesort is O(nlogn)Selection sort is O(n^2)Insertion sort is O(n)Shell sort is O(nlogn)
Tags: Sorting, Complexity
Author: joebr (jayb20 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3617566
Created: 2:35am, 07 Dec 2018
What does Amortised mean?
a) Best Case
b) Worst Case
*c) Average Case
Explanation: page 14 lecture 6
Tags: Complexity
Author: cardak (kc662 - permission to this course revoked)
Avg Rating: 3.2900
Avg Difficulty: 0.4706
Total ratings: 17



ID: 3617550
Created: 2:24am, 07 Dec 2018
What is the best a comparison sort algorithm can perform in the average or worst case?
a) O(1)
b) O(logn)
c) O(n)
*d) O(nlogn)
e) O(n!)
Explanation: WLOG WMA that a given permutation has n distinct elements (as this is worst case scenario). There are therefore exactly n! permutations.Now suppose a sorting algorithm always finishes sorting n elements in S(n) steps. As a sorting algorithm can only work out the order of the elements it is sorting by comparisons and as comparisons can only have one of two outcomes, it can't distinguish most than 2^(S(n)) cases.This means 2^(S(n)) >= n! => S(n) >= log(n!) => S(n) >= (n/2)* log(n) => S(n) = O(nlogn)
Tags: Sorting, Complexity
Author: joebr (jayb20 - permission to this course revoked)
Avg Rating: 3.3000
Avg Difficulty: 0.9000
Total ratings: 10



ID: 3617541
Created: 2:19am, 07 Dec 2018
Which of the following was advice given in a lecture?
*a) When it comes to time complexity, if n is small you shouldn't worry about complexity and just pick the easiest algorithm to program.
b) When it comes to time complexity, if n is small you should still consider the complexity and pick the most effective algorithm as it's good practice.
c) When it comes to time complexity, if n is small it should not make a difference to your choice of algorithm as complexity is an outdated concept due to CPU speed improvements in the real world.
Explanation: Lecture 4 page 16, complexity 2. Complexity is still very relevant for anything larger than a small value of n but if you know for certain n will always be small the difference won't be noticeable in most implementations.
Tags: Complexity
Author: cardak (kc662 - permission to this course revoked)
Avg Rating: 2.6400
Avg Difficulty: 0.2727
Total ratings: 22



ID: 3617534
Created: 2:15am, 07 Dec 2018
Suppose we have 100 different arrays of integers, all of which are length n, and we wish to order all of them.But also suppose that x of these arrays are already completely ordered, while the rest remain random, and unfortunately we do not know which are which.At what value ofx, in terms ofn, does it become more efficient to use, say, Insertion Sort rather than Quick Sort to ensure all 100 arrays are correctly ordered in minimal time?(One may assume that that an algorithms exact bound is its precise number of operations for the sake of this question, i.e. ?(n)=n, or?(n2)=n2.)
*a)
b)
c)
d)
Explanation: The first thing to note is that Insertion Sort is?(n2) normally, but?(n) for already ordered arrays,but Quick Sort is?(n*log2(n)) normally and?(n2) for pre-ordered arrays.So, using our assumption of the exact bound being the precise operation runtime, we set up two expression in terms ofx andn for how long it takes each algorithm to sort the arrays:Insertion Sort: Quick Sort: Then, we create an inequality for Insertion Sort's equation to be less than Quick Sort's (and hence have less operations, or rather, be faster):And simply follow through the maths by rearranging:To then give our final answer:
Tags: Sorting, Complexity
Author: olibob (orj25 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 1.8966
Total ratings: 29
==> Comment 1: Great question - it may be worth adding that 2n-logn-1>0 for all n, in the assumptions given in the question, so that the inequality sign doesn't flip in the last step. (by: jwb59 [jwb59])



ID: 3617514
Created: 2:04am, 07 Dec 2018
Which of these algorithms are NOT usually stable?
a) Merge sort
*b) Quick sort
c) Insertion sort
d) Bubble sort
Explanation: Quicksort is not usually stable though there are ways to make it stable.
Tags: Sorting
Author: joebr (jayb20 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3617501
Created: 1:51am, 07 Dec 2018
What is putting in instructions which measure codes runtime called?
a) Debugging
*b) Instrumenting
c) Optimising
d) Refactoring
Explanation: Lecture 3, complexity 1 slide 4
Tags: ADTs, Complexity
Author: cardak (kc662 - permission to this course revoked)
Avg Rating: 3.4600
Avg Difficulty: 0.1538
Total ratings: 13



ID: 3617481
Created: 1:49am, 07 Dec 2018
Which type of tree transversal will first process the nodes in the left subtree, then the right subtree and finally the current node?
a) In-order
*b) Post-order
c) Level-order
d) Pre-order
e) Dis-order
Explanation: Pre-order is node->left->right.In-order is left->node->right.Level-order is top node->next level nodes->next level nodes->etc.Dis-order is just bad.
Tags: Trees
Author: joebr (jayb20 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.6667
Total ratings: 9



ID: 3617457
Created: 1:38am, 07 Dec 2018
Consider the following statements about lists and choose the statement that is FALSE.
a) For an Array list the average case to remove an element is?(n)
b) Linked lists do not allow random access so elements have to accessed sequentially.
*c) For a Linked list the average case to access an element is?(i)
d) Removing an element from a Linked list is faster than removing from an Array.
e) For an Array list the worst case to access an element is ?(1)
Explanation: For a Linked list the average case to access i is ?(n)
Tags: Lists
Author: steemboat (dh658 - permission to this course revoked)
Avg Rating: 2.6400
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3617352
Created: 1:00am, 07 Dec 2018
Consider an algorithm that takes 8s for n=50, 14s for n=100 and 20s for n=200. What asymptotic complexity does it likely have.
a) ?(1)
*b) ?(log n)
c) ?(n)
d) ?(n^2)
Explanation: Time increases by a constant when n is doubled so complexity is?(log n).
Author: steemboat (dh658 - permission to this course revoked)
Avg Rating: 2.6300
Avg Difficulty: 0.3750
Total ratings: 8



ID: 3617340
Created: 12:54am, 07 Dec 2018
Becky has a set of names stored in a reverse alphabetical list {"Zach", "Tom", "Isaac", "Freya ","Becky", "Anna", "Adam"}. Which search algorithm should she implement if searching for the word "Zach"?
a) binary search
*b) linear search
c) interpolation search
Explanation: Look at note, with attention to best case for linear search!
Tags: Lists, Search
Author: rm2074 (rm2074 - permission to this course revoked)
Avg Rating: 3.1300
Avg Difficulty: 0.2667
Total ratings: 15



ID: 3617332
Created: 12:49am, 07 Dec 2018
If an insertion sort takes 10 seconds to sort 10,000 books, how long will it likely take to sort 40,000 books
a) 40 seconds
b) 20 seconds
c) 80 seconds
*d) 160 seconds
Explanation: As insertion sort is?(n^2) with 4 times as many books to sort we have 10s x 4^2 = 160s
Augmented explanation 1: assume data isn't nearly sorted (by: rm2074 [rm2074])
Tags: Sorting
Author: steemboat (dh658 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2500
Total ratings: 12



ID: 3619139
Created: 12:49am, 07 Dec 2018
An Open Hash Table...:
a) Does not utilise a wraparound like a closed hash table.
b) Can store an unlimited number of values.
c) Contains linked lists of values at each array index.
*d) All of the above.
Explanation: Each array index is referred to as a "bucket" and contains a linked list of values for data entries with the same hash.
Tags: Hashtables
Author: bgj22 (bgj22 - permission to this course revoked)
Avg Rating: 3.7700
Avg Difficulty: 0.3846
Total ratings: 13



ID: 3617322
Created: 12:45am, 07 Dec 2018
Cameron has a set of nearly sorted data. Which algorithm would be ideal for sorting a nearly sorted data?
a) Quick sort
b) Heap sort
*c) Insertion sort
d) Bubble sort
Explanation: look at how each sort works, particular attention to best case and worst case scenarios
Tags: Sorting
Author: rm2074 (rm2074 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.4444
Total ratings: 9



ID: 3617315
Created: 12:40am, 07 Dec 2018
Which of the following is the most efficient time complexity, for a large number of items?
a) O(n log n)
b) O(log n)
c) O(n ^ 2)
*d) O(1)
e) O(n)
Explanation: A constant time complexity is most efficient, as it stays the same no matter the number of items, so as the number of items increases, this number will always be overtaken by an algorithm of higher complexity.
Tags: Complexity
Author: boydicus_14 (ajb244 - permission to this course revoked)
Avg Rating: 3.3100
Avg Difficulty: 0.1538
Total ratings: 13



ID: 3617314
Created: 12:40am, 07 Dec 2018
David is calculating time complexity for his algorithm. What functions should he look at simplifying to reduce the time complexity?
a) Accessing an item
b) Evaluating a mathematical expression
c) Traversing a reference
*d) All of the above
Explanation: from notes:Calculating Time complexity:Determine the number of elementary operations an algorithm performs. They take a fixed amount of time to perform- Accessing an item- Evaluating a mathematical expression- Traversing a referenceUsually the constants/exact algorithm doesn�t matter
Tags: Complexity
Author: rm2074 (rm2074 - permission to this course revoked)
Avg Rating: 3.6200
Avg Difficulty: 0.4615
Total ratings: 13



ID: 3617290
Created: 12:26am, 07 Dec 2018
Which of the three following data structures have the shortest average run time for finding an ith element.
a) Skip list
*b) hash table
c) linked list
Explanation: linked lists have an average search time of ?(n).hash tables have an average search time of ?(1).Skip lists have an average search time of?(log(n)).
Tags: Complexity
Author: ji307 (ji307 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.6923
Total ratings: 13



ID: 3617291
Created: 12:26am, 07 Dec 2018
How will the following max heap tree be implemented as an array? ie- How should it look like as an array? 10 / \ 8 11/ \ / \7 4 9 5
*a) __0 |10|1 | 8 |2 |11|3 | 7 |4 |4|5 | 9 |6 | 5 |
b) __0 | 8 |1 |11|2 | 7 |3 | 4 |4 | 9 |5 | 5 |6 |10|
c) ___0 | 7 |1 | 4 |2 | 9 |3 | 5 |4 | 8 |5 | 11|6 | 10|
d) __0 |10|1 | 8 |2 | 7 |3 | 4 |4 |11|5 | 9 |6 | 5 |
Explanation: Just input all the elements into starting from the root at the top, then left to right until the last element in the tree is reached.
Tags: Lists, Trees
Author: iid21 (iid21 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3617286
Created: 12:23am, 07 Dec 2018
For this question we consider the following binary AVL tree: 10 / \ 5 17 / \ / \ 3 7 12 22 / \ / \ 11 13 21 29If we say, inserted an new element 14 to the tree, and any necessary balancing was carried out, which element would be the new root of the tree?
a) 10
b) 17
*c) 12
d) 22
Explanation: For this tough customer, a double balance is needed.First, we balance the node 17 despite only having a balance of -1, because it's unbalanced parent node 10 has a balance of opposite sign (2).This ends us up with the following: 10 / \ 5 12 / \ / \ 3 7 11 17 / \ 13 22 \ / \ 14 21 29Now, we balance the node that is actually unbalanced, the root 10, with its child node 12. Doing this appropriately grants our final tree: 12 / \ 10 17 / \ / \ 5 11 13 22 / \ \ / \ 3 7 14 21 29And, like magic, we have a balanced AVL tree, with 12 at the root, making that our final answer.
Tags: ADTs, Trees
Author: olibob (orj25 - permission to this course revoked)
Avg Rating: 4.3800
Avg Difficulty: 1.5833
Total ratings: 24



ID: 3617273
Created: 12:18am, 07 Dec 2018
You are going to add an array of numbers to an empty binary tree. It is worse in terms of search time if the input array is:
a) Unsorted
*b) Already sorted
c) Searching is the same whether the input array was sorted or unsorted
d) The array size is not a multiple of 2.
Explanation: If a sorted array is put into an empty binary tree, the tree will be completely one sided, and you would have to search through every single element to find a high value, ieT(n).
Author: bgj22 (bgj22 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3617271
Created: 12:17am, 07 Dec 2018
A company wishes to create a Hashtable for all transaction IDs. They will never remove any of the IDs, and want the Hash Table to use minimal memory (and cache). What is the best type of Hashtable to meet these requirements.
a) Probabilistic hashing (Hashing that overwrites values in buckets, if there is a collision)
*b) Closed Hash Table with Linear Probing
c) Open Hash Table
d) Coalesced hashing (Open Hash, with limited element slots)
Explanation: A Closed Hash table's main faults are the inability to efficiently delete values, and the handling of collisions. However, it requires the least amount of memory as the hash table, and its elements, are stored in a single array; This is instead of elements pointing to linked lists which causes an increase of memory required, due to linked lists needing to be stored in memory too.'Separate chaining (each bucket is a pointer to a linked list of values) has the disadvantage that you end up searching a linked list with all cache-related issues at hand.' StackExchange
Tags: Hashtables
Author: jjb72 (jjb72 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 0.4118
Total ratings: 17
==> Comment 1: Some interesting extra stuff covered! (by: nlc29 [nlc29])
==> Comment 2: Surely you would need an open hash table to store transaction IDs? There will eventually be too many for the closed hash table to store (by: jb2716 [jb2716])



ID: 3617262
Created: 12:11am, 07 Dec 2018
What is the average search time for a binary search tree?
a) ?(n2)
b) ?(n)
*c) ?(log n)
Explanation: It's?(log n), if you don't know this, you need to review your notes.
Tags: Trees
Author: nlc29 (nlc29 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.0714
Total ratings: 14



ID: 3617258
Created: 12:09am, 07 Dec 2018
Which set of sorting algorithms have an average time complexity case ofT(n^2)?
a) Mergesort, Quicksort, Insertionsort
b) Shellsort, Bubblesort, Heapsort
*c) Bubblesort, Insertionsort, Selectionsort
d) Selectionsort, Shellsort, Quicksort
Explanation: Bubblesort, Insertionsort and Selectionsort have an average case ofT(n^2);Mergesort, Quicksort and Heapsort have an average case ofT(n log(n));Shellsort has an average case ofT(n(log(n))^2).
Tags: Sorting, Complexity
Author: achau26 (astc20 - permission to this course revoked)
Avg Rating: 4.2100
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3617256
Created: 12:08am, 07 Dec 2018
Which of these functions is the upper bound function?
*a) O(f(n))
b) T(f(n))
c) O(f(n))
Explanation: Upper bound: g(n)=O(f(n)) iff ?c>0 & n_0>0 s.t. ?n>n_0:g(n)=c f(n)Lower bound: g(n)=O(f(n)) iff ?c>0 & n_0>0 s.t. ?n>n_0:g(n)=c f(n)Exact bound: g(n)=T(f(n)) iff ?c_1>0, c_2>0 & n_0>0 s.t. ?n>n_0:c_1 f(n)=g(n)=c_2 f(n)
Tags: Complexity
Author: nlc29 (nlc29 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.2500
Total ratings: 12



ID: 3619271
Created: 12:06am, 07 Dec 2018
Which of the following statements about hash tables are false?
a) A hash table is an array that stores your objects.
b) A hash table uses a hash function to convert objects into unique numbers
*c) None of the above
Explanation: A hash table is an array that stores your objects by using the hash function to convert them into a unique_number and then storing said object at array[unique_number]
Tags: Hashtables
Author: nlc29 (nlc29 - permission to this course revoked)
Avg Rating: 2.5500
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3617241
Created: 12:00am, 07 Dec 2018
___0 |10 |1 | 8 |2 | 11|3 | 7 |4 | 4 |5 | 9 |6 | 5 |Given the heap array above, what isleft Child of 11 (element at index 2) ?parent of 4 (element at index 4) ?last element in heap?
*a) left Child of 11 = 9 (index 5)parent of 4 = 8 (index 1)last element in heap = 5(index 6)
b) left Child of 11 = 9(index 5)parent of 4 = 11 (index 2)last element in heap = 5(index 6)
c) left Child of 11 = 5 (index 6)parent of 4 = 7 (index 3)last element in heap = 10 (index 0)
Explanation: Recall the formulae:leftChild(parent) = (2 * parent's index) + 1Parent(child) = (child's position - 1)/ 2 (remember- round down, not up. So 1.5 should be 1)SO given the above,left child of 11 = 2 * 2 + 1 = index 5. --> 9parent of 4 = (4 -1)/2 = 1.5 = index 1 (rounded down) --> 8last child = last element in array = 5See lecture 16.
Tags: Sorting, Trees
Author: iid21 (iid21 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3617194
Created: 11:41pm, 06 Dec 2018
In terms of n, what is the total number of elementary operations for the line checking that j<i in the code below?public int complexity(int n){int result = 0;for(int i=0; i<n; i++) { for(int j=0; j<i; j++) { result = j; }}return result;}
*a)
b)
c)
d)
Explanation: The number from the first for loop i for which we compare j<i will be the numbers 0, 1, � , (n-1). This will result in the number of comparisons being:1+2+....+n comparisons, since each separate i is compared with j (i+1) times. This means that the total number of comparisons is simply
Tags: Complexity
Author: jp2150 (jp2150 - permission to this course revoked)
Avg Rating: 3.1000
Avg Difficulty: 1.0000
Total ratings: 10
==> Comment 1: Question is not very clear (by: jb2716 [jb2716])



ID: 3617182
Created: 11:37pm, 06 Dec 2018
Which of the following algorithms would take thelongest to sort an array that is already ordered?
a) Insertion Sort
*b) Quick Sort
c) Bubble Sort
d) Merge Sort
Explanation: For an already ordered array, here are the?(n) complexity times for mentioned algorithms:Bubble Sort -?(n)Insertion Sort -?(n)Merge Sort - ?(n*log2(n))Quick Sort -?(n2)Alas, Quick Sort is usually a good algorithm, but for a pre-ordered list, it does us no favours.
Tags: Sorting, Complexity
Author: olibob (orj25 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3617129
Created: 11:14pm, 06 Dec 2018
Is the following a valid Binary tree: 1 \ 3 \ 5 \ 7
*a) Yes this is fine
b) No this is not valid
Explanation: This is a valid Binary tree, but note that it is not a valid AVL tree as the balance would not fit the criteria.
Tags: Trees
Author: jp2150 (jp2150 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.1429
Total ratings: 14



ID: 3617076
Created: 10:57pm, 06 Dec 2018
Given an algorithm with a time complexity of the format a^(b*n) where a and b are constants, how long would it take to run the algorithm when n = 15?Use the information below to find a and b and hence answer the question. n time 3 3s 6 9s18 729s
a) 273 seconds
*b) 243 seconds
c) 32 seconds
d) 180 seconds
e) 321 seconds
Explanation: a = 3 and b = 1/3 so 3^(15/3) = 243
Tags: Complexity
Author: jackwatson (jw2782 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 1.2727
Total ratings: 22



ID: 3617046
Created: 10:50pm, 06 Dec 2018
You are given a list of names that is initially sorted in alphabetical order by their first names. However you now want to change it to be sorted by their last names, and if they are the same then order them by their first names as initially sorted. To achieve this in the quickest way in general, which of the sorting algorithms would be best to use?
a) Shell sort
*b) Merge sort
c) Heap sort
d) Quick sort
e) Insertion sort
Explanation: To sort the list in this way, you would need to implement a stable sort algorithm to take into consideration the initial ordering. This means that we may rule out Heap, Shell and Quick sort, as all of these are unstable algorithms for sorting.Now because we want to do this in as fast a way as possible, we want to consider the general runtime of Insertion and Merge. The insertion sort algorithm is O(n^2) in the general case, and the Merge sort algorithm is O(nlogn) in the general case, hence the best algorithm to use in this case is would be Merge.
Tags: Sorting, Complexity
Author: jp2150 (jp2150 - permission to this course revoked)
Avg Rating: 4.1300
Avg Difficulty: 0.6667
Total ratings: 15



ID: 3616984
Created: 10:32pm, 06 Dec 2018
Which of the following sorting algorithms are STABLE
a) Quick Sort
*b) Insertion Sort
c) Selection Sort
d) Heap Sort
e) Shell Sort
Explanation: A stable algorithm is onewhich doesn't change the relative position of same/equal elements.Insertion sort is stable because it maintains the relative order of elements as they occur in the input unlike all the other sorting algorithms above.
Tags: Sorting
Author: iid21 (iid21 - permission to this course revoked)
Avg Rating: 4.1200
Avg Difficulty: 0.5882
Total ratings: 17



ID: 3616972
Created: 10:28pm, 06 Dec 2018
What are the definitions of the "root" of a tree, the "child" of a node and a "leaf" node?
a) Root: The top node of a treeChild:Any node pointed to by the current nodeLeaf: A node on the outside of the tree
b) Root: The bottom node of a treeChild: Any node with a smaller value than the current nodeLeaf:A node with 0 children
*c) Root: The top node of the treeChild: Any node pointed to by the current nodeLeaf: A node with 0 children
d) Root: All nodes below the top level of a treeChild: Any nodeon a level below the current nodeLeaf:A node with 0 children
e) None of the above
Explanation: C - see lecture notes: Lecture 13 - Trees 1
Tags: Trees
Author: jackwatson (jw2782 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.2667
Total ratings: 15



ID: 3616969
Created: 10:27pm, 06 Dec 2018
Which array can use binary search to find a data?
a) [1 2 5 79 100 9999]
b) [Apple Banana Cat Dog]
c) [5 79 5000 1000 300]
*d) A and B
e) A and C
Explanation: To use binary search algorithm, a list of data must be sorted into descending or ascending numeric or alphabetic order
Tags: ADTs
Author: parcobbq (plu20 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.5294
Total ratings: 17



ID: 3617246
Created: 10:12pm, 06 Dec 2018
Which of the following is not a property of a heap?
a) Heap is filled up starting from the left most branches
*b) It is a binary tree
c) Prioritises things in order of importance
d) The top N-1 levels of the tree are completely filled with nodes
Explanation: A heap is a "Complete Binary Tree", NOT just a binary tree. This is because a Complete Binary Tree satisfies the following:The Top N-1 leaves of the tree are completely filled with nodesNo empty slots exist between nodes, ie- all nodes on bottom-most level are as far left as possible. Tree is filled from left to right.
Tags: ADTs, Trees
Author: iid21 (iid21 - permission to this course revoked)
Avg Rating: 2.5800
Avg Difficulty: 0.7500
Total ratings: 12
==> Comment 1: It is a binary tree, it just so happens to be a type of binary tree that is a complete binary tree, but I ain't no snitch so 4/5 (by: rm2074 [rm2074])
====> Reply 1: lol. fair enough, that's true. Thanks!



ID: 3616901
Created: 10:08pm, 06 Dec 2018
What is theCounting Elementary Operations T(n) of the following code?public int totalSum(int[ ] a) { int sum = 0; for (int i=0; i<a.length; i++) { sum=sum + a[i]; } return sum}(a.length = n)T(n)=? ops
a) 3n+3 ops
b) 3n+4 ops
c) 4n+3 ops
*d) 4n+4 ops
e) 5n+3 ops
Explanation: int sum = 0 (Variable assignment:1 op)int i = 0 (Variable assignment:1 op)i<a.length (Comparison: 1 op times a.length+1 = n+1 ops)i++ (Addition: 1 op times a.length = n ops)sum = (Variable assignment: 1 times a.length = n ops)sum + a[i] (Addition: 1 times a.length = n ops)return sum (Returning a value: 1 op)T(n) = 1 + 1+ n+1 + n + n + n + 1 = 4n + 4 ops
Tags: Complexity
Author: parcobbq (plu20 - permission to this course revoked)
Avg Rating: 3.2700
Avg Difficulty: 0.7273
Total ratings: 11
==> Comment 1: Doesn't extracting a value from our array, int[] a, take 1 operation, and hence add n operations overall?i.e. when you call a[i]. (by: olibob [orj25])



ID: 3616890
Created: 10:06pm, 06 Dec 2018
The code below can be used to carry out which type of sorting algorithm?void algorithmName(int a[], int n){ for (int i = 0; i < n; i++) { int minIndex = i; for (int j = i+1; j < n; j++) { if (a[j] < a[minIndex]) minIndex = j; } swap(a, i, minIndex); }}
a) Insertion Sort
*b) Selection Sort
c) Quick Sort
d) Merge Sort
e) Bubble Sort
Explanation: This code is provided in lecture 10.
Tags: Sorting
Author: gander (jg2048 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 18



ID: 3616841
Created: 9:52pm, 06 Dec 2018
What is ?
a) The exact bound time complexity
*b) The lower bound time complexity
c) The upper bound time complexity
Explanation: Lower Bound: g(n) = O(f(n)) ("g(n) is Big-Omega of f(n)") iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
Tags: Complexity
Author: hmg33 (hmg33 - permission to this course revoked)
Avg Rating: 3.7900
Avg Difficulty: 0.1579
Total ratings: 19



ID: 3616812
Created: 9:45pm, 06 Dec 2018
What is an algorithm?
a) A problem that can be solved
*b) A set of instructions that solve a particular problem
c) Java code that performs some process
Author: hmg33 (hmg33 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.1304
Total ratings: 23



ID: 3616665
Created: 9:06pm, 06 Dec 2018
Given the set of all multiples of 4 in the range 1 to 10,000 to be inserted to an open hashmap, what type of number should be used as the modulo to reduce the maximum length of linked lists?
a) A perfect number
b) A square number
*c) A prime number
d) A triangle number
Explanation: Since prime numbers have no divisors but 1 and themselves, they provide a much better distribution for data sets with potential multiplicity bias (multiples of 4).
Tags: Hashtables
Author: ecksdee (drc34 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.8182
Total ratings: 11



ID: 3616571
Created: 8:44pm, 06 Dec 2018
Misha has an open Hashtable containing 4 buckets. He hashes a word by:Hashcode = Length of word + index in alphabet of the first letterFor example, "animal" = 6 + 1 = 7Or "boat" = 4 + 2 = 6The bucket is determined by hashcode % the number of buckets.E.g. "animal" would be placed in the bucket with index 3If Misha adds the words:"i", "play", "pokemon go", "everyday"What words are in each of the buckets in the hash table?
*a) 0. "play"1. "pokemon go", "everyday"2. "i"3. -
b) 0. "play"1. -2. "i"3. "everyday","pokemon go"
c) 0. "play", "everyday"1. "i", "pokemon go"2. -3. -
d) 0. "i"1. "play"2. "pokemon"3. "go"4. "everyday"
e) 0. "play"1. "everyday", "pokemon go"2. "i"3. -
Explanation: The hash of 'i' = 10 => bucket index 2The hash of 'play' = 20 => bucket index 0The hash of 'pokemongo' = 25 => bucket index 1The hash of 'everyday' = 13 => bucket index 1
Tags: Hashtables
Author: tec26 (tec26 - permission to this course revoked)
Avg Rating: 4.2500
Avg Difficulty: 1.0000
Total ratings: 20
==> Comment 1: space in "pokemon go" is confusing? (by: epo24 [epo24])



ID: 3616566
Created: 8:43pm, 06 Dec 2018
In a computing "tree", which of these statements are true?
a) A leaf is a node that does not have any connections to other nodes
b) A binary tree can only store 2 possible values
*c) A node may have any number of children
d) A 'child' node has a smaller value than its parents
Explanation: nodes may have any number of children unless it is a binary tree, then they can only have up to 2seeLecture13-Trees1
Tags: Trees
Author: wafflelily (gap29 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3616531
Created: 8:36pm, 06 Dec 2018
Which of these complexities is the fastest?
a) ?(nlog(n))
*b) ?(n^1/2)
c) ?(n)
Explanation: ?(n^1/2) is theoretically the fastestseeLecture04-Complexity2
Tags: Complexity
Author: wafflelily (gap29 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.4375
Total ratings: 16
==> Comment 1: I think it depends on how large n is: (by: cro26 [cro26])



ID: 3616577
Created: 8:33pm, 06 Dec 2018
Here is a graph's associated adjacency matrix, A.What is the adjacency matrix for this graph showing which nodes areexactly two edges apart?
a)
*b)
c)
d)
Explanation: Using the fact that the adjacency matrix multiplied by itself yields the adjacency matrix showing how the nodes connected by exactly two edges the answer is:To further show this is indeed correct visually, here is the corresponding graph from the question:
Tags: Graphs
Author: rm896 (rm896 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.7333
Total ratings: 15



ID: 3617577
Created: 8:27pm, 06 Dec 2018
Which of these searches is the fastest (assuming the list it's searching is presorted and uniformly distributed)?
a) Linear Search
b) Binary Search
*c) Interpolation Search
d) Exponential Search
e) Jump Search
Explanation: Time Complexities (in descending order):1st - Interpolation at O(log(log(n)))Joint 2nd - Exponential and Binary at O(log(n))3rd - Jump at O()4th - Linear at O(n)Thus, Interpolation Search is the fastest.
Tags: Lists, Search
Author: mh2250 (mh2250 - permission to this course revoked)
Avg Rating: 3.4300
Avg Difficulty: 1.0000
Total ratings: 14



ID: 3616478
Created: 8:23pm, 06 Dec 2018
State from the following list of sorts, all the sorts which are stable.- Selection- Insertion- Bubble- Merge- Heap
a) None of the above.
*b) Insertion, Bubble, Merge
c) Selection, Insertion, Merge
d) Insertion, Bubble, Merge, Heap
e) All of the above.
Explanation: Insertion, Bubble and Merge Sort are all stable, whereas Selection and Heap Sort are not.
Tags: Sorting
Author: am2541 (am2541 - permission to this course revoked)
Avg Rating: 3.2500
Avg Difficulty: 0.8750
Total ratings: 8



ID: 3616460
Created: 8:18pm, 06 Dec 2018
Given 15, 21, 11, 7, 24, 1, 13, 12, 9 as the input for a AVL tree, select the correct output when using Post-Order Transversal:
a) 15 11 7 1 9 12 13 21 24
b) 1 7 9 11 12 13 15 21 24
c) 15 11 21 7 12 24 1 9 13
*d) 1 9 7 13 12 11 24 21 15
Explanation: A - pre orderB - in orderC - level orderD - correct answerIn order to get the answer correct, you would need the correct tree. With the inputs in that order, the correct balanced tree on which the transversal should be done is: 15 / \ 11 21 / \ \ 7 12 24/ \ \1 9 13
Tags: Trees
Author: ivangelemerov (ikg22 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 1.3125
Total ratings: 16



ID: 3617965
Created: 8:15pm, 06 Dec 2018
At what number, x, of linear searches on a list of size n would it be more efficient to quicksort and perform binary searches instead?
a)
b)
*c)
d)
Explanation: Start with the following inequality, based on the time complexity of linear search (O(n)), binary search (O(logn)) and quick sort (O(nlogn)):Raise both sides to the power of 2...Tidy it up a little...Take logs again for a meme...Tada!Did you get it? Share the answer by tagging your friends
Tags: Lists, Sorting, Search, Complexity
Author: ecksdee (drc34 - permission to this course revoked)
Avg Rating: 2.5700
Avg Difficulty: 1.3571
Total ratings: 14



ID: 3616391
Created: 8:01pm, 06 Dec 2018
What is the time complexity of the code below?:int 2bAlgo(int n) { Random random = new Random(); int total = 0; int[] b = new int[n]; for(int i = 0; i < n; i++) { b[i] = random.nextInt(n); } int j = 0; for(int i = 0; i < 200; i++) { j = n; while(j > 0) { total += j; j = j / 2; } } return total + b[j];}
*a) O(n)
b) O(1)
c) O(nlog(n))
d) O(log(n))
e) O(n^2)
Explanation: The first loop is O(n), but the second loop consists of a fixed number of iterations, so no matter the complexity of the inner loop, O(n) > O(1) so is O(n).The use of random numbers is considered as constant time
Tags: Complexity
Author: tec26 (tec26 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.6364
Total ratings: 11



ID: 3616364
Created: 7:52pm, 06 Dec 2018
One day Shrek was walking around his swamp and felt like singing. He wanted to sing All Star by Smash Mouth but his thoughts trailed off and he forgot the rest. So to help he decided to make a binary tree with the words he remembered: SOMEBODY / \ ONCE TOLD / MEwhich type of tree traversal will output "SOMEBODY ONCE TOLD ME..."?
a) In ordertree traversal
b) Preorder tree traversal
c) Postorder tree traversal
*d) Level order tree traversal
Explanation: Ah! Now he remembers the rest "...THE WORLD IS GONNA ROLL ME, I AIN'T THE SHARPEST TOOL IN THE SHED!!!"In order: me, once, somebody, toldPreorder: somebody, once, me, toldPostorder: me , once told, somebodyLevel order: Each node in the tree is visited from left to right level by level, hence "somebody once told me"
Tags: Trees
Author: sammie (sh2389 - permission to this course revoked)
Avg Rating: 4.4200
Avg Difficulty: 0.2545
Total ratings: 55



ID: 3616361
Created: 7:50pm, 06 Dec 2018
When implementing radix sort, which of the following algorithms would be best to use?
a) Selection sort
*b) Insertion sort
c) Shell sort (h > 1)
d) Quick sort
e) Heap sort
Explanation: Radix sort requires a stable sorting algorithm to work.For example the array [10, 13, 05] would become [05, 13, 10] after comparing the first digit using selection sort
Author: rl836 (rl836 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 1.0000
Total ratings: 8



ID: 3616321
Created: 7:40pm, 06 Dec 2018
What is the time complexity of this function?public void func(int n){for (int i=1;i<n;i++) {System.out.println(n);}for (int k=1;k<n;k++) {System.out.println(n);}}
a) O(log(n))
*b) O(n)
c) O(n3)
d) O(2n)
e) O(nlog(n))
Explanation: Complexity notes from the lectures.
Tags: Complexity
Author: mf569 (mf569 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3616298
Created: 7:29pm, 06 Dec 2018
What is an "unstable" sort algorithm?
*a) A sort algorithm that does not take into account the initial ordering of the items being sorted
b) A sort algorithm that has a varying time complexity
c) A sort algorithm that does not always sort the items being sorted correctly
Tags: Sorting
Author: bobobo (arg49 - permission to this course revoked)
Avg Rating: 3.7900
Avg Difficulty: 0.3158
Total ratings: 19



ID: 3616245
Created: 7:23pm, 06 Dec 2018
If the load factor of a closed hash table is 0.7, which of the following is false?
a) The array has 30% more buckets than required.
b) Linear probing takes on average > 2 steps.
*c) In the worst case it takes < 3 steps to find a bucket via linear probing.
d) In the best case linear probing takes 1 step.
e) None of the above.
Explanation: For load factor L, in the worst cast linear probing takes 1/(1-L) steps.Here for L = 0.7 this value is 10/3 which is approximately 3.33C is thus false.The remaining options are true.
Tags: Hashtables
Author: anoushka (as2934 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.9091
Total ratings: 11



ID: 3616238
Created: 7:20pm, 06 Dec 2018
What is this array after 2 iterations of Bubble Sort?["John","Bill","Elon","Mark","Amy","Curtis"]
a) ["Amy", "Elon", "Bill", "Curtis", "Mark", "John"]
*b) ["Bill", "Elon", "Amy", "Curtis", "John", "Mark"]
c) ["Mark", "John", "Elon", "Bill", "Curtis", "Amy"]
d) ["Curtis", "John", "Elon", "Bill", "Amy", "Mark"]
e) ["Elon", "Mark", "Curtis", "John", "Bill", "Amy"]
Explanation: Emulate 2 iterations of Bubble Sort to find the correct answer.
Tags: Sorting
Author: mf569 (mf569 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.6000
Total ratings: 15



ID: 3616224
Created: 7:17pm, 06 Dec 2018
Which sorting algorithm is described by the following psuedocode:flag = falsedo for(i = 0; i < n; i++) if (a[i] > a[i+1]) swap(a[i], a[i+1]) flag = truewhile(flag == true)
a) Selection sort
b) Quicksort
c) Shell sort
*d) Bubble sort
Explanation: Bubble sort works by swapping adjacent values until the list is sorted, "bubbling" small values to the start, and large values to the endseehttps://en.wikipedia.org/wiki/Bubble_sort
Tags: Sorting
Author: wafflelily (gap29 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3616167
Created: 6:57pm, 06 Dec 2018
Which of the following properties does this tree have?1) Binary2) Balanced3) Complete4) Maxheap
*a) 1, 2
b) 1, 2, 4
c) 1, 3, 4
d) 1, 2, 3, 4
e) None
Explanation: 1) Yes - Each node has at most 2 children2) Yes - Each node�s children have heights that differ by at most 13) No - The bottom layer of nodes is not full starting from the left4) No - The tree is not complete
Author: rl836 (rl836 - permission to this course revoked)
Avg Rating: 3.7700
Avg Difficulty: 0.8182
Total ratings: 22
==> Comment 1: 3 and 4 are mixed up in the explanation (by: mcb68 [mcb68])



ID: 3616162
Created: 6:56pm, 06 Dec 2018
Imagine you're working at company that deals with stocks and your team's current project is develop a page on a website that lists companies on the stock market and allows you to monitor them in real time.A feature of this page is that you can sort the companies in a number of ways (e.g. growth in the last day, total net worth, etc.). As these details are changing in real time, the list will also needed to be re-sorted in real-time too.Your team leader has told you that:1. Consistent speed is the top priority. Every second counts in the stock market and any lag will result in complaints.2. The sort should be stable. It will cause confusion if companies with the same value were to swap seemingly randomly.3. Memory is not an issue. The company is prepared to give you as much space as you need for the sort as long as its effective.Which sort is the most appropriate for this situation?
a) Insertion Sort
b) Quick Sort
c) Bubble Sort
*d) Merge Sort
e) Heap Sort
Explanation: The answer is DA - Insertion Sort: Even though it is a stable sort, the average time complexity of this sort is O(n^2). There are quicker sorts available.B - Quick Sort: There are two problems with this sort. Firstly it isn't a consistent sort. It's average time complexity is O(nlog(n)) but it's worse case is O(n^2), meaning it could cause lag. Secondly, it isn't always stable so it doesn't fulfil condition 2.C - Bubble Sort: While easy to implement, it has the same issue as A in the it's average time complexity of O(n^2) and there are quicker sorts available.E - Heap Sort: While this does produce a consistent (Best, Worst and Average case are all the same) complexity of O(nlog(n)), it isn't stable so it doesn't fulfil condition 2.Merge Sort is the correct answer as:- It has a consistent time complexity of O(nlog(n))- It is a stable sortWhile it does have a high space complexity of O(n), we've been told this isn't an issue and that we should just use the most effective sort.
Tags: Sorting, Complexity
Author: mh2250 (mh2250 - permission to this course revoked)
Avg Rating: 4.5200
Avg Difficulty: 0.8000
Total ratings: 50



ID: 3616307
Created: 6:53pm, 06 Dec 2018
What is the time complexity for the code below? Answer with a lower case letter with no other characters.for (int x=0; x<n; x++){ for (int y=0; y<n; y++){ total = numberArrayOne[x] * numberArrayTwo[y]; }}
*a) n^2
b) log(n)
c) sqrt(n)
d) nlog(n)
e) n
Explanation: It is n^2 as there are 2 for loops with a limit of n, one within the other. The pairs of x and y will be (1,1), (1,2), (1,3).....(1,n).....(n,1).....(n,n).
Tags: Complexity
Author: bobobo (arg49 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 3616125
Created: 6:41pm, 06 Dec 2018
Which of the following statements best describes an undirected graph?
a) All edges go from one vertex to another in a specific direction
b) There must be no edges, only vertices
*c) All edges are bi-directional, you can go either way along any edge
d) Edges must go back to the node they came from
e) None of the above
Explanation: In an undirected graph, all edges are bi-directional. You can go either way along any edge.
Tags: ADTs, Graphs
Author: alfiewn (an666 - permission to this course revoked)
Avg Rating: 3.2700
Avg Difficulty: 0.5333
Total ratings: 15



ID: 3616120
Created: 6:40pm, 06 Dec 2018
Which of the following sorting algorithms will be the best choice for a system if a very small sorted array is passed.
a) Quick Sort
b) Merge Sort
*c) Insertion Sort
d) Selection Sort
Explanation: A and B are both divide-and-conquer algorithms, which are bad for small sets of data, whether it is sorted or not. This leaves C and D. While they will both perform well if presented with an unsorted array, Insertion Sort is a stable sorting algorithm, meaning it takes into account the initial ordering before sorting, while Selection Sort is unstable, and therefore it doesn't. Hence, Insertion Sort will perform better as the array presented is sorted.
Tags: Sorting
Author: ivangelemerov (ikg22 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.3750
Total ratings: 16



ID: 3616114
Created: 6:37pm, 06 Dec 2018
Which statement(s) about heaps is false?
a) A heap is one of the most efficient data structures for implementing a priority queue.
b) A heap is a complete binary tree.
c) There are two types of heaps: max-heaps and min-heaps.
*d) A heap is a binary search tree (BST).
e) All of the above statements are false.
Explanation: A - false, a heap is one of the most efficient data structures for implementing a priority queue. (see page 5 inD&A-Lecture16-Trees4.pptx slides)B - false, aheap is a complete binary tree. (see page 6 in D&A-Lecture16-Trees4.pptx slides)C - false, there are two types of heaps: max-heaps and min-heaps. (see page 7 in D&A-Lecture16-Trees4.pptx slides)D - true: a heap is not a binary search tree, as for a given node, the right child may not be larger than the parent, and the left child may not be smaller than the parent.E - false, D is the only false statement.
Tags: Trees
Author: avb49 (avb49 - permission to this course revoked)
Avg Rating: 4.1300
Avg Difficulty: 0.7500
Total ratings: 8



ID: 3616094
Created: 6:30pm, 06 Dec 2018
How many steps to find page 64 in a dictionary which has 100 pages start from page 1 using binary search?
a) 5
*b) 6
c) 7
d) 8
e) 9
Explanation: 1. (1+100)/2 = 50.5 = 51,2. 64 is not 51 and greater than 51 ----> reject 1 to 51.3. (52+100)/2 = 76,4. 64 is not 76 and smaller than 76 ----> reject 76 to 100.5. (52+75)/2 = 63.5 = 646. 64 is the correct page
Tags: ADTs
Author: parcobbq (plu20 - permission to this course revoked)
Avg Rating: 3.1000
Avg Difficulty: 1.0000
Total ratings: 10
==> Comment 1: Same answer but different explanation:1. low = 1, mid = 50, high = 100, discard 1-50.2. low = 51, mid = 75, high = 100, discard 75-100.3. low = 51, mid = 62, high = 74, discard 51-62.4. low = 63, mid = 68, high = 74, discard 68-74.5. low = 63, mid = 65, high = 68, discard 65-68.6. low = 63, mid = 64, high = 64. Found at 64.I think when counting steps you should count the partitions with what you're discarding.Also, in java, which is the language we're using in this course, integers get rounded down.Lastly, you maybe shouldn't include the edge of the partition if you know that it doesn't match what you're looking for. (by: nmparrott [nmp31])



ID: 3616090
Created: 6:29pm, 06 Dec 2018
Flann O'Brien is an outlaw. He was attempting to hide out at point A, but realised that life there is too boring. He would like to return to point I as quick as possible. However all boats are being searched in case he's on board. With the exception of north Scotland, since the authorities are English and the Scottish referendum only happened 4 years ago... and well they're little scared to go up there.Given that Flann (if that is even his real name) wants to return as quick as possible, which route should he take?
*a) A,B,W,L,C,N,I
b) A,B,E,L,C,N,I
c) A,B,S,N,I
d) A,B,W,S,N,I
e) None of the above
Explanation: A) You were right. Good for you.B) So close but not quite.. you can save time by going to W skipping out E. To get to L it would be 12 instead of 13. tbh if you got this wrong you should really work on your mental arithmetic. There's some pretty good apps.C) The least towns stopped in. However time is of the essence, and this takes 20 days :(D) W-S does not exist... return directly to go, and do not collect 200 Irish francsNone of the above: while this seems a credible answer, as the trip involves going to Scotland. The only alternative is attempting to swim, and no offence but you are doing Java, so the chances of you being able to swim to Ireland are a little slim.And 'no' dying is not better than going to Scotland. It's a lovely place. The people are very nice.. most of them are, but Flann is Irish so he will get on fine.
Tags: Applications, Graphs
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 4.3300
Avg Difficulty: 0.6667
Total ratings: 12



ID: 3616313
Created: 6:28pm, 06 Dec 2018
When traversing a binary tree with the pre-order traversal method, what is the order in which nodes are processed?
*a) Process current node, process nodes in the left sub-tree, process nodes in the right sub-tree
b) Process current node, process nodes in the right sub-tree, process nodes in the left sub-tree
c) Process nodes in the left sub-tree, process current node, process nodes in the right sub-tree
Tags: Trees
Author: bobobo (arg49 - permission to this course revoked)
Avg Rating: 3.7700
Avg Difficulty: 0.5385
Total ratings: 13



ID: 3616038
Created: 6:17pm, 06 Dec 2018
State the complexity of the following algorithm:for(int i = 0; i < n; i++){ ListNode node = head; for (int j = 0; j < i - 1; j++){ node = node.next; } if(j > 3){ for(int k = 0; k < j; k++){ node.element += k; if(node.element >= 23){ break; } } }}node.next = new ListNode(o, node.next);
*a) ?(n^2)
b) ?(n^3)
c) ?(2n^2)
d) ?(nlog(n))
e) ?(2nlog(n))
Explanation: While there are a lot of if and for loops, it basically is 2 for loops inside a third one, meaning it is n for the first loop, n for the second making it 2n for the inside loops, and n for the outside for loop, giving it a total of 2n^2. However, coefficients are ignored, so?(n^2).
Tags: Complexity
Author: ivangelemerov (ikg22 - permission to this course revoked)
Avg Rating: 3.0800
Avg Difficulty: 0.9231
Total ratings: 13
==> Comment 1: Would this algorithm work? j only seems to be defined inside the second for loop, which is closed after node = node.next, so j would not be defined for the next if statement. (by: mcb68 [mcb68])



ID: 3616041
Created: 6:15pm, 06 Dec 2018
Which of the following sorting algorithms is Stable?
a) Shell Sort
b) QuickSort
c) SelectionSort
*d) InsertionSort
e) Heap Sort
Explanation: D insertion sort is Stable
Tags: Sorting
Author: wp342 (wp342 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.6667
Total ratings: 9



ID: 3616019
Created: 6:11pm, 06 Dec 2018
In a Skiplist where p = 1/2 (i.e the probability that the node has 1 lane is 1/2 and the probability that the node has 2 lanes is 1/4 etc...) which has 1024 nodes. How many nodes should we expect to see that have exactly 6 lanes?
a) 8
*b) 16
c) 10
d) 7
e) 5
Explanation: There are 1024 nodes. The probability of having 6 lanes is= .So the expected number of nodes with exactly 6 lanes is: 1024 * = 16.
Tags: Lists
Author: kb672 (kb672 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.8333
Total ratings: 18
==> Comment 1: I think lane 1 has a probability of 1, then lane 2 has a probability of 1/2 ect... (by: cro26 [cro26])



ID: 3616039
Created: 5:55pm, 06 Dec 2018
Which of the following show the structure of an AVL tree?
*a)
b)
c)
Explanation: A is correct as an AVL tree is a BST in which the heights of the left and right sub-trees of each node differ at most by 1.
Tags: Trees
Author: wp342 (wp342 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3616043
Created: 5:49pm, 06 Dec 2018
What are the characteristics of a Binary Tree?
a) In a binary Tree the heights of the left and right sub-trees of each node differ at most by 1.
*b) In a binary tree, every node has at most two children nodes.
c) In a Binary tree, every node can have at most four children nodes
Explanation: B is correct as A describes the characteristics of an AVL Tree which although is a Binary Tree, the answer specifies characteristics unique to an AVL Tree, not a general binary tree.
Tags: Trees
Author: wp342 (wp342 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 0.0714
Total ratings: 14



ID: 3615942
Created: 5:48pm, 06 Dec 2018
Which of the following statements is false
a) In a room with 23 people there is a 50% chance two people have the same birthday
*b) Post order traversal involves processing the right node, then the left node, then the current node
c) An AVL tree is a BST wherethe heights of the left and right sub-treesof each node differ at most by 1
d) Selection sort always has a time complexity of O(n^2)
Explanation: Post order traversal involves processing the left node, then the right node, then the current node
Tags: Sorting, Search, Trees, Complexity
Author: io278 (io278 - permission to this course revoked)
Avg Rating: 4.1100
Avg Difficulty: 0.5789
Total ratings: 19



ID: 3615912
Created: 5:37pm, 06 Dec 2018
Considering an implementation of a linked list with a head pointer and no tail pointer, which two of the following operations have a complexity of O(1) time?1. Insertion at the end of the list2. Insertion at the front of the list3. Deletion of the last node in the list4. Deletion of the First node in the list
a) 1 and 2
b) 1 and 3
c) 2 and 3
*d) 2 and 4
Tags: Lists, Search, Complexity
Author: callumb212 (cb2077 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.5455
Total ratings: 22



ID: 3615901
Created: 5:32pm, 06 Dec 2018
Using a standard closed hash table with linear probing which has slots 0, ... ,7 and hash function h(x) = x % 8. What is the output of the hash table when the following numbers are inserted 14, 9, 26, 31, 2, 7, 11, 19?
a) 14, 9, 26, 31, 2, 7, 11, 19
b) 7, 9, 2, 26, 19, 11, 14, 31
*c) 7, 9, 26, 2, 11, 19, 14, 31
Explanation: 14 / 8 = 1 remainder 6 - Into slot 69 / 8 = 1 remainder 1 - Into slot 126 / 8 = 3 remainder 2 - Into slot 231 / 8 = 3 remainder 7 - Into slot 72 / 8 = 0 remainder 2 - Slot 2 is taken, into slot 37 / 8 = 0 remainder 7 - Slot 7 is taken, into slot 011 / 8 = 1 remainder 3 - Slot 3 is taken, into slot 419 / 8 = 2 remainder 3 - Slot 3 is taken, slot 4 is taken, into slot 5Therefore, the order is 7, 9, 26, 2, 11, 19, 14, 31
Tags: Hashtables
Author: am2541 (am2541 - permission to this course revoked)
Avg Rating: 4.1500
Avg Difficulty: 0.8462
Total ratings: 13



ID: 3615887
Created: 5:25pm, 06 Dec 2018
Given the two binary trees, what is the combined sum of node values of both diameters?
a) 19
b) 21
c) 27
d) 33
*e) 38
Explanation:
Tags: Trees
Author: km846 (km846 - permission to this course revoked)
Avg Rating: 2.1000
Avg Difficulty: 1.1000
Total ratings: 10
==> Comment 1: Diameters aren't in this course (by: nmparrott [nmp31])



ID: 3615951
Created: 5:19pm, 06 Dec 2018
What are the average and worst case complexities of searching in a binary search tree? (in respective order)
a) O(n), O(logn)
b) O(n), O(n)
*c) O(logn), O(n)
d) O(logn), O(logn)
Explanation: The worst case happens if the tree is fully skewed to the left or right where you would have to process all the nodes of the tree giving O(n) complexity. The average case is O(logn) as the search through the tree is often split in half when comparing elements.
Tags: Lists, Search, Trees, Complexity
Author: callumb212 (cb2077 - permission to this course revoked)
Avg Rating: 4.0900
Avg Difficulty: 0.5909
Total ratings: 22



ID: 3616497
Created: 5:08pm, 06 Dec 2018
What value does the following code for a binary search tree print?public void getElement(Tree root) { while(root.right() != null) { root = root.right(); } System.out.println(root.data());}
a) The newest element
*b) The largest element
c) The smallest element
Explanation: The code searches for the right-most element which, in the case of a binary search tree, is the largest element.
Tags: Search, Trees
Author: callumb212 (cb2077 - permission to this course revoked)
Avg Rating: 3.9500
Avg Difficulty: 0.1500
Total ratings: 20



ID: 3615836
Created: 5:08pm, 06 Dec 2018
When does a Insertion sort have (n)?
a) The array is in reverse order.
b) All the time.
*c) Already or nearly ordered arrays.
Explanation: Insertion sort has (n) for already or nearly ordered arrays, and has (n2) otherwise.
Tags: Sorting
Author: am2541 (am2541 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3615823
Created: 5:05pm, 06 Dec 2018
Old MacDonald has a farm (eieio), but his farm has been bought by McDonald's for his plump, juicy chickens.Old MacDonald now works for McDonald's under a contract where, at the end of every week, he has to send them his plumpest chicken. Furthermore, if Old MacDonald still has more than 63 chickens in his farm, he must keep sending the next plumpest chicken until he has 63.To perform his job more efficiently, McDonald's promoted "Old MacDonald" to "New MacDonald" by giving him a fancy new computer, and have told him to create a data structure to assist him in consistently finding the plumpest chicken.New MacDonald is however still very inexperienced with data structures and needs some advice. He was told by McDonald's that his data structure should have the following qualities:- Removing the plumpest chicken from the list should be easy and repeatable and is of the highest priority.- Updating the weight of existing chickens and reordering the structure accordingly should be possible.- Adding newborn chickens should be possible but isn't a priority (Most eggs are used for breakfast McMuffins anyway).Which data structure should New MacDonald use?
*a) A Heap
b) An Open Hash Table
c) An AVL Tree
d) A Closed Hash Table
e) A Linked List
Explanation: The answer is A.B - An Open Hash Table: It would be difficult to create an good hash function for putting the plumpest chickens in a single cell, making the plumpest chickens hard to find. Updating weights would also be difficult.C - An AVL Tree: While removing the plumpest chickens would be easy enough (removing the right-most node), updating chicken weights would have to be done by removing them and re-inserting them with their new weight if the order is to be maintained properly. Another good point is that it would be easy to know when to there are more than 63 chickens (2^h - 1 = the max no. of nodes in a tree of height h and 63 = 2^6 - 1; this means that if the height of the tree is more than 6, there are more than 63 chickens).D - A Closed Hash Table: Similarly to B, creating a good hash function would for ordering chickens would be difficult, making it hard to find the plumpest chicken.E - A Linked List: Removing the plumpest chicken would be easy (remove the first or last item and change the head or tail respectively), but updating chicken weights would also have to be done by removing and re-inserting.A heap would be the best structure for New MacDonald as:- Removing the plumpest chicken is simple (you simply remove the root of the heap)- Updating chicken weights is intuitive (you can update weight and then sift up or down accordingly)- It's easy to know when there are more than 63 chickens (when the heap height is more than 6, as max no. of nodes is 2^h - 1 and 63 = 2^6 - 1
Tags: Lists, Sorting, Search, Trees, Hashtables
Author: mh2250 (mh2250 - permission to this course revoked)
Avg Rating: 4.7400
Avg Difficulty: 1.3000
Total ratings: 80
==> Comment 1: Pretty creative question! (by: samz285 [gz285])
==> Comment 2: This question is art (by: jabzilla [jab218])
==> Comment 3: Rate this (by: epo24 [epo24])



ID: 3615799
Created: 5:00pm, 06 Dec 2018
1, 3, 2, 6, 5, 4, 15, 20, 17, 13, 7Above is a traversal of the tree below. Which traversal type is it? 7 / \ 4 13 / \ \ 2 5 17 / \ \ / \ 1 3 6 15 20
a) Pre-order traversal.
b) In-order traversal.
c) Level-order traversal.
*d) Post-order traversal.
Explanation: Pre-order: 7, 4, 2, 1, 3, 5, 6, 13, 17, 15, 20 ?In-order: 1, 2, 3, 4, 5, 6, 7, 13, 15, 17, 20 ?Level-order: 7, 4, 13, 2, 5, 17, 1, 3, 6, 15, 20 ?Post-order:1, 3, 2, 6, 5, 4, 15, 20, 17, 13, 7 ??
Tags: Trees
Author: tjc58 (tjc58 - permission to this course revoked)
Avg Rating: 4.2100
Avg Difficulty: 0.5263
Total ratings: 19



ID: 3615789
Created: 4:57pm, 06 Dec 2018
What does the following algorithm do?void algorithm(Node cur) { if (cur == null) { return; } algorithm(cur.left); algorithm(cur.right); System.out.print(cur.value + � �);}
a) Level-order traversal
b) Pre-order traversal
c) In-order traversal
*d) Post order-traversal
Explanation: The post order traversal processes nodes in the following order:Left subtree, right subtree, current node.
Tags: Trees
Author: nadch20 (nadch20 - permission to this course revoked)
Avg Rating: 4.0800
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3615780
Created: 4:56pm, 06 Dec 2018
Which sorting algorithm is most efficient in sorting an array with 1 million integers
a) Bubble sort
b) Insertion sort
*c) Merge sort
Explanation: Merge sort has a time complexity of O(logn), whereas bubble sort has a time complexity of O(n^2) and insertion sort has a time complexity of O(n^2)
Augmented explanation 1: Merge sort has a time complexity of O(nlogn), whereas bubble sort has a time complexity of O(n^2) and insertion sort has a time complexity of O(n^2) (by: joebr [jayb20])
Tags: Sorting
Author: io278 (io278 - permission to this course revoked)
Avg Rating: 3.3100
Avg Difficulty: 0.2308
Total ratings: 13
==> Comment 1: Merge sort has a complexity of O(nlogn) not O(logn) (by: nmparrott [nmp31])



ID: 3615772
Created: 4:53pm, 06 Dec 2018
You are designing the emissions data recording software for a vehicle, the computer has very little ram available. Which of the following sorting algorithms is the most appropriate for you to use?
a) Quick sort
b) Merge sort
*c) Shell sort
d) Insertion sort
Explanation: If we look at the complexities of the algorithms we see: Quick sort has O(n log(n)) average run-time and uses O(n) auxiliary memory in the worst case, Merge sort has O(n log(n)) average run-time and uses O(n) auxiliary memory, Shell sort has O(n^1.25) average run-time and uses O(1) auxiliary memory and Insertion sort has O(n^2) average run-time and uses O(1) auxiliary memory. We can see that Shell sort is the best choice as it is the fastest algorithm that uses the least amount of memory.
Tags: Sorting, Complexity
Author: nac36 (nac36 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 1.1000
Total ratings: 10



ID: 3615768
Created: 4:53pm, 06 Dec 2018
Given the following AVL tree what would the tree look like after the insertion of "9". Note that all results are valid AVL Trees. The correct answer uses the balancing algorithm from the lecture.
a)
b)
*c)
d)
Explanation: When "9" is inserted the tree needs to undergo a right-left rotation. This is required because the node "8" becomes unbalanced (balance becomes +2) due to insertion on the left node of the right subtree of 8 hence a right-left rotation is required. A brilliant explanation of rotations can be found here:https://www.tutorialspoint.com/data_structures_algorithms/avl_tree_algorithm.htm .It is important to note that balancing is done bottom up. So although the node "7" becomes unbalanced the balancing on "8" takes place first.For a better visual representation see:https://www.cs.usfca.edu/~galles/visualization/AVLtree.html
Tags: Trees
Author: kb672 (kb672 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.5625
Total ratings: 16



ID: 3615754
Created: 4:49pm, 06 Dec 2018
Which of these statements about AVL trees is untrue?
a) An AVL tree is binary
*b) An AVL tree is always perfectly balanced
c) An AVL tree is self-balancing
d) An AVL tree is a search tree
Explanation: An AVL tree is not necessarily perfectly balanced but it is always balanced to within +/-1.
Tags: Trees
Author: nadch20 (nadch20 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.7273
Total ratings: 11



ID: 3615731
Created: 4:45pm, 06 Dec 2018
The Load of a hash table is defined as:
a) average number of keys to insert
*b) max number of keys to insert / number of buckets in the array
c) number of buckets in the array * number of keys to insert
d) max number of items the hash table can store
Explanation: Definition from Lecture 9 page 12
Tags: Hashtables
Author: elliotstein1 (ers54 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.2000
Total ratings: 15



ID: 3615724
Created: 4:44pm, 06 Dec 2018
If a function has the following bounds:- Lower Bound f(x) = 2n2+ log(n) + n- Upper Bound f(x) = 2n2 + 2n + 1what is the Big-Theta of this function?
a) 2n2 + n
b) 2n2 + log(n)
*c) n2
d) 2n2
Explanation: Identifying the most significant term of both bound equations and removing constants obtains:- Lower Bound f(x) =n2- Upper Bound f(x) = n2Therefore, the Big-Theta is n2.
Tags: Complexity
Author: am2541 (am2541 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3615697
Created: 4:40pm, 06 Dec 2018
Which of the following isnot a primitive data type in Java?
a) boolean
b) long
c) int
*d) String
e) double
Explanation: Java has 8 primitive data types:booleanbytecharshortintlongfloatdoubleString, however, is not a primitive data type.
Tags: ADTs
Author: tjc58 (tjc58 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.5333
Total ratings: 15



ID: 3615689
Created: 4:37pm, 06 Dec 2018
How would you convert a tree into a sorted list (smallest to biggest)
a) Pre order traversal
*b) In order traversal
c) Post order traversal
Explanation: In order - searches the node on the left, then the current node, then the node on the right
Tags: Lists, Search, Trees
Author: io278 (io278 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.3125
Total ratings: 16



ID: 3615685
Created: 4:36pm, 06 Dec 2018
What part of a skip list makes its average runtime relatively quick?
a) Tail pointer
b) Slow lane
c) Head pointer
d) Middle lane
*e) Fast lanes
Explanation: The fast lanes of a skip list are used as checkpoints as they skip over elements and check if the element they next stop on is <= the element they are searching for. This means that it doesn't often have to search through all the n elements to find the one it is looking for.
Tags: Lists, Search, Complexity
Author: rfmh20 (rfmh20 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.3000
Total ratings: 20



ID: 3615680
Created: 4:35pm, 06 Dec 2018
What is the main reason we prefer to use an adjacencyarray over an adjacencylist, in the case where our graph is dense?
a) The array is smaller than the list
*b) The array is less complex than the list
c) The array is 2 dimensional
Explanation: The array contains more elements than the list, (unless every node is linked to every other node and itself). But it is a less complex data structure.
Tags: Graphs
Author: elliotstein1 (ers54 - permission to this course revoked)
Avg Rating: 3.3000
Avg Difficulty: 0.6000
Total ratings: 10



ID: 3615659
Created: 4:29pm, 06 Dec 2018
Which of the statements about the functions beloware all true.f(x) = 14x2 + 42x + 5xlog2xg(x) = 5x2 + 7x2log2xh(x) = 144x + 2x + 5x!i(x) = 3 + x2 + log2x
a) f = O(g)g = O(h)i = T(f)
b) g = O(h)f = O(h)i = T(g)
*c) g = O(h)h = O(f)f = T(i)
d) f = O(i)h = O(g)i = T(h)
Explanation: Answer A - False: g? O(h)Answer B - False: f ? O(h),i? T(g)Answer C - True: All statements are true.Answer D - False: i ? T(h)
Tags: Complexity
Author: tjc58 (tjc58 - permission to this course revoked)
Avg Rating: 1.8000
Avg Difficulty: 1.4000
Total ratings: 10
==> Comment 1: I strongly advise that you revise this material before the exam. (by: nmparrott [nmp31])



ID: 3615632
Created: 4:23pm, 06 Dec 2018
Consider the following tree. (2) / \(1) (6) / \ (4) (7) / \ (3) (5)Which of the following statements are true?
a) The tree requires a single rotation to balance. It can't be perfectly balanced.
b) The tree requires a single rotation to balance. It will then be perfectly balanced.
c) The tree requires a double rotation to balance. It can't be perfectly balanced.
*d) The tree requires a double rotation to balance. It will then be perfectly balanced.
Explanation: After first rotation, the tree becomes: (2) / \(1) (4) / \ (3) (6) / \ (5) (7).After second rotation: (4) / \ (2) (6) / \ / \(1) (3) (5) (7). Which is perfectly balanced.
Tags: Sorting, Trees
Author: elliotstein1 (ers54 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.7333
Total ratings: 15



ID: 3615626
Created: 4:21pm, 06 Dec 2018
Which of the following facts about a Selection Sort of n items is not true?
a) The input has no affect on the number of steps required.
*b) The Selection Sort is of order (n).
c) Selection Sort is not a stable sort.
Explanation: Selection sort will always compare all items to the right of each item, so no matter the input order, the time will be the same.It is not stable, for example say you have7 7 3 in a list. No swap will occur with the7and 7, but will with the7and 3. You will get 3 77.When it comes for the 7 to compare to7, no swap will occur as they are the same value, but they have swapped round, so the order of the equal items has not been preserved.There are n + (n-1) + ... + 1 = (n2) steps, which is not (n) as suggested by option B.
Tags: Search
Author: sah83 (sah83 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.5333
Total ratings: 15



ID: 3615618
Created: 4:19pm, 06 Dec 2018
Which of the following is the definition of an upper bound, g = O(f(n))?
a) g(n) =O(f(n)) iff there are positive constants c1 and c2 and N>0 such that for all n>N, g(n) = c1 f(n) and g(n) = c2 f(n)
*b) g(n) =O(f(n)) iff there are constants c>0 and N>0 such that for all n>N,g(n) = c f(n)
c) g(n) =O(f(n)) iff there are constants c>0 and N>0 such that for all n>N,g(n) = c f(n)
Explanation: A: exact boundB: upper boundC: lower bound
Tags: Complexity
Author: nadch20 (nadch20 - permission to this course revoked)
Avg Rating: 3.3300
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3615583
Created: 4:10pm, 06 Dec 2018
Which of these is NOT a drawback of a closed hash table?
a) Very difficult to remove elements
*b) Can cause collisions between values
c) Table can become full
Explanation: Closed hash tables avoid collisions by placing the value in the next available slot if the correct one is already full.
Tags: Hashtables
Author: nadch20 (nadch20 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3615574
Created: 4:08pm, 06 Dec 2018
Which of the following is a correct expression for the sumcommonly encountered when evaluating time complexity?
a)
b)
*c)
d)
e)
Explanation: Add together..then divide by 2:
Tags: Complexity
Author: ecksdee (drc34 - permission to this course revoked)
Avg Rating: 3.6200
Avg Difficulty: 0.7692
Total ratings: 13



ID: 3615562
Created: 4:05pm, 06 Dec 2018
Consider the complexities of the following.Which does not match the rest?
a) inserting an element at the end of a singly linked list
*b) removing an element from the end of a doubly linked list
c) removing an element from the front of an array list
d) removing an element from the end of a singly linked list
Explanation: Inserting an element at the end of a singly linked list, removing an element from the front of an array list and removing an element from the end of a singly linked list all have runtime?(n)Removing an element from the end of a doubly linked list however has runtime?(1)
Tags: Lists, Complexity
Author: anoushka (as2934 - permission to this course revoked)
Avg Rating: 2.9100
Avg Difficulty: 0.5455
Total ratings: 11
==> Comment 1: It really depends on whether or not there is a tail reference (by: nmparrott [nmp31])



ID: 3615559
Created: 4:04pm, 06 Dec 2018
Which nodes in the following binary tree have non-zero balance factor? 7 / \ 4 13 / \ \ 2 5 17 / \ \ / \ 1 3 6 15 20
a) 7, 4, 5, 13, 17
*b) 5, 13
c) 13
d) 5, 13, 4
e) None.
Explanation: BalanceFactor(N) := Height(RightSubtree(N)) � Height(LeftSubtree(N))The node '5' has a balance factor of 1.The node '13' has a balance factor of 2.All other nodes have a balance factor of 0.
Tags: Trees
Author: tjc58 (tjc58 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.3636
Total ratings: 11



ID: 3615552
Created: 4:02pm, 06 Dec 2018
What is the worst case time complexity for quick sort?
a)
*b)
c)
Explanation: In the worst case, which is when the array is fully or mostly sorted, partitioning only puts elements to the left at the cost of n, n-1, n-2, ..., 1 steps which all together produce an asymptotic complexity.
Tags: Sorting, Complexity
Author: tokenguard (bb563 - permission to this course revoked)
Avg Rating: 4.3300
Avg Difficulty: 0.4444
Total ratings: 18



ID: 3615517
Created: 3:51pm, 06 Dec 2018
I have a data structure, filled with species of animals since the beginning of time. I am wanting to add these species in the order of their first discovery date. Any new species encountered will therefore be added to the front. I have no need to retrieve any animal once it is in my data structure. When an animal is extinct, I want to remove it from my data structure.Which of the following statements is notcorrect for why I should use a Linked List as the Data Structure for storing the animals, rather than an array?
*a) Linked Lists in general are much easier to implement than arrays.
b) It is much quicker to add an element at the front of a linked list, over an array.
c) It is much easier to remove an item in the middle of a linked list, over an array.
Explanation: Option B is true; in an array we would have to shift all the existing animals right to add the new one.Option C is true; in an array we would have to shift all the following animals left once an extinct animal was removed.Option A is not a reason to use this data structure; arrays are far easier to use than linked lists!See Lecture 7 Slide 13.
Tags: ADTs, Lists
Author: sah83 (sah83 - permission to this course revoked)
Avg Rating: 3.5600
Avg Difficulty: 0.3333
Total ratings: 9



ID: 3615505
Created: 3:48pm, 06 Dec 2018
Given the following Binary Search Tree: (F) / \ (D) (G) / \ (B) (E) / \(A) (C)which tree does a right rotation rooted at F produce as a result?
a) (B) / \(A) (D) / \ (C) (E) \ (F)
*b) _(D)_ / \ (B) (F) / \ / \(A) (C) (E) (G)
c) _(F)_ / \ (B) (D) / \ / \(A) (C) (E) (G)
Explanation: A right rotation promotes D to be the new root and sets F's left child to D's right child, thus ensuring the root of the rotation is now in balance.
Tags: Trees
Author: tokenguard (bb563 - permission to this course revoked)
Avg Rating: 4.2900
Avg Difficulty: 0.2941
Total ratings: 17



ID: 3615493
Created: 3:45pm, 06 Dec 2018
All of these algorithms are said to be divide and conquer algorithm except
a) MergeSort
b) QuickSort
c) Binary search
*d) ShellSort
Explanation: Lecture 11 Sorting 2
Tags: Sorting, Search
Author: am3132 (am3132 - permission to this course revoked)
Avg Rating: 3.6500
Avg Difficulty: 0.3529
Total ratings: 17



ID: 3615474
Created: 3:39pm, 06 Dec 2018
All of these sentences are true except:
a) Heap data structure is implemented using a special type of binary tree.
*b) A heap is a binary search tree.
c) A heap is one of the most efficient way to implement a Priority Queue.
d) Heaps use a complete binary tree.
Explanation: A heap is not a binary search tree but it uses one!
Tags: Trees
Author: am3132 (am3132 - permission to this course revoked)
Avg Rating: 4.3300
Avg Difficulty: 0.9167
Total ratings: 12



ID: 3615457
Created: 3:34pm, 06 Dec 2018
What is the correct algorithm for preorder tree traversal?
a) 1) Process node in left sub-tree2) Process current node3) Process node in right sub-tree
b) 1)Process the node in the right sub-tree2) Process the node in the left sub-tree3)Process the current node
*c) 1) Process the current node2) Process the nodes in the left sub-tree3) Process the nodes in the right sub-tree
Explanation: Preorder traversal can a way of printing out an entire tree, or a way to search an entire tree.
Tags: Trees
Author: jscs20 (jscs20 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3615449
Created: 3:33pm, 06 Dec 2018
In a singly linked list, which of these operations has the best average runtime complexity?
a) get()
*b) add()
c) remove()
d) insert()
e) find()
Explanation: All the operations are dependant (on average) on the number of items in the list, apart from add(). As add() just places an item on the tail, it has a worst case runtime complexity, and therefore average, of 1.
Augmented explanation 1: Assuming there is a tail pointer (by: bgj22 [bgj22])
Tags: Lists, Search, Complexity
Author: rfmh20 (rfmh20 - permission to this course revoked)
Avg Rating: 3.3700
Avg Difficulty: 0.4211
Total ratings: 19



ID: 3615448
Created: 3:33pm, 06 Dec 2018
Which of these statements about quicksort is true?
a) Partitioning always picks the first element in the sub-array (range) to partition
b) The worst case time complexity for quicksort is O(nlog(n))
c) Quicksort can only be implemented on a single thread/core
*d) Partitioning has a complexity of O(n)
Explanation: Partitioning can use other pivot points. Worst case is O(n^2), and due to being recursive can be multi threaded.
Tags: Sorting
Author: tec26 (tec26 - permission to this course revoked)
Avg Rating: 3.9500
Avg Difficulty: 1.1053
Total ratings: 19



ID: 3615479
Created: 3:29pm, 06 Dec 2018
What are the best, average and worst case time complexities for inserting an element into an ArrayList, respectively?
a) T(1), T(log(n)),T(n)
b) T(n),T(n),T(n2)
*c) T(1), T(n),T(n)
d) T(1),T(1),T(n)
Explanation: Best case is when inserting the last element in ArrayList, as you just add it to the end and so O(1). Aside from this, you will most likely have to shift the ith and all following elements to the right.
Tags: Lists
Author: bgj22 (bgj22 - permission to this course revoked)
Avg Rating: 3.9500
Avg Difficulty: 0.4211
Total ratings: 19



ID: 3615419
Created: 3:27pm, 06 Dec 2018
Consider the following algorithm:for (int i = 0; i < n; i++) { for (int j = 7; j < n2; j+2) { print i + j; }}Let f(n) be the run-time of this algorithm. Which one of the following statements is false?
a) f(n) = (n3)
*b) f(n) = (n4)
c) f(n) = O(n3)
d) f(n) = O(n4)
e) f(n) = (n2)
Explanation: The function f(n) = (n3) since the first loop has order n and the second loop has order n2. This means option A is okay.O represents the Upper Bound, so option C is okay.Same with option D.represents the Lower Bound, so option E is okay.Clearly n4 is not lower than n3so option B is false (the answer).
Tags: Complexity
Author: sah83 (sah83 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 1.1250
Total ratings: 16



ID: 3615415
Created: 3:27pm, 06 Dec 2018
What is the difference between the accuracy and the precision of a set of values?
*a) Accuracy is how close to the real value your measurement is while precision is how close your measurements are to each other.
b) Precision is how close to the real value your measurement is while accuracy is how close your measurements are to each other.
c) Precision is the number of significant figures that the measurement is calculated to while accuracy is how close to the real value your measurement is.
d) Precision is how close your measurements are to each other while accuracy is the number of significant figures that the measurement is calculated to.
e) None of the above.
Explanation: As seen in slide 7 here:https://moodle.bath.ac.uk/pluginfile.php/1116656/mod_resource/content/2/DA-Lecture03-Complexity1.pdf
Tags: Applications, Complexity
Author: nc654 (nc654 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.1538
Total ratings: 13



ID: 3615399
Created: 3:22pm, 06 Dec 2018
What is the equation for the average number of steps to insert/find an item in an Open Hash Table? (where L = load)
*a) 1 + L/2
b) L * (1/2)
c) 2 + 1/L
Explanation: So, if your array is 10x bigger than required, you have a load factor of 0.10 which gives the average number of steps as 1.05.
Tags: Hashtables
Author: jscs20 (jscs20 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.2000
Total ratings: 10



ID: 3615382
Created: 3:17pm, 06 Dec 2018
If a closed hash table uses linear probing, and has a load factor of 0.75, what is the average number of steps required to find the item?
a) 7/6
*b) 2.5
c) 2
d) 3
e) 5
Explanation: As according to lecture 9, the formula for this is 0.5(1 + (1 / (1 - L))). 1 - L = 0.25, 1 / 0.25 = 4, 1 + 4 = 5, 0.5 * 5 = 2.5.
Tags: Hashtables
Author: boydicus_14 (ajb244 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.7500
Total ratings: 16



ID: 3615368
Created: 3:13pm, 06 Dec 2018
What is the time complexity of the following?for (int i = 0; i < n; i++) { for (int j = 0; j < n/2; j++) { System.out.println(n); }}
a) O(n)
b) O(n log(n))
c) O(log(n))
*d) O(n2)
e) None of the above
Explanation: As it is a nested for loop, you would multiply the complexity of each for loop together to work out the overall complexity.The outer loop has complexity O(n) while the inner loop has complexity O(n/2). Therefore the overall time complexity is O(n*(n/2)) = O(n2/2) which we would generalise as O(n2).
Tags: Complexity
Author: nc654 (nc654 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.3889
Total ratings: 18



ID: 3615362
Created: 3:12pm, 06 Dec 2018
Which is correct:
a) Big-Oh = Lower boundBig-Theta = Exact boundBig-Omega = Upper bound
b) Big-Oh = Exact boundBig-Theta = Lower boundBig-Omega = Upper bound
*c) Big-Oh = Upper boundBig-Theta = Exact boundBig-Omega = Lower bound
Explanation: O(f(n)) represents the upper boundO(f(n)) represents the lower bound?(f(n)) represents the exact bound
Tags: Complexity
Author: jscs20 (jscs20 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 3615323
Created: 2:59pm, 06 Dec 2018
What is the difference between an open hash table and a closed hash table? (assuming the closed hash table uses linear probing)
a) It's easier to delete an element in a closed hash table
b) Open hash tables deal with collisions
*c) Open hash tables can contain more than one element in a cell
d) Closed hash tables are more efficient than open hash tables when they have a higher load
Explanation: As defined from lecture 9, the other answers show the opposite of what is true
Tags: Hashtables
Author: boydicus_14 (ajb244 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.3750
Total ratings: 16



ID: 3615274
Created: 2:36pm, 06 Dec 2018
If we are implementing a heap in an array structure and we have a parent node at position 7, what position is its right child?
a) 8
b) 3
c) 14
d) 9
*e) 16
Explanation: 16 and the formula for a nodes children in array form are as follows,leftChild(parent) = 2* parent + 1rightChild(parent) = 2* parent + 2
Tags: Trees
Author: welsbyj (jw2449 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.7692
Total ratings: 13



ID: 3615257
Created: 2:26pm, 06 Dec 2018
Letf(n) = O(p(n)),g(n) = O(q(n)),h(n) = O(r(n))What is the order of f(n)g(n) + h(n) ?
a) O(max{p(n), q(n), r(n)})
*b) O(max{ p(n)q(n), r(n) })
c) O(p(n)q(n)) +O(r(n))
d) O(max{ p(n)r(n), q(n)r(n)})
e) O(max{ p(n)+r(n), q(n)+r(n)})
Explanation: In the case of products, if f1(n) = O(p1(n)) and f2(n) = O(p2(n)),thenf1(n)f2(n) = O(p1(n)p2(n))Sof(n)g(n) = O(p(n)q(n))In the case of sums, iff1(n) = O(p1(n))andf2(n)=O(p2(n)), thenf1(n) + f2(n) = O(max{p1(n), p2(n) })So takingf(n)g(n) = h'(n)and p(n)q(n) = r'(n), h'(n) + h(n) = O(max{r'(n), r(n)} i.e. f (n)g(n) + h(n) = O(max{p(n)q(n), r(n)})
Tags: Complexity
Author: anoushka (as2934 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 1.0000
Total ratings: 17
==> Comment 1: To me, f(n)g(n) doesn't make much sense. Are f & g algorithms? If so, how do you multiply algorithms together? Is it supposed to be f(g(n))? In which case I can understand how to get the correct answer. (by: nmparrott [nmp31])



ID: 3615229
Created: 2:10pm, 06 Dec 2018
Show the resulting heap after extracting the largest item from the following tree 15 / \ 10 6 / \ / \ 5 8 3 4 / 1
a) 15 / \ 10 6 / \ / \5 8 3 4
b) 15 / \ 10 6 / \ / \5 8 1 4
*c) 10 / \ 8 6 / \ / \5 1 3 4
d) 10 / \ 5 6 / \ / \1 8 3 4
e) 10 / \ 1 6 / \ / \5 8 3 4
Explanation: 10 / \ 8 6 / \ / \5 1 3 4Copy the value from the right-most node in the bottom-most row to the root node, delete the right-most node in the bottom-most row and repeatedly swap the just-moved value with the larger of its two children until the value is greater than or equal to both of its children.
Tags: Trees
Author: welsbyj (jw2449 - permission to this course revoked)
Avg Rating: 3.2500
Avg Difficulty: 0.8750
Total ratings: 8



ID: 3615207
Created: 1:59pm, 06 Dec 2018
What is the space complexity of merge sort?
a) O(log(n))
b) O(n^2)
c) O(nlog(n))
*d) O(n)
Explanation: Most merge sort algorithms which use O(n) extra memory, and some may use one clone of the original array to be sorted
Tags: Sorting
Author: tec26 (tec26 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.4444
Total ratings: 9



ID: 3615199
Created: 1:55pm, 06 Dec 2018
For the following tree, what traversal method would be used to form the equation
a) Pre-order
b) Post-Order
c) Re-order
*d) In-order
e) None of the above
Explanation: In order traversal processes the nodes left, root, right.
Tags: Trees
Author: bc678 (bc678 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.5385
Total ratings: 13



ID: 3615187
Created: 1:51pm, 06 Dec 2018
What is the difference between an open and a closed hash table?
a) In an open hash table there is a fixed number of places elements can be stored, while in a closed hash table one can hold an arbitrary number of elements.
*b) In a closed hash table there is a fixed number of places elements can be stored, while in an open hash table one can storean arbitrary number of elements.
c) A closed hash table is always faster than an open hash table.
d) There is no difference between the two ADTs.
Explanation: Notes for Lecture 08 and 09.
Tags: ADTs, Hashtables
Author: tokenguard (bb563 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.2381
Total ratings: 21



ID: 3615135
Created: 1:19pm, 06 Dec 2018
What is the idea behind "open" hash tables?
a) Instead of storing our values directly in array, each linked list points to a value.
*b) Instead of storing our values directly in array,each array bucket points to a linked list of values.
c) Instead of storing our values directly in array, each array bucket points to a "closed" hash table.
Explanation: See Lecture 9: Hashtables2, slide 7.
Tags: Lists, Trees, Hashtables
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.1875
Total ratings: 16



ID: 3615132
Created: 1:17pm, 06 Dec 2018
Which is not a directed graph?
a) Following Kim Kardashian on Twitter.
*b) Becoming friends with Christof Lutteroth on Facebook.
c) A river flowing into the sea
Explanation: B is the only one where it happens in reverse. i.e. When you become friends with someone on Facebook, they automatically become friends with you too.(Note. A can be true if Kim Kardashian follows you back, but that will never happen)
Tags: Graphs
Author: syag20 (syag20 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.3913
Total ratings: 23



ID: 3615130
Created: 1:16pm, 06 Dec 2018
Which of the following is an example of a semantic search
*a) Facebook graph search
b) Google search
c) Binary tree search
Tags: Graphs
Author: wleeanglin (wla24 - permission to this course revoked)
Avg Rating: 2.1700
Avg Difficulty: 0.9167
Total ratings: 12
==> Comment 1: Google�s Hummingbird update issued a major adjustment in Google�s search algorithm - placing a greater emphasis on semantic search. So shouldn't both Google and Facebook be correct? (by: mha [mha38])



ID: 3615122
Created: 1:13pm, 06 Dec 2018
What is the idea behind quicksort?
a) Divide and combine.
b) Multiply and conquer.
*c) Divide and conquer.
Explanation: See lecture 11: Sorting 2, slide 10.
Tags: Sorting, Applications
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 2.5400
Avg Difficulty: 0.2083
Total ratings: 24
==> Comment 1: spent half an hour on this question glad i got it in the end though (by: ecksdee [drc34])
==> Comment 2: Ez boiiiiiiiii think of a better question xxx (by: msu26 [msu26])



ID: 3615112
Created: 1:10pm, 06 Dec 2018
A graph is an ADT that stores ...
a) a set of entities.
b) a set of entities and keeps track of their keys.
*c) a set of entities and keeps track of the relationships between all of them.
d) a list of information.
Explanation: See Lecture 17: Graphs 1 slide 4
Tags: Graphs
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.2000
Total ratings: 15



ID: 3615104
Created: 1:06pm, 06 Dec 2018
What other ADT does the breadth first traversal algorithm use to navigate a graph?
a) A List
b) An Array
*c) A Queue
d) A Stack
e) An AVL Tree
Explanation: https://moodle.bath.ac.uk/pluginfile.php/1145721/mod_resource/content/2/DA-Lecture17-Graphs1.pdf - slide 29A breadth first traversal adds each connected non visited node of the current node to a queue and is then de-queued in the order they were added in order to go through the graph one layer away from the start node at a time.
Tags: Graphs
Author: callumbateson (cb2063 - permission to this course revoked)
Avg Rating: 3.6200
Avg Difficulty: 0.6154
Total ratings: 13



ID: 3615102
Created: 1:06pm, 06 Dec 2018
In what real world application would it not be appropriate to use Maxheap as a data structure?
a) The severity of a patient's injuries at an emergency ward.
b) The length of time the caller has been waiting on the phone at a call centre.
*c) Amount of shopping a customer has at a supermarket.
d) Bandwidth management from a network router.
Explanation: It would not be appropriate to sort customers by the amount of shopping they have. Instead it is done on a first-come first-served basis.
Tags: ADTs, Applications
Author: syag20 (syag20 - permission to this course revoked)
Avg Rating: 3.0800
Avg Difficulty: 0.6923
Total ratings: 13



ID: 3615059
Created: 12:54pm, 06 Dec 2018
Accuracy is ...
a) Measurements that are close together.
b) Measurements that are exactly the same.
*c) Measurements close to the real value.
d) Measurements that are far from the real value.
Explanation: See lecture 3 - slide 7.
Tags: Applications, Complexity
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.2727
Total ratings: 22



ID: 3615051
Created: 12:51pm, 06 Dec 2018
Given the following binary tree: ["I"] / \ ["D"] ["O"] \ \ ["G"] ["Q"] \ ["U"] What would the output be for level-order traversal?
a) U Q G O D I
b) I D G O Q U
c) I O D Q G U
*d) I D O G Q U
e) None of the above
Explanation: Level order traversal visits each level's nodes from left to right, starting from the top/root.
Tags: Trees
Author: syag20 (syag20 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.4000
Total ratings: 15



ID: 3615047
Created: 12:51pm, 06 Dec 2018
An ADT is a coordinated group of ... that is used to solve a particular problem. (fill in the gap)
a) data structures and algorithms
b) algorithms and interface functions
c) interface functions and data structures
*d) data structures, algorithms and interface functions
Explanation: See lecture 2 - ADT's slide 18.
Tags: ADTs
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3615037
Created: 12:44pm, 06 Dec 2018
Which of these is a post-order traversal?
a) Process current node. Process the nodes in the left subtree. Process the nodes in the right subtree.
*b) Process the nodes in the left subtree. Process the nodes in the right subtree. Process current node.
c) Process the nodes in the left subtree.Process current node.Process the nodes in the right subtree.
d) Visit each level's nodes, left to right, then move to the next level.
Explanation: In lecture 13 - Trees 1 the different traversals are defined.
Tags: ADTs, Search, Trees
Author: nlee54 (nl484 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.3333
Total ratings: 18



ID: 3614957
Created: 12:08pm, 06 Dec 2018
Given the following array of integers: [14, 7, 2, 9, 13, 1, 15, 3], how many iterations does it take to sort (in ascending order) using quick sort?
a) 7
b) 5
c) 4
d) 6
*e) 3
Explanation: Starting with the first iteration, we get: (14 the pivot)7, 2, 9, 13, 1, 3, 14, 15Now with 7 as a pivot, and 15 already being sorted as the only integer greater than 14:2, 1, 3, 7, 9, 13, 14, 15Now sorting each side, with 2 and 9 as pivots:1, 2, 3, 7, 9, 13, 14, 15
Tags: Sorting
Author: megansp (msp38)
Avg Rating: 3.1500
Avg Difficulty: 0.7692
Total ratings: 13
==> Comment 1: Would be good to state how the pivot is chosen in the question. (by: rossthomas [rt578])



ID: 3614793
Created: 11:02am, 06 Dec 2018
Based on this graph how would a Breadth-First traversal look?
a) Start - Yellow - Red - Purple - Green - Orange - Pink - Blue
*b) Start - Yellow - Red - Purple - Green - Pink - Orange - Blue
c) Start - Yellow - Green - Orange - Purple - Pink - Blue - Red
Explanation: Breadth-first traversal processes all nodes that are one edge away from the start node, then two edges away, then three edges away and so on.
Tags: Graphs
Author: emmafuentes (efa24 - permission to this course revoked)
Avg Rating: 3.4300
Avg Difficulty: 0.5714
Total ratings: 7
==> Comment 1: Although B is the only breadth first option, you may still want to specify which of the nodes of each level the algorithm would go to first as there are other orders which could work (by: joebr [jayb20])



ID: 3614775
Created: 10:49am, 06 Dec 2018
What is the time complexity of the heapsort algorithm?
a) O(log(n))
b) O(n)
*c) O(n log(n))
d) O(n2)
e) None of the above
Explanation: Heapsort has complexity O(n log(n)) as the first part of the heapsort (converting a random array into a maxheap) has complexity O(n) while the second part is O(n log(n)) as it takes log(n) steps to remove an item from the maxheap and this extraction operation is performed n times.Therefore the overall complexity is O(n log(n)) + O(n) with, O(n log(n)) being the dominating term.
Tags: Sorting, Trees, Complexity
Author: nc654 (nc654 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.4286
Total ratings: 7



ID: 3614698
Created: 10:24am, 06 Dec 2018
When searching a closed hash table by linear probing with a load factor of 0.5, what is the average number of steps needed to find the required element?
a) 1
b) 1.25
*c) 1.5
d) 1.05
e) 2
Explanation: To find the average number of steps we can use the formula 0.5(1+1/(1-L)) where L is the load factor. Here this is 0.5 so we have 0.5(1+1/0.5) = 0.5(1+2) = 1.5 steps
Tags: Search, Hashtables
Author: jbersey15 (jsb73)
Avg Rating: 3.5800
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3614679
Created: 10:15am, 06 Dec 2018
Consider the following binary search treeWhen doing an in-order traversal, in what order will the nodes be visited?
a) Jill, James, Jacqueline, Jenny, Kenny, Katherine, Martha
*b) Jacqueline, James, Jenny, Jill, Katherine, Kenny, Martha
c) Jacqueline, Jenny, James, Katherine, Martha, Kenny, Jill
Explanation: When doing an in-order traversal we visit the left child node, followed by the node, followed by the right child node. If we follow this here we get option B. Option A yields a pre-order traversal and option C gives a post-order traversal
Tags: Search, Trees
Author: jbersey15 (jsb73)
Avg Rating: 3.9400
Avg Difficulty: 0.5556
Total ratings: 18



ID: 3614651
Created: 9:56am, 06 Dec 2018
When looking at the time complexity of performing a quick sort, what is the best and worst case?
a) Best case: O(n)Worst case: O(n2)
b) Best case: O(n2)Worst case: O(n!)
*c) Best case: O(n log(n))Worst case: O(n2)
d) Best case: O(1)Worst case: O(n log(n))
Explanation: The best case is O(n log(n)) as at each sorting level we do n operations and we have log(n) sorting levels. The worst case is O(n2) as the most log(n) can be is n.
Tags: Sorting, Complexity
Author: jbersey15 (jsb73)
Avg Rating: 3.6900
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3614582
Created: 9:01am, 06 Dec 2018
For a closed hashtable with linear probing, how many steps will it take, if the table is 70% full
*a) 2.1667 steps
b) 3 steps
c) 1.9 steps
d) 4 steps
Explanation: The formula is 0.5(1+(1-x)) where x is the load of the table
Augmented explanation 1: The formula is 0.5(1+1/(1-x)) where x is the load of the table (by: sheppypeppy [mls46])
Tags: Hashtables
Author: pjmt21 (pjmt21 - permission to this course revoked)
Avg Rating: 3.0000
Avg Difficulty: 0.8000
Total ratings: 15
==> Comment 1: How many steps will it take to do what? Look up an element? Purchase a cat? (by: tokenguard [bb563])



ID: 3614571
Created: 8:50am, 06 Dec 2018
Which of the following is true about trees
*a) A node can have zero or more children
b) A node with 0 children is a root
c) The top node of a tree is a leaf
Explanation: A node with 0 children is a leaf, the top of the tree is the root
Tags: Trees
Author: pjmt21 (pjmt21 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.0556
Total ratings: 18



ID: 3614549
Created: 8:18am, 06 Dec 2018
Which of the following sorts is unstable?
a) Insertion sort
b) Bubble sort
c) Merge sort
*d) Selection sort
Explanation: Selection sort is unstable
Tags: Sorting
Author: pjmt21 (pjmt21 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.6875
Total ratings: 16



ID: 3613720
Created: 12:27am, 06 Dec 2018
Which sorting algorithm has the best (most efficient) performance when sorting an array which is sorted or almost sorted.
a) Selection Sort
*b) Insertion Sort
c) Quick Sort
d) Merge Sort
Tags: Sorting
Author: cg747 (cg747 - permission to this course revoked)
Avg Rating: 3.1000
Avg Difficulty: 0.6000
Total ratings: 10



ID: 3613658
Created: 12:16am, 06 Dec 2018
The Big-Oh is O(n) for which traversal?
a) Post-Order Traversal
b) Pre-Order Traversal
c) In-Order Traversal
*d) All of the above
e) None of the above
Tags: Trees
Author: cg747 (cg747 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3613652
Created: 12:14am, 06 Dec 2018
Which traversal method visits each levels node, from left to right, before visiting the nodes in the next level?
*a) Level Order Traversal
b) Pre-Order Traversal
c) In-Order Traversal
d) Post-Order Traversal
Tags: Trees
Author: cg747 (cg747 - permission to this course revoked)
Avg Rating: 3.3300
Avg Difficulty: 0.3333
Total ratings: 9



ID: 3613552
Created: 11:35pm, 05 Dec 2018
What is the difference between a directed and undirected graph?
*a) With a directed graph, all edges go from one vertex to another in a specific direction. However, with an undirected graph, vertices are bi-directional.
b) With an undirected graph, all edges go from one vertex to another in a specific direction. However, with a directed graph, vertices are bi-directional.
c) A directed graph only has one edge between each vertex but an undirected graph has more.
d) An undirected graph only has one edge between each vertex but a directed graph has more.
Tags: Graphs
Author: megansp (msp38)
Avg Rating: 3.1500
Avg Difficulty: 0.1538
Total ratings: 13



ID: 3613439
Created: 10:41pm, 05 Dec 2018
Which of the following is the correct definition of a maxheap?
*a) A maxheap is a binary tree which follows these rules:1. The value contained by a node is always GREATER THAN OR EQUAL TO the values of the node�s CHILDREN.2. The tree is a COMPLETE binary tree.
b) A maxheap is a binary tree which follows these rules:1. The value contained by a node is always LESS THAN OR EQUAL TO the values of the node�s CHILDREN.2. The tree is a COMPLETE binary tree.
c) A maxheap is a binary tree which follows these rules:1. The value contained by a node is always GREATER THAN OR EQUAL TO the values of the node�s CHILDREN.2. The tree is an INCOMPLETE binary tree.
d) A maxheap is a binary tree which follows these rules:1. The value contained by a node is always GREATER THAN OR EQUAL TO the values of the node�s PARENT.2. The tree is a COMPLETE binary tree.
e) A maxheap is a binary tree which follows these rules:1. The value contained by a node is always LESS THAN OR EQUAL TO the values of the node�s PARENT.2. The tree is a COMPLETE binary tree.
Explanation: See lecture 16 slide 8 for the definition of the maxheap.
Tags: Trees
Author: mm2302 (mm2302 - permission to this course revoked)
Avg Rating: 3.1000
Avg Difficulty: 0.7000
Total ratings: 10
==> Comment 1: Surely E=A and D=B (by: jabzilla [jab218])



ID: 3613417
Created: 10:31pm, 05 Dec 2018
Big-O, Big-Theta and Big-Omega notation all have the property of transitivity,which of the following best describes transitivity?
a) The bigger function dominates, i.eIf g(n) = O(f1(n)) and h(n) = O(f2(n)),g(n)+h(n) = O(max{f1(n), f2(n)})
*b) If A = B, and B = C, then also A = C, i.eIf f(n) = O(g(n)), and g(n) = O(h(n)), then f(n) = O(h(n))
c) Constant factors don�t matter, i.eFor all c>0: c*f(n) = O(f(n))
Explanation: Simply the definition of transitivity, see Lecture 4 slide 7
Tags: Complexity
Author: mm2302 (mm2302 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3613400
Created: 10:25pm, 05 Dec 2018
If you stored a graph with e edges and v vertices as an adjacency matrix, what is the asymptotic memory usage of this matrix?
a) ?(e*v)
b) ?(e^2)
*c) ?(v^2)
d) ?(v+e)
e) ?(v)
Explanation: The conections between edges is simply stored in a v*v matrix, where a connection is denoted by a boolean. So the asymptotic storage is?(v^2). See Lecture 17 slide 18 for more detail.
Tags: Graphs
Author: mm2302 (mm2302 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.2727
Total ratings: 11



ID: 3613250
Created: 9:12pm, 05 Dec 2018
Which of the following has a time complexity of O(logn) for insertion, deletion and search?
*a) AVL Tree
b) Binary tree
c) Reverse transveralbinary heap
d) Binary search tree
Tags: Lists, Search, Trees
Author: ml2194 (ml2194 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.9167
Total ratings: 12



ID: 3613213
Created: 8:59pm, 05 Dec 2018
Given the following numbers: 7, 9, 5, 4, 8, 2, 6, 1, when constructing an AVL Tree, which numbers will be in leaf nodes (in order from left to right)?
*a) 1, 6, 8
b) 1, 4, 8
c) 2, 6, 9
d) 1, 6, 9
Explanation: 7 / \ 5 9/ /4 8/2Then do a right rotation, and add the remaining elements: 7 / \ 4 9 / \ /2 5 8/ \1 6
Tags: Trees
Author: megansp (msp38)
Avg Rating: 3.6400
Avg Difficulty: 0.7273
Total ratings: 11



ID: 3613193
Created: 8:53pm, 05 Dec 2018
For a B+ tree, which statement is true.
a) For it to be a valid B+ tree, the left and right subtree heights must differ by at most 1.
b) Internal nodes can contain any data types.
*c) All nodes are at least 50% full at all times except the root node.
d) none of the above.
Explanation: The height is always balanced in a B+ tree so no difference in the left and right subtrees.Internal nodes store keys to guide the search which have a pointer to a B+ tree child node. Leaf nodes store the data which can be of any type.All nodes must be at least 50% full for a valid B+ tree
Tags: Trees
Author: th779 (th779 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.8889
Total ratings: 9



ID: 3613183
Created: 8:49pm, 05 Dec 2018
Calculate the total time required to process the code below:for(i = 0; i < n; i++) { for(k = 0; k < i; k++) { System.out.println(i*k); }}
*a) n2- n
b) n2
c) nlog2n
d) n2 + n
Explanation: The print statement has a constant complexity, and therefore let us simply refer to it as 'y'So,y * n * (n-1) /2? y/2 * (n2 - n)? n2 - n
Tags: Complexity
Author: ml2194 (ml2194 - permission to this course revoked)
Avg Rating: 2.4300
Avg Difficulty: 0.8571
Total ratings: 7



ID: 3613141
Created: 8:37pm, 05 Dec 2018
What is the difference between a minheap and a maxheap?
a) There is no difference
*b) Maxheaps can quickly retrieve the largest item from the heap whilst minheaps can quickly retrieve the smallest item from the heap.
c) Maxheaps only stay as a complete binary tree until it reaches a maximum number of nodes whilst minheaps only become a complete binary tree once it reaches a minimum number of nodes
Explanation: Both types of heap are good for quickly inserting a new item but the difference comes when retrieving items. A maxheap quickly retrieves the largest item from the heap whilst a minheap quickly retrieves the smallest item from the heap.
Tags: Trees
Author: ahd38 (ahd38 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.6667
Total ratings: 15



ID: 3618738
Created: 8:28pm, 05 Dec 2018
Which of the following sorting algorithms are not suitable to be used when the input consists of large data sets?
a) Merge Sort
*b) Insertion Sort
c) Shell Sort
d) Quick Sort
e) Heap Sort
Explanation: Insertion sort is more commonly used for sorting smaller elements, as it requires no recursion and sorts in-place
Tags: Sorting
Author: ml2194 (ml2194 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 3613080
Created: 8:20pm, 05 Dec 2018
Which of the following is not true about Heap Sort?
a) Does not require an extra buffer.
*b) Requires a large amount of memory.
c) It is more efficient than selection sort.
d) It does not require recursion.
Explanation: Heap sort is most commonly used in low-RAM embedded systems due to it requiring low memory.
Tags: Sorting
Author: ml2194 (ml2194 - permission to this course revoked)
Avg Rating: 4.0800
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3613073
Created: 8:18pm, 05 Dec 2018
If a new node's value is greater than its parent's value when inserting into a maxheap what should you do next?
a) Keep the new node and parent node in their current positions.
*b) Swap the new node with the parent node.
c) Overwrite the parent node with the child node.
Explanation: When inserting into a maxheap new values are added in the bottom-most, left-most position in the tree and sifted up until they reach their correct position.
Tags: Trees
Author: ahd38 (ahd38 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3618990
Created: 8:07pm, 05 Dec 2018
What sort of tree is a heap an example of?
*a) Complete Binary Tree
b) Sparse Tree
c) Binary search tree
Explanation: A complete binary tree is a tree where every level except the deepest level contains as many nodes as possible, and then at the deepest level, all nodes are as far left as possible. Heaps maintain themselves to meet the requirements of a complete binary tree.
Tags: Trees
Author: ahd38 (ahd38 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3613004
Created: 7:55pm, 05 Dec 2018
What is the average run time of the below code:for(int w = 0; w < q; w++) for(int z = w+1; z < q*q; z++) for(int xy = z; xy < q; xy*2) sum++;
a) ?(log(q3))
b) ?(q3)
*c) ?(q3log(q))
d) ?(qlog(q3))
Explanation: The first for loop has linear run time qThe second for loop has a run time of q^2The third for loop has a run time of log(q) due to xy2 on each iterationAverage run time = q3log(q)
Tags: Complexity
Author: th779 (th779 - permission to this course revoked)
Avg Rating: 4.1800
Avg Difficulty: 1.0000
Total ratings: 11



ID: 3612953
Created: 7:36pm, 05 Dec 2018
Which of the following AVL tree balancing techniques is used in the example below: D / \ B E / \ \ A C F \ GGoes to: D / \ B F / \ / \ A C E G
a) Right Left Case
*b) Right Right Case
c) Left Left Case
d) Left Right Case
Explanation: Right Right because it changes the right subtree of theright subtree. It uses the method on left rotation.
Tags: Trees
Author: kirstyc (kc653 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.7500
Total ratings: 12



ID: 3612914
Created: 7:23pm, 05 Dec 2018
What does Stable mean when referring to a sorting method?
a) The elements don't move
b) The elements don't move more than 2 spaces to the leftor the right.
*c) The order of equal valued elements is maintained
d) The order of equal valued elements is not maintained
Explanation: If equal valued elements were to change order it would be unstable.
Tags: Sorting
Author: kirstyc (kc653 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.2941
Total ratings: 17



ID: 3612887
Created: 7:15pm, 05 Dec 2018
In Hashtables: After using the Hashfunctionif 2 values correspond to the same bucket, what is this called?
a) Spillage
*b) Collision
c) Overflow
d) Allocation Error
Explanation: Lecture 8 Slide 14
Tags: Hashtables
Author: kirstyc (kc653 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.4375
Total ratings: 16



ID: 3618889
Created: 7:14pm, 05 Dec 2018
What is a tree in computer science?
a) A treeis a linked data structure that consists of a set of exactly 5 sequentially linked records
b) A tree is a data structure that can map keys to values.
*c) A tree is a linked list-based data structure that is used to make decisions and simplify the evaluation of mathematical expressions
d) A tree is a collection of hashtables bunched together and joined by doubly linked lists in a tree shape.
e) A tree is something that grows in a forest
Explanation: A tree isa linked list-based data structure that is used to make decisions and simplify the evaluation of mathematical expressions. (from Trees 1 slides)
Tags: Trees
Author: mlmk22 (mlmk22 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6875
Total ratings: 16
==> Comment 1: That's an expression tree. (by: ubza20 [ubza20])
====> Reply 1: Oh wait, I misread. Sorry



ID: 3612840
Created: 7:00pm, 05 Dec 2018
An AVL tree is created by inserting the numbers 1, 3, 7, 2, 4, 6, and 5. How many of these insertions cause the current tree to become unbalanced?
a) 0
b) 1
*c) 2
d) 3
e) 4
Explanation: The AVL tree becomes unbalanced upon the insertion of numbers 7 and 6, so the answer is C.
Tags: Trees
Author: amc207 (amc207 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 1.0000
Total ratings: 12
==> Comment 1: badly worded, it should be: 'How times does the tree become unbalanced when inserting this list of number?' (by: cro26 [cro26])



ID: 3612833
Created: 6:58pm, 05 Dec 2018
If Christof�s average number of steps in his open hashtable is 1.42 and the total number of buckets is 1000. What is the max no. of keys he intends to insert?
a) 142
b) 860
c) 420
*d) 840
e) 71
Explanation: Avg steps(Open) = 1 + L/2L = max. Keys to insert / total buckets in array1.42 - 1 = L/20.84 = Lkeys to insert = 0.84*1000 = 840
Tags: Hashtables
Author: mlmk22 (mlmk22 - permission to this course revoked)
Avg Rating: 4.2800
Avg Difficulty: 1.0000
Total ratings: 18



ID: 3612817
Created: 6:52pm, 05 Dec 2018
Attila the Hun is wanting to ravage Europe. However he is always uncertain which town to lay waste to. The Huns are currently resting.He has a database of towns ranked by GDP per capita. He wants to be able to remove towns once he's burnt every building to the ground, and add towns as refugees camps begin to form. He should be able to do this quickly as he will be tired after a long day of work. If a town with a certain GDP is not found, he should be able to find a town with similar GDP.Which of the following data structures would be most appropriate to store the list of towns?
a) Singly linked list
b) Sorted ArrayList
c) Doubly linked list
*d) Binary search tree
e) Closed hash table
Explanation: Singly linked list: To add or delete we have to find the nearest town first so O(n).Sorted ArrayList: we're using a database. If Attila wanted an ArrayList he'd use a scroll. Adding and removing is a lengthy process.Doubly linked list - same as singly linked listBinary search tree: easy to find close sized towns: you just look at the children or parents. May not be the closest, but will be closest in one direction. Fast to add or remove.Closed hash table: Once you remove something, searching becomes rather difficult.
Augmented explanation 1: Singly linked list: To add or delete we have to find the nearest town first so O(n).Sorted ArrayList: we're using a database. If Attila wanted an ArrayList he'd use a scroll. Adding and removingis a lengthy process.Doubly linked list - same as singly linked listBinary search tree: easy to find close sized towns: you just look at the children or parents. May not be the closest, but will be closest in one direction. Fast to add or remove.Closed hash table: Once you remove something, searching becomes rather difficult. Plus worst case scenario of searching is O(n). No offence but closed hash tables suck..If it were an open hash table things would be different. (by: ac2522 [ac2522])
Tags: Lists, Sorting, Applications, Search, Trees
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.8750
Total ratings: 16



ID: 3612816
Created: 6:52pm, 05 Dec 2018
What is the time complexity of the following code?public void look(int a){ int ans[] = int[10]; int n = a; for(int i=0;i<n;i++){ for(int j=n;j>0;j--){ ans[i] = i*j; } } for(int i=0;i<n;i++){ System.out.println(ans[i*2]); }}
a) O(n)
*b) O(n2)
c) O(n3)
d) O(log n)
e) none of the above
Explanation: There is a for loop inside a for loop meaning it is n2 complexity. The other for loop does not impact this complexity.
Tags: Complexity
Author: mlmk22 (mlmk22 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.7857
Total ratings: 14
==> Comment 1: Am I right in thinking that the last loop would have an out of bounds error? (by: dre31 [dre31])
==> Comment 2: Shouldn't is rather be O(a2)? Why not name the parameter n right from the start rather than instantiate an entirely unnecessary variable? (by: jn475 [jn475])



ID: 3612777
Created: 6:39pm, 05 Dec 2018
Which of the following is not true about Array lists and linked lists? (you can assume the Array list and linked list are not sorted)
a) Linked Lists are faster than array lists when adding elements
b) Array Lists are faster than linked lists when accessing an element at a given index
*c) Array Listsare faster thanLinked Lists when searching the list for a specific value/string
d) Linked Lists are faster than array lists when deleting elements
Explanation: Because the lists are unsorted, binary search cannot be used when searching the array list for a specific value. Therefore the average complexity for a search is(as there are n elements so average number of comparisons is n/2) on both an array list and a linked list.
Augmented explanation 1: Because the lists are unsorted, binary search cannot be used when searching the array list for a specific value. Therefore a linear search must be used on both an array list and a linked list and the average complexity for a search is . (by: mv371 [mv371])
Augmented explanation 2: Because the lists are unsorted, binary search cannot be used when searching the array list for a specific value. Therefore a linear search must be used on both the array list and the linked list and the average complexity for a search is . (by: mv371 [mv371])
Tags: Lists, Search, Complexity
Author: mv371 (mv371 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.8571
Total ratings: 14



ID: 3612747
Created: 6:29pm, 05 Dec 2018
Which of the following sorting algorithms use h-sorting?
*a) Shell sort
b) Quicksort
c) Mergesort
d) Insertion sort
Explanation: H-sorting involves picking a value (labelled by h), for each element in the array if A[i] andA[i + h] are out of order then swaps the two elements.If you swapped any elements during the last pass, then repeat the entire process again(with the same value h) - the h value is reduced until it becomes 1 and this is used to help sort items. Shell sort is based upon this
Tags: Sorting
Author: sammie (sh2389 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3810
Total ratings: 21



ID: 3612738
Created: 6:24pm, 05 Dec 2018
Which of the following is not a property of merge sort?
a) Complexity always?(n log2 n)
b) Requires extra memory compared to other sorting algorithms
*c) Cannot be used to sort linked lists
d) It can beparallelised to run across multiple cores
e) It is a stable sort
Explanation: Merge sort can be used to sort linked lists, so C is not a property of merge sort. Merge sort requires extra memory compared to other sorting algorithms as it requires n slots of extra memory for merging.
Tags: Sorting
Author: amc207 (amc207 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 3612712
Created: 6:09pm, 05 Dec 2018
Name the fastest sort method and its complexity when sorting an array that has already been sorted.
a) Selection Sort
b) Quick Sort
c) Quick Sort
*d) Insertion Sort
e) Insertion Sort
Explanation: If the array is already sorted, Insertion Sort makes only one comparison at each entry of the array.Therefore, the complexity is linear and this is the most efficient sort method when we are sorting something that has already been sorted.
Tags: Sorting
Author: mv371 (mv371 - permission to this course revoked)
Avg Rating: 2.4000
Avg Difficulty: 0.2000
Total ratings: 5



ID: 3612677
Created: 5:57pm, 05 Dec 2018
Which of these orders describes post-order traversal of a binary search tree?
a) Current nodeTraverse leftTraverse right
*b) Traverse leftTraverse rightCurrent node
c) Traverse leftCurrent nodeTraverse right
d) Starting from the top, visit each node from left to right before going down to the next layer
e) Starting from the bottom, visit each node from left to right before going down to the next layer
Explanation: Post order traversal traverses the left subtree,then the right, before processing the current node.
Tags: Trees
Author: amc207 (amc207 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3612674
Created: 5:57pm, 05 Dec 2018
Corbyn wants to build the perfect sandcastle. To do this he needs to weigh each and every grain in his bucket, and line them up according to weight. If they are the same weight (precise to a nano-gram, if that's a thing) then he wants the grain that has been exposed to solitude for the longest time, to come first.Given that the room is controlled for wind, and that Jeremy wants to finish the sand castle before he dies, which sorting method should he use?
a) Quicksort
b) Selectionsort
c) Insertionsort
d) BubbleSort
*e) Mergesort
Explanation: He wants to minimise the amount of time that each grain is alone, so he wants the sorting method to be stable.Sand grains don't tend to be nearly ordered (unless Sanders was there the year before), so not Insertion sort.Mergesort has average runtime: nlog(n), which is better than the others.
Tags: Lists, Sorting, Applications, Complexity
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 3.2100
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3612669
Created: 5:55pm, 05 Dec 2018
What is the in-order traversal of the following Binary Search Tree: 25 / \ 17 30 / / 10 20 / \ 8 15
a) 8, 15, 10, 17, 25, 30, 20
*b) 8, 10, 15, 17, 25, 20, 30
c) 8, 15, 10, 17, 20, 30, 25
d) 25, 17, 10, 8, 15, 30, 20
Explanation: For in-order traversal of a BST, you process the nodes in the left sub-tree first, then process the current node, and finally process the nodes in the right sub-tree. Thus, the correct answer is B.
Tags: Trees
Author: mv371 (mv371 - permission to this course revoked)
Avg Rating: 3.4200
Avg Difficulty: 0.3158
Total ratings: 19
==> Comment 1: One key point in binary search trees is that all elements lower than the node are to the left of it and all higher are to the right. However, 20 is located to the right of 25 so is not a valid binary search tree (by: dpah20 [dpah20])



ID: 3612580
Created: 5:17pm, 05 Dec 2018
For the Algorithm and data structure of hash tables, which of the following is recommended?
a) It is suitable to search, insert and delete data in a closed hash table.
b) For the efficiency, we can substitute all, random type of hash tables to open hash tables with many buckets in a program with extremely limited memory.
*c) With enough memory space, we can change the pointers of storing array by storing a linked list of values instead of a directly value.
d) Any functions can be defined as hash functions for an efficient hash table data structure.
e) None of the above.
Explanation: A. (D&A-Lecture08-Hashtables1.pptx)Only use Closed/Linear Probing hashtables if you never remove items!B. (D&A-Lecture09-Hashtables2.pptx)Cosidering the memory space, open hashtables with lots ofbuckets still needs memory.C. (D&A-Lecture09-Hashtables2.pptx) Correct, the definition of open hashtable.D.(D&A-Lecture09-Hashtables2.pptx) Hash functions ofan efficient hash table need to give same datathe same bucket, to disperse items throughout the hash array as randomly as possible.
Tags: Hashtables
Author: samz285 (gz285 - permission to this course revoked)
Avg Rating: 2.9200
Avg Difficulty: 0.7692
Total ratings: 13



ID: 3612578
Created: 5:16pm, 05 Dec 2018
True or False, an Unstable sort reorders items while taking into account their initial order.
a) TRUE
*b) FALSE
Explanation: An unstable sort reorders items without taking into account their initial order.
Tags: Sorting
Author: sammie (sh2389 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.2857
Total ratings: 21



ID: 3612513
Created: 4:58pm, 05 Dec 2018
What is Interpolation search?
a) A search which involves searching linearly from top to bottom, asking the user about each item.
*b) A search which involves having the search area, knowing how the data is sorted and roughly distributed. The algorithm calculates the start position to start from if the value is higher or lower than the middle. If it is lower it ignores everything on the right and searches the left side again. if its higher that the middle it ignores the left side and searches the right side again, until the value is found.
c) A search which involves having the search area and starting from the middle point decides if the value is higher or lower than the middle. If it is lower it ignores everything on the right and searches the left side again. if its higher that the middle it ignores the left side and searches the right side again, until the value is found.
Explanation: Interpolation search is an improvement upon Binary search. Interpolation search has a run time of log(log(n)) whereas Binary search has a run time of log(n).
Tags: Search
Author: sammie (sh2389 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.8095
Total ratings: 21



ID: 3612454
Created: 4:48pm, 05 Dec 2018
Which of the following statements is false?
a) The selection sort is unstable and has ?(n2) complexity for its best case, worst case and average case.
*b) The heap sort is stable and has ?(n(log(n))) complexity for itsbest case, worst case and average case.
c) The shell sort has the time complexity of approximately ?(n1.25). It is unstable.
d) The quick sort has?(n(log(n))) best and average case time complexity but has?(n2) time complexity for mostly ordered arrays. It is unstable.
e) The merge sort has time complexity?(n(log(n))) for its best case, worst case and average case. It is a stable sort.
Explanation: The answer is B because the heap sort is unstable.
Tags: Sorting, Complexity
Author: jessmead (jlm77 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.8750
Total ratings: 16



ID: 3612385
Created: 4:33pm, 05 Dec 2018
Which statement is true?
a) Selection sorts cannot be applied to linked lists.
b) Insertion sort cannot be applied to linked lists.
*c) Quick sort can be applied to linked lists.
d) Merge sort cannot be applied to linked lists.
Explanation: All the sorts above can be applied to linked lists.
Tags: Lists, Sorting
Author: hollymillea (hm681 - permission to this course revoked)
Avg Rating: 3.5900
Avg Difficulty: 0.6471
Total ratings: 17



ID: 3612354
Created: 4:25pm, 05 Dec 2018
How many elementary operations does this function have and what is the value of total after the for loop has finished?public void total() { int x = 4; int total = 0; for (int i=0; i<x-1; i++) { total = total + i; }}
a) elementary operations: 3x+4total=3
b) elementary operations: 4xtotal=2
c) elementary operations: 2+3xtotal=4
*d) elementary operations: 3+4xtotal=3
e) None of these options
Explanation: int x=4Variable assignment : 1 operationint total=0 Variable assignment : 1 operationint i=0 Variable assignment : 1 operationi<x-1 Comparison: 1 operation carried out x times: x operationsi++ Addition that occurs x times: x operationstotal + i Addition that occurs x times: x operationstotal = ... Assignment that occurs x times: x operationsSo the T(n) is the total of these, which is 1+1+1+x+x+x+x
Augmented explanation 1: The variable total is 3 after the for loop as finished because the variable of i increases up to and including i equals 2. So 3 = 0 + 1 + 2. (by: jessmead [jlm77])
Augmented explanation 2: (improvement from line above) The variable with the name "total" is 3 after the for loop has finished because the value of i increases up to and including i equals 2. So the line total = total + i has the following values: 0 = 0 + 0, 1 = 0 + 1, 3 = 1 + 2. (by: jessmead [jlm77])
Tags: Complexity
Author: jessmead (jlm77 - permission to this course revoked)
Avg Rating: 3.2000
Avg Difficulty: 1.0000
Total ratings: 10



ID: 3612244
Created: 3:54pm, 05 Dec 2018
What is the complexity of the following, given that the methods checkPassword, hackProfessor and openMozilla Firefox are of constant complexity?int n = password.length(); int findPassword = 0; int x=1;for( int j = 0; j < n; j++){ int x=x*10;}for( int i = 0; i < x; i++;){ for(password.checkPassword(findPassword) == false) findPassword++;}}password.hackProfessor(findPassword);for (int i2 = 1; i2 <= n; i2++) { for(int j2 = 1; j2 <= n; j2++) { openMozillaFirefox(https://www.youtube.com/watch?v=oavMtUWDBTM); }}
a) O(n)
b) O(n^2)
c) O(n^10)
*d) O(10^n)
e) None of the above.
Explanation: It is a terrible brute force algorithm, but it will work. Or at least I think it will, given a number combination.The password cracking loop will iterate for 10^n, as x=10*10*10 ... *10 = 10^n.Wheras spam link loop is only n^2.
Augmented explanation 1: So x starts off at 1 it gets multiplied by 10 n times: so x=10^nNext part checks password and adds one if password hasn't been found for every x. That is 10^n iterations.The next loop is n^2. Which is smaller than 10^n.And for those who gave me a bad review, because they aren't able to get it right, lecture slides are a good place to start... (by: ac2522 [ac2522])
Tags: Cryptography, Applications, Complexity
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 3.4000
Avg Difficulty: 1.1333
Total ratings: 15
==> Comment 1: Was expecting a rick-roll. 4/10 (by: leogriff [ljig20])



ID: 3612200
Created: 3:40pm, 05 Dec 2018
For a list of size n=30,000what would be the average search time for an element in the list using binary search?
a) 7.44
b) 11.02
c) 12.83
*d) 14.87
e) 22.31
Explanation: average search time for binary search is given by O(log2(n)) where n is size of listgiven that n = 30,000:avg search time = log2(30,000) = 14.8726...Ans(D): 14.87
Tags: Lists, Search
Author: gc606 (gc606 - permission to this course revoked)
Avg Rating: 2.9200
Avg Difficulty: 0.6667
Total ratings: 12



ID: 3612190
Created: 3:37pm, 05 Dec 2018
Take the following steps:Select an arbitrary �pivot� element P from the array (typically the first element in the array).If the array contains only 0 or 1 element, return.Move all elements that are = P to the left of the array and all elements > P to the right.Recursively repeat this process on the left sub-array Conquer and then the right sub-array.What sorting algorithm do they describe and what is it's average time complexity?
a) Quick sort, N
b) Merge sort, N^2
*c) Quick sort, Nlog(N)
d) Insertion sort, N^2
e) Merge sort, Nlog(N)
Explanation: These steps describe the quick sort algorithm which has an average run-time complexity of Nlog(N).
Tags: Sorting, Complexity
Author: rm896 (rm896 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 6



ID: 3612162
Created: 3:31pm, 05 Dec 2018
Order these from quickest to slowest when n is close to infinity:Square root: sqrt(n)n log(n)Cubic: Quadratic: Logarithmic: log(n)Exponential: Linear: nConstant: 1
a) Square root: sqrt(n)n log(n)Cubic: Quadratic: Logarithmic: log(n)Exponential: Linear: nConstant: 1
b) n log(n)Cubic: Logarithmic: log(n)Square root: sqrt(n)Quadratic: Exponential: Constant: 1Linear: n
*c) Constant: 1Logarithmic: log(n)Square root: sqrt(n)Linear: nn log(n)Quadratic: Cubic: Exponential:
d) Constant: 1Logarithmic: log(n)n log(n)Square root: sqrt(n)Exponential: Linear: nQuadratic: Cubic:
Explanation:
Tags: Complexity
Author: cro26 (cro26 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3612099
Created: 3:11pm, 05 Dec 2018
What does this formula calculate?And what does represent?
a) Standard DeviationReference values
b) VarianceElements
*c) Standard DeviationElements
d) VarianceReference Values
Explanation: The formula calculates the standard deviation which helps quantify precision, using N the number of elements,the list of elements, and the mean of the elements.
Author: cro26 (cro26 - permission to this course revoked)
Avg Rating: 2.2500
Avg Difficulty: 1.1667
Total ratings: 12



ID: 3612072
Created: 3:01pm, 05 Dec 2018
Given the function f(n) = 2n2+ 2n2log(n) + 200n(2/3) + log(n2), how can the time complexity be described for a sufficiently large n?
a) O(2n2)
b) O(200n(2/3))
c) O(n2)
d) O(log(n2))
*e) O(n2log(n))
Explanation: 2n2log(n) is greater than any other terms and so the time complexity can be described as O(n2log(n)) - we can drop the factor of 2. The second largest term is 2n2, and we have that 2n2 < 2n2log(n) when n is sufficiently large.
Tags: Complexity
Author: hollymillea (hm681 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3612036
Created: 2:47pm, 05 Dec 2018
If we start on node 7, using depth search, which node would be processed last?When selecting the next node to search, choose the smallest node.For example;7 has the choice of going to node 4 and 5It will search node 4 because 4 is less than 5
a) 3
*b) 5
c) 1
d) 6
Explanation: The nodes are processed in this order:7, 4, 1, 2, 3, 6, 5
Tags: Graphs
Author: cro26 (cro26 - permission to this course revoked)
Avg Rating: 3.1700
Avg Difficulty: 1.3333
Total ratings: 12



ID: 3612005
Created: 2:38pm, 05 Dec 2018
If we were to insert 9, 11, 7, 4, 16, 1, 8 into anemptyAVL Tree, 9 / \ 7 11 / \ 4 16 / 1 what would we expect the balanced AVL treeto look like?
*a) 9 / \ 4 11 / \ \1 7 16 \ 8
b) 9 / \ 7 11 / \ \4 8 16/ 1
c) 8 / \ 7 11 / / \4 9 16/1
Explanation: C) is clearly not balanced.If we insert9, 11, 7, 4, 16, 1, prior to balancing we have 9 / \ 7 11 / \ 4 16 / 1which then auto balances to give 9 / \ 4 11 / \ \ 1 7 16Now inserting the final 8, clearly leads to the balanced AVL Tree provided byA).
Tags: Trees
Author: tp506 (tp506 - permission to this course revoked)
Avg Rating: 3.2600
Avg Difficulty: 0.7895
Total ratings: 19



ID: 3612224
Created: 2:34pm, 05 Dec 2018
Which statement is false?
a) A node in a binary search tree must have at most two children.
b) A binary search tree must be ordered.
*c) A binary search tree must be balanced.
Explanation: Binary trees do not necessarily have to be balanced. It is AVL trees that are defined to be balanced.
Tags: Trees
Author: hollymillea (hm681 - permission to this course revoked)
Avg Rating: 3.4600
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3612479
Created: 2:27pm, 05 Dec 2018
Which of the following sets of sorting algorithms lists all that implement the divide and conquer approach?
*a) Mergesort, Quicksort and Heapsort
b) Mergesort, Insertionsort and Heapsort
c) Quicksort and Heapsort
d) Mergesort and Heapsort
e) Insertionsort, Bubblesort and Quicksort
Explanation: Merge Quick and Heap all use divide and conquer, while insertion and bubble use a different approach to sorting.
Tags: Sorting
Author: gc606 (gc606 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.1875
Total ratings: 16



ID: 3611952
Created: 2:15pm, 05 Dec 2018
Which of the taught sorting algorithms would be expected to be the quickest for a mostly-sorted array?
a) Bubble Sort
b) Shell Sort
*c) Insertion Sort
d) Merge Sort
Explanation: Insertion sort has complexity O(n) for mostly-sorted/sorted arrays. However, Bubble sort also hascomplexity O(n) for mostly-sorted/sorted arrays but requiresat least 2 passesthrough the data in comparison to insertions sort's required1pass -meaninginsertion sort is fasteron average.Merge SorthasT(n�lg(n))regardless of how sorted the array is, so clearly this isn't the best choice.Shell Sortis dependent on theincrement sequence, but overall cannot be faster thaninsertion sort formostly sorted arrays.Insertion Sort wins overall.
Tags: Sorting
Author: tp506 (tp506 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.6364
Total ratings: 11
==> Comment 1: Both bubble sort and insertion sort have complexity n for nearly-sorted arrays, so I'd argue that they're both correct answers. (by: nmparrott [nmp31])



ID: 3611895
Created: 1:48pm, 05 Dec 2018
An algorithm takes 2 seconds to run for n items. If we were to increase number of items to 3n, what would we expect the new runtime to be closest to for the following complexities?i)ii)iii)
a) i) = 18ii) = 23kiii) = Cant tell without further information.
*b) i) = 18ii) = 2(3k)iii) = 23n + 1
c) i) = 18ii) = 3(2k)iii) = 2(23n)
d) i) = 12ii) = 23kiii) = Cant tell without further information.
Explanation: For i) - increasing n by a factor of 3 would lead to an increase of time taken by a factor of 9: 2 x 9 = 18 seconds (expected).For ii) -increasing n by a factor of 3 would lead to an increase of time taken by a factor of 3k leading to 2(3k) seconds.NOT to be confused with 23k or 3(2k).For iii) -increasing n by a factor of 3 would lead to an increase of time taken by a factor of 23n - this leads to an expected time of 2(23n) = 23n + 1seconds.Meaning the only possible answer is b).
Tags: Complexity
Author: tp506 (tp506 - permission to this course revoked)
Avg Rating: 3.7600
Avg Difficulty: 1.0000
Total ratings: 17
==> Comment 1: For (iii), if 2n = 2, then 23n= (2n)3 = 23 = 8. Surely? (by: nmparrott [nmp31])



ID: 3611891
Created: 1:47pm, 05 Dec 2018
What is the correct definition for the upper bound ?
a)
b)
*c)
d)
Explanation: Compare with lecture
Tags: Complexity
Author: nathalie (nl586 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3611864
Created: 1:30pm, 05 Dec 2018
Which is not a property of quicksort?
a) Utilizes Divide and Conquer strategy.
b) The best case runtime and the average case are the same.
c) The worst case runtime is O(n^2).
d) Quicksort is unstable.
*e) The pivot should be the first element.
Explanation: Utilizes Divide and Conquer strategy.Since breaks down into two partitions. (with exception in worst case)The best case runtime and the average case are the same.Both nlog(n).The worst case runtime is O(n^2).If already ordered there are n partitions: so n*n.Quicksort is unstable.Since it exchanges nonadjacent elements.The pivot should be the first element.Pivot is arbitrary.
Tags: Lists, Sorting, Complexity
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.5000
Total ratings: 20



ID: 3611817
Created: 1:05pm, 05 Dec 2018
The following is an AVL tree. The element 17 is added, and the element 20 is added. Which elements are the root, and the roots children?
a) The root: 21The roots left child: 12The roots right child: 33
b) The root: 18The roots left child: 12The roots right child: 21
c) The root: 21The roots left child: 16The roots right child: 33
*d) The root: 18The roots left child: 16The roots right child: 21
e) None of the above.
Explanation: After adding the 17, you do a double rotation to rebalance to form: 21 16 33 12 18 637 17 19Then you add 20 and rebalance with the opposite double rotation to get: 18 16 21 12 17 19 337 20 63Hopefully this is clear. If not write it out. If you can't read above, then I am guessing you are on a phone: don't be.
Tags: Trees
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 1.3077
Total ratings: 13



ID: 3611690
Created: 12:13pm, 05 Dec 2018
Why can we not remove items from a closed hashtable with linear probing?
a) It's too slow to find value we want to remove and then remove it.
*b) It would create an empty slot and would abort search prematurely.
c) The linked list in the bucket cannot be removed.
Explanation: When inserting values into a hashtable we probe down until we find an empty bin. This means when we then search for the value we will need to probe down also - aborting when item found or empty bucket found. If there is a gap (where we have removed value) before the value is found then we would say the value is not in the table falsely.
Tags: Search, Hashtables
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 3.3000
Avg Difficulty: 0.4500
Total ratings: 20



ID: 3611668
Created: 12:02pm, 05 Dec 2018
Say we have a linked list with a tail reference. What would the code look like to add a node to the end of the non-empty list?Nodes have following code:class ListNode { Object element; ListNode next; ListNode(Object e, ListNode n) { element = e; next = n; }}
*a) ListNode newNode = new ListNode(o, null);tail.next = newNode;tail = newNode;
b) ListNode newNode = new ListNode(o, null);tail = newNode;
c) ListNode newNode = new ListNode(o, null);tail = newNode;tail.next = newNode;
d) head = new ListNode(o, head);
Explanation: For B: we haven't pointed the old tail node to this new node.For C: We have pointed tail towards new node, then set this new node's next to itself. Also haven't pointed old tail node to this new node.For D: we have added the node to the front, not the end.So A is correct. We have pointed old tail node to the new node and then pointed tail towards the new node.
Tags: Lists
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3611612
Created: 11:34am, 05 Dec 2018
Say we have a graph where the nodes are based on major cities in England and the edges are the major motorways. We want to get data for where we can get using only 1 motorway, then get data for 2 motorways, 3 motorways and so on. Which traversal strategy should we use?
a) Random-edge traversal
*b) Breadth-first traversal
c) Adjacency traversal
d) Depth-first traversal
e) Quick-leap traversal
Explanation: The only 2 real strategies are depth-first and breadth-first. Depth-first goes all the way to a dead end before searching the rest of the graph, this isn't useful as we want only the nodes which are 1 edge away first. Breadth-first gives us what we want.
Tags: Graphs, Search
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 3.4300
Avg Difficulty: 0.5000
Total ratings: 14



ID: 3611600
Created: 11:27am, 05 Dec 2018
Say we want to store data in a graph. The data shows which factories, that produce certain resources, supply to some of the other factories. There are 100 factories, each of which deliver resources to approximately 15 other factories each. How shall we store the graph?
a) Use a 2D array
b) Use a picture of what the graph looks like
*c) Use an array of linked lists
d) Use a skip list
e) Use a tree where each node has 15 children
Explanation: If we were to use an array there would be 10000 data points, whereas the array of linked lists only has 1500 data points.
Tags: Lists, Graphs, Complexity
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 4.0700
Avg Difficulty: 0.7857
Total ratings: 14



ID: 3611578
Created: 11:13am, 05 Dec 2018
When adding a new node to a non-empty heap, were do we initially insert the node before "sifting up"?
a) Swap the root node with the new node.
b) The right-most bottom-most slot.
c) Anywhere, as long as you then "sift up".
d) A new empty tree.
*e) The left-most bottom-most slot.
Explanation: We add the node to the left-most bottom-most slot as then the tree is still complete, which is a condition for the tree to be a heap.
Tags: Trees
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.3333
Total ratings: 9



ID: 3611560
Created: 11:06am, 05 Dec 2018
Say we have a heap, which is stored in an array, and a node at index n. What are the indexes in the array of the children of this node?
a) 2n, 2n+1
b) 2n+1, 3n+1
*c) 2n+1, 2n+2
d) 2n, 4n
e) n+1, n+2
Explanation: This means that there is never an overlap in the indexes of children of a node and another node. If we didn't have the +1 then the 0th index node would have a child in the 0th index.
Tags: Trees
Author: lhc33 (lhc33 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.7778
Total ratings: 9



ID: 3612137
Created: 10:29am, 05 Dec 2018
The poles for the 2080 US election are in. However there has been a mistake: they were meant to be sent in by alphabetical ordering of the 3242 county names, but certain counties sent their data in early or late. This has meant that the list is ordered incorrectly, with a positioning error term of at most 4. Jim, whose job is on the line, has very little time to fix the mistake. Given that his reading skills are limited, and his computer is incredibly slow, which sorting method should he use.
a) Insertionsort
b) Quicksort
c) Selectionsort
*d) Bubblesort
e) Can't answer, unless the list is shown.
Explanation: Bubblesort: since the list is mostly sorted. Would be O(n) rather than O(nlog(n)). And would take at most 4n comparisons.
Tags: Lists, Sorting, Complexity
Author: ac2522 (ac2522 - permission to this course revoked)
Avg Rating: 2.9500
Avg Difficulty: 1.1000
Total ratings: 20
==> Comment 1: It's polls, not poles x (by: msu26 [msu26])
====> Reply 1: My bad...
==> Comment 2: I think insertion sort and bubble sort are both correct answers because with a nearly sorted list they both have runtime complexity of n (by: nmparrott [nmp31])
==> Comment 3: It's 2080. Let's be real, Jim is either a robot/ AI or he/she doesn't exist, especially after the presidency ended with Trump (by: iid21 [iid21])
====> Reply 1: Nahh you got this all wrong. After the US managed to create fully undetectable nuclear weapon, Eric Trump the new president, decided to eradicate the rest of the world, because "they are all potential illegal immigrants", not to mention the trade tariffs on the US, which Eric found "unfair" and "the work of bullies.He dismissed scientists claims of nuclear winter as scare mongering.When nuclear winter hit, and food harvests were low, the US relied upon radioactive cows and soy beans to feed the population. Which meant that the literacy rate dropped.Computers slowed down, as no one knew how to fix them, and all major manufacturers had built in self detonation for any computer that was older than 3 years. The only systems that were fuctionable were Acorn computers.
====> Reply 2: Wow. This is such an accurate prediction.This is the best thing I've read in a while. Thank you!Americans deserve to see this and know what's coming



ID: 3611462
Created: 10:14am, 05 Dec 2018
Which of the following tree's is a legal BST?a) b) c) 1 3 3 / \ / \ / 2 3 1 2 2 / / /4 5 1
a) a
b) b
*c) c
Explanation: Given any node in the binary tree, all nodes in its left sub-tree must be less than the node�s value.Given any node in the binary tree, all nodes in its right sub-tree must be greater than the node�s value.There is no condition on whether a BST is balanced.(Lecture 14)
Tags: Trees
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3612673
Created: 9:07am, 05 Dec 2018
Array List:Which of the following statements about Array Lists is false?Note: assume theArray List is unsorted.
a) Array Lists support random access, so the element at a given position can be accessed in T(1).
b) The average case runtime complexity for inserting into any position in the the array list is T(n).
*c) The best and worst case runtime complexity for finding an element is the same.
d) The best case runtime complexity for removing an element from the array isT(1).
e) The best case runtime complexity for adding an element to the end of the array is T(1).
Explanation: Statement A is true.The answer is not B because the best case runtime complexity for inserting into the array list and removing from the array list isT(1).The answer is C as the best case runtime complexity for finding an element is T(1) and worst case runtime complexity for finding an element isT(n).The answer is not D because the best case runtime complexity for removing an element from the array is T(1).The answer is not E as the best case runtime complexity for adding an element to the end of the array is T(1).
Augmented explanation 1: Statement A is true because an element in the array list is accessed by its index (position in the array list).For example, in Java, the code arrayList.get(2) will look at the third position in the array list and return the element that it finds there. It does not need to examine any other elements.This means the runtime complexity is constant for accessing an element. (by: jessmead [jlm77])
Tags: Lists, Complexity
Author: jessmead (jlm77 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.4444
Total ratings: 9



ID: 3611390
Created: 8:44am, 05 Dec 2018
put the binary tree intopreorder traversal? 8 / \ / \ 6 10 / \ / \ 4 7 9 12
a) 6,4,7,8,10,9,12
*b) 8,6,4,7,10,9,12
c) 6,4,7,10,9,12,8
d) none of the above
Tags: Sorting
Author: ses59 (ses59 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 14



ID: 3610887
Created: 3:02am, 05 Dec 2018
In the worst case, what is the complexity of insertion sort?
a) O(n)
*b) O(n^2)
c) O(n^3)
d) O(log(n))
e) None of the above.
Explanation: During each round of the algorithm we consider a larger set.The first time we may need to compare and shift one element.The second time we may need to compare with and shift up to two elements....The final time we may need to compare and shift up to (n - 1) elements.1 + 2 + ... + (n - 1) = roughly n^2 steps.Therefore, in the worst case, insertion sort is O(n^2).
Author: rm896 (rm896 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.2000
Total ratings: 15



ID: 3610825
Created: 2:34am, 05 Dec 2018
The following is a binary search tree (BST) where we have just inserted the node '13':We are trying to maintain a valid AVL tree. In this case, at what node (if any) is this tree unbalanced and what type of rotation(s) are necessary to balance the tree?
a) Node '14' is unbalanced. Right rotation (i.e. a right rotation about node '14').
*b) Node '14' is unbalanced. Left-right rotation (i.e. a left rotation about node '12' followed by a right rotation about node '14').
c) Node '12' is unbalanced. Left rotation (i.e. a left rotation about node '12')
d) Node '12' is unbalanced. Right rotation (i.e. a right rotation about node '12')
e) No node is unbalanced. No rotation(s) necessary.
Explanation: The balance of a node in an AVL tree is defined as the height of the left sub-tree minus the height of the right sub-tree. An AVL tree is unbalanced if the balance of a node is greater than 1 or less than -1.Therefore, we see that the node '14' is unbalanced with a balance of -2.We now want to apply a rotation (or two) to balance the tree.Clearly this will involve a right rotation at some point (as it is the left sub-tree which has the greater height). However, if we apply a right rotation straight away we will have a tree that is still unbalanced. The balance will be +2 at node '12' which has replaced node '14' as nodes '13' and '14' will both be in the right sub-tree.Therefore, we want to apply a left-right rotation which firstly does a left rotation about node '12' followed by a right rotation around node '14'.We will then end up with the following AVL tree (which is not only balanced, but perfectly balanced in fact!):
Tags: Trees
Author: rm896 (rm896 - permission to this course revoked)
Avg Rating: 4.1100
Avg Difficulty: 0.8947
Total ratings: 19



ID: 3610720
Created: 1:34am, 05 Dec 2018
What is the average number of steps to find a bucket in and open and closed hash table with a load factor of 0.99?
a) Closed: 1.495 StepsOpen: 50.5Steps
b) Closed: 12 StepsOpen: 1.4 Steps
*c) Closed: 50.5StepsOpen: 1.495Steps
d) Closed: 1.4 StepsOpen: 12 Steps
Explanation: Open no of steps = 1 + L/2Closed no of steps = 1/2(1+1/(1-L))
Tags: Hashtables
Author: callumbateson (cb2063 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 15



ID: 3611694
Created: 1:11am, 05 Dec 2018
What is the definition of an AVL tree?
a) Any tree thathas a difference of the number of nodes between any node's left and right sub-trees of at most one.
b) A binary search tree that has adifference of the number of nodes between any node's left and right sub-trees of at most one.
c) A heap tree in which the height of the left and right sub-trees of each node differ by at most one.
*d) A binary search tree in which the height of the left and right sub-trees of each node differ by at most one.
e) Any tree in which the height of the left and right sub-trees of each node differ by at most one.
Explanation: https://moodle.bath.ac.uk/pluginfile.php/1144766/mod_resource/content/3/DA-Lecture15-Trees3.pdf - Definition stated on page 5
Tags: Trees
Author: callumbateson (cb2063 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3610650
Created: 12:51am, 05 Dec 2018
What is(n)?
a) The upper bound of complexity.
b) The average complexity.
c) The lower bound of complexity.
*d) The exact bound of complexity.
e) The amortised average of complexity.
Explanation: https://moodle.bath.ac.uk/pluginfile.php/1117431/mod_resource/content/4/DA-Lecture04-Complexity2.pdf - page 6
Augmented explanation 1: https://moodle.bath.ac.uk/pluginfile.php/1117431/mod_resource/content/4/DA-Lecture04-Complexity2.pdf - page 6It is a common misconception that the answer is the average bound of complexity. IT IS NOTThe correct answer is that it is the exact bound which only occurs when the lower and upper bound complexities are the SAME. (by: callumbateson [cb2063])
Tags: Complexity
Author: callumbateson (cb2063 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.6000
Total ratings: 15



ID: 3610638
Created: 12:40am, 05 Dec 2018
Which of the following statements is false?
a) Divide and conquer sorting algorithms work recursively via:1. dividing the elements to be sorted into two equal sizes2. sort each of these smaller groups of elements3. combine the two groups into one large sorted list
b) Unstable sorting re-orders items without taking into account their initial ordering
c) Insertion Sort is useful for small already sorted datasets
*d) Selection Sort is astable sort
e) Merge Sort works equally well regardless of the ordering of the data
Explanation: In selection sorts,the relative order of elements with the same value is not maintained.
Tags: Sorting
Author: aa2738 (aa2738 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3610610
Created: 12:24am, 05 Dec 2018
Where would it be most suitable to use an adjacency matrix?
a) A graph with:Lots of edges between verticesLots of vertices (>10000)
b) A graph with:Few edges between verticesLots of vertices (>10000)
*c) A graph with:Lots of Edges between verticesFew Vertices (<10000)
Explanation: Adjacency matrix works best with densegraphs with few vertices, as the size of the matrix is not too high meaning it could be simply implemented with a 2D array, rather than a more complex adjacency list. Further explained in Graphs 1.
Tags: Graphs
Author: aa2738 (aa2738 - permission to this course revoked)
Avg Rating: 3.8500
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3610465
Created: 11:06pm, 04 Dec 2018
Which of the following statements are true?
a) Selection Sort and Insertion Sort, are both stable.
b) Merge Sort and Shell Sort are Stable and Unstable respectively.
c) Heap Sort, Quick Sort and Bubble Sort are Unstable, Unstable and stable respectively.
*d) B and C.
e) None of the above.
Explanation: Selection Sort - UnstableInsertion Sort - StableBubble Sort - StableShell Sort - UnstableQuick Sort - UnstableMerge Sort - StableHeap Sort - Unstable
Tags: Sorting
Author: th779 (th779 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.8750
Total ratings: 16



ID: 3610401
Created: 10:47pm, 04 Dec 2018
For ?(n2), which of the following is true.
a) When n is doubled, time is increased by a factor of 8.
*b) Doubling n increases T by factor 4
c) When doubling n, T increases only by a constant
d) A constant increment of n leads to increase of T by factor
e) none of the above
Explanation: For ?(n2) when n is doubled, the Time is increased by a factor 2, which is also the exponent value in the Big ? expression.
Tags: Complexity
Author: bc678 (bc678 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3610360
Created: 10:34pm, 04 Dec 2018
How many iterations will it take to sort the following array into ascending order using a selection sort?2,5,1,3,4,6
a) 1
b) 2
c) 3
*d) 4
e) None of the above
Explanation: It will take 4 iterations to sort the array.
Tags: Sorting
Author: alfiewn (an666 - permission to this course revoked)
Avg Rating: 2.4500
Avg Difficulty: 0.6364
Total ratings: 11



ID: 3610327
Created: 10:23pm, 04 Dec 2018
Which of the following statements about linked lists and arrays is false?
a) Returning an item at a particular index is faster with an Array than it is with a linked list
b) Inserting a new item at the front of a linked list is faster than inserting an item at the front of an array
*c) Removing an item from the middle of an array is faster than removing an item from the middle of a linked list
d) Arrays are easier to program and debug than linked lists
e) None of the above are false
Explanation: It is faster to remove an item from the middle of a linked list as you simply update the pointers of the previous and next nodes. With an array you must shift all items to the left.
Tags: Lists
Author: alfiewn (an666 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.5385
Total ratings: 13



ID: 3610289
Created: 10:04pm, 04 Dec 2018
A tree node which has zero children is called ___?
a) a root
b) a child
*c) a leaf
d) a parent
e) None of the above
Explanation: A leaf node is a tree node which has zero children.
Tags: Trees
Author: bc678 (bc678 - permission to this course revoked)
Avg Rating: 3.2600
Avg Difficulty: 0.1579
Total ratings: 19



ID: 3610190
Created: 8:59pm, 04 Dec 2018
Given the following incomplete Java code for selection sort, which code must go at the place marked with X?public static void selectionSort(String[] array) { for(int i = 0; i < array.length; i ++) { int minimumIndex = i; X }}
a) for(int j = i; j < array.length; j ++) { if(array[j].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[i] = array[minimumIndex]; array[minimumIndex] = temporaryValue;}
*b) for(int j = i + 1; j < array.length; j ++) { if(array[j].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[i] = array[minimumIndex]; array[minimumIndex] = temporaryValue;}
c) for(int j = i + 1; j < array.length; j ++) { if(array[j].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[minimumIndex] = temporaryValue;}
d) for(int j = i + 1; j < array.length; j ++) { if(array[j + 1].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[i] = array[minimumIndex]; array[minimumIndex] = temporaryValue;}
e) for(int j = i; j < array.length; j ++) { if(array[j].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[minimumIndex] = temporaryValue;}
Explanation: A - incorrect due to the for loop initialising j to i and not i + 1.B - correctC - incorrect due to swapping at the end being incompleteD - incorrect due to the if statement comparing the array[j + 1] element and not element array[j] to the array[minimumIndex] elementE - incorrect due tothe for loop initialising j to i and not i + 1, and theswapping at the end being incomplete
Tags: Sorting
Author: avb49 (avb49 - permission to this course revoked)
Avg Rating: 2.9100
Avg Difficulty: 1.0909
Total ratings: 11
==> Comment 1: Can you explain why the loop initialising at i instead of i+1 is a bad thing as far as i can see both A and B would work (by: callumbateson [cb2063])
====> Reply 1: Hi. Please seeDA-Lecture10-Sorting1.pdf slides page 8 for the answer. Thanks
====> Reply 2: My point is the while B may be on the lecture slides. Wouldn't A work as well?
====> Reply 3: A does work but you're adding an unnecessary iteration. B is more generally accepted but personally I think A should be removed



ID: 3610112
Created: 8:53pm, 04 Dec 2018
Which of the following sorting algorithms is the fastest for an input array of integers, int[] array, which in fact is already sorted?
*a) void A(int[] array) { for (int i=2; i<=array.length; i++){ int j = array[i-1]; int k = i-2; while (k >= 0 && j < array[k]){ array[k+1] = array[k]; k--; } array[k+1] = j; }}
b) void B(int[] array) { int i = array.length; int j = 0; for(int k=0; k < i; k++){ for(int l=1; l < (i-k); l++){ if(array[l-1] > arr[l]){ j = array[l-1]; array[l-1] = arr[l]; arr[l] = j; } } }}
c) void C(int[] array) { int n = array.length; for (int i=0; i < n; i++){ int k = i; for (int j=i+1; j < n; j++){ if (array[j] < a[k]) k = j; } int l = array[i]; array[i] = array[k]; array[k] = l; }}
d) A and B
e) B and C
Explanation: The algorithm A is the insertion sort, B corresponds to a bubble sort and C to a selection sort. For an array which is already sorted, the insertion array is the fastest, as its time complexity is given by?(n) because the second condition in the while loop is never met (j < array[k]). Meanwhile, the time complexity of the selection sort is always?(n^2), and the time complexity of the bubble sort in this case is also?(n^2).
Tags: Sorting, Complexity
Author: ksr29@bath.ac.uk (ksr29 - permission to this course revoked)
Avg Rating: 3.3100
Avg Difficulty: 1.3125
Total ratings: 16



ID: 3610079
Created: 8:40pm, 04 Dec 2018
Which of the following options is the correct output for the post-order traversal of this tree?
a) 4, 8, 9, 10, 12, 14, 18
*b) 4, 9, 8, 18, 14, 12, 10
c) 10, 8, 4, 9, 12 ,14 18
d) 10, 8, 12, 4, 9, 14, 18
e) None of these outputs
Explanation: The post-order traversal processes the nodes in the left subtree first. Then it processes the nodes in the right subtree. Finally, it processes the current node.
Tags: Trees
Author: jessmead (jlm77 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.4737
Total ratings: 19



ID: 3610078
Created: 8:40pm, 04 Dec 2018
Which of the following best describes preorder traversal of a tree?
a) 1. Process the nodes in the left sub-tree2. Process the current node3. Process the nodes in the right sub-tree
*b) 1. Process the current node2. Process the nodes in the left sub-tree3. Process the nodes in the right sub-tree
c) 1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
Explanation: This is given in lecture 13.
Tags: Trees
Author: jamesholland (jh2508 - permission to this course revoked)
Avg Rating: 3.2000
Avg Difficulty: 0.1000
Total ratings: 10



ID: 3609928
Created: 7:52pm, 04 Dec 2018
How many nodes does a full binary tree of depth d have?
a) 2^d
b) 2^d - 1
*c) 2^(d+1) - 1
d) 2^(d+1)
Explanation: The number of nodes on depth level n is 2^n, so in total a full binary tree of depth d will have 2^(d+1) - 1 nodes.
Tags: Trees
Author: jamesholland (jh2508 - permission to this course revoked)
Avg Rating: 2.7500
Avg Difficulty: 0.5000
Total ratings: 8
==> Comment 1: If a tree has height 0, it is empty so no nodes. If a tree has height 1, it has just the root node (2^1 - 1). If it has height 2, it has 3 nodes (2^2 - 1). etc. So I'd argue that the author's answer is incorrect. (by: nmparrott [nmp31])



ID: 3609913
Created: 7:41pm, 04 Dec 2018
Is it allowed to remove elements from a closed hash-table that uses linear probing, and why?
a) Yes, if the load factor (alpha) is kept low. Otherwise, no.
b) Yes, because a closed hash-table does not need to be full at all times.
c) Yes, because each index in the hash-table points to a linked-list in which it is possible to freely add and remove elements.
*d) No, because there may be other elements with the same hash value coming after the given element.
e) No, because removing an element means that another element cannot be placed at the given index afterwards by the hash function.
Explanation: A - this is false, because the load factor does not have a role to play in this answer. Even if it is kept low, the situation described in answer D may still occur.B - this is false, because this answer disregards the situation explained in answer D, below.C - this is false, because this answer refers to open hash-tables which have linked lists at each bucket/index.D - this is correct, because removing an element in a closed hash table using linear probing may lead to a premature search abortion at the empty slot, even though there may be elements with the same hash value coming after the given element being removed.E - this is false, because when an element is removed from a given index, another element can be placed there afterwards. However, it does not explain why we cannot remove an element from a closed hash-table which uses linear probing.
Tags: Hashtables
Author: avb49 (avb49 - permission to this course revoked)
Avg Rating: 3.2800
Avg Difficulty: 0.6111
Total ratings: 18



ID: 3609905
Created: 7:37pm, 04 Dec 2018
In big O notation which of the following best describes the function f(n) = 2n + nlog(n) + 0.5^(0.5n)?
a) O(n)
*b) O(0.5^(0.5n))
c) O(log^2(n))
d) O(n^2)
Explanation: For large enough n, 0.5^(0.5n) becomes the domination term, and is greater than the others.
Tags: Complexity
Author: jamesholland (jh2508 - permission to this course revoked)
Avg Rating: 2.5900
Avg Difficulty: 0.6471
Total ratings: 17
==> Comment 1: No and let me tell you why. 0.5 < 1 & therefore 0.5 to any power greater than 1 will only become smaller. Let's demonstrate with an example, let n = 1,000,000:2n = 2*1,000,000 = 2,000,000nlog(n) = 1,000,000 * log(1,000,000) = 6,000,0000.50.5n= 0.50.5*1,000,000 = basically zero, my personal calculator says 0, my computers calculator says invalid input, that's how small it isThe only answer that you've provided that could possible an upper bound is O(n2), but the correct answer should be O(nlog(n)) but that isn't even an option. (by: nmparrott [nmp31])



ID: 3628097
Created: 6:43pm, 04 Dec 2018
Which boolean expression indicates whether the objects in two linked list nodes (l and m) are the same?[using the code from the problem sheet:class ListNode { Object element; ListNode next = null; ListNode(Object e, ListNode n) { element = e; next = n; }}]
a) l == m
b) l.next == m.next
c) l.element == m.element
*d) l.element.equals(m.element)
e) None of the above
Explanation: class ListNode { Object element; ListNode next = null; ListNode(Object e, ListNode n) { element = e; next = n; }}In our ListNode construction, the objects of each node are stored in element.l == m would not work, as Java cannot test whether two of our ListNodes are the same in this way (by default).l.next == m.next checks whether the nodes that l and m are pointing to are the same (which would always be false by our construction).l.element == m.element can only be used for numbers.
Tags: Lists
Author: ptear20 (ptear20 - permission to this course revoked)
Avg Rating: 3.2900
Avg Difficulty: 0.7917
Total ratings: 24



ID: 3609703
Created: 5:54pm, 04 Dec 2018
The list of numbers4, 3, 5, 2, 7, 1 is sorted into ascending order using selection sort.What will the list look like after the third swap?
a) 1, 2, 5, 3, 7, 4
b) 1, 3, 5, 2, 7, 4
c) 4, 2, 5, 3, 1, 7
d) 1, 2, 3, 4, 5, 7
*e) 1, 2, 3, 5, 7, 4
Explanation: 4, 3, 5, 2, 7, 1 Initial state1, 3, 5, 2, 7, 4 (Swap 1 and 4) 1st1, 2, 5, 3, 7, 4 (Swap 3 and 2) 2nd1, 2, 3, 5, 7, 4 (Swap 5 and 3) 3rd <~~1, 2, 3, 4, 7, 5 (Swap 5 and 4) 4th1, 2, 3, 4, 5, 6 (Swap 5 and 7) 5th
Tags: Sorting
Author: sll57 (sll57 - permission to this course revoked)
Avg Rating: 3.2200
Avg Difficulty: 0.4444
Total ratings: 9
==> Comment 1: This is not quite right - see this video:https://www.youtube.com/watch?v=g-PGLbMth_gThe first swap should swap 4 and 3, giving:3, 4, 5, 2, 7, 1 (by: avb49 [avb49])



ID: 3609697
Created: 5:53pm, 04 Dec 2018
What is the runtime when using Counting Sort for sorting n numbers with maximum d digits with basis k based on their digits?
a) ?(n2)
b) ?(log n)
*c) ?(n)
d) ?(dn2)
e) ?(k log n)
Explanation: Given that for counting sort the runtime is ?(n) to count occurrences and ?(k+n) to scan the count array andbuild the output then the runtime is?(d*(k+n)) where d and k are constants so?(n).(Lecture 12)
Tags: Sorting
Author: emmafuentes (efa24 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 1.0000
Total ratings: 10



ID: 3609370
Created: 4:56pm, 04 Dec 2018
Given an array of elements 5, 3, 6, 2, 1, 4, 7, how many iterations of h-sorting with h=2 would be required before we need to move on to h=1?
a) 1
b) 2
*c) 3
d) 4
e) None of the above
Explanation: 1st iteration gives us: 5, 2, 1, 3, 6, 4, 72nd iteration gives us: 1, 2, 5, 3, 6, 4, 73rd iteration to check: 1, 2, 5, 3, 6, 4, 7No swaps occurred in our 3rd iteration so we are done.
Tags: Sorting
Author: kaiempage (cp693 - permission to this course revoked)
Avg Rating: 4.1100
Avg Difficulty: 1.0000
Total ratings: 9



ID: 3609367
Created: 4:55pm, 04 Dec 2018
Which of the following statements is/are true?When using a classical binary tree node with links to implement a heap:1) It is hard to find a node's parents to do reheapification swaps2) It is hard to find the bottom-most, left-most node during extraction3) It is hard to find the bottom-most, right-most open spot to insert a new node during insertion
*a) Only 1
b) Only 2
c) Only 3
d) Only 1 and 2
e) All of the above
Explanation: "1) It is hard to find a node's parents to do reheapification swaps" is correct"2) It is hard to find the bottom-most, left-most node during extraction" is incorrect: It is hard to find the bottom-most, right-most node during extraction"3) It is hard to find the bottom-most, right-most open spot to insert a new node during insertion" is incorrect: It is hard to find the bottom-most, left-most open spot to insert a new node during insertion(Lecture 16)
Tags: Trees
Author: emmafuentes (efa24 - permission to this course revoked)
Avg Rating: 3.1700
Avg Difficulty: 1.3333
Total ratings: 12



ID: 3609363
Created: 4:54pm, 04 Dec 2018
What will be the output of a pre-order traversal of the following tree if each node processed is printed out? 10 / \ 4 12 / \ \ 2 6 16
a) 2, 4, 6, 10, 12, 16
b) 2, 6, 4, 12, 16, 10
*c) 10, 4, 2, 6, 12, 16
d) 10, 4, 12, 2, 6, 16
e) 10, 12, 16, 4, 6, 2
Explanation: The pre-order traversal algorithm is as follows:void preOrder(Node cur) { if (cur == null) { return; } System.out.print(cur.value + � �); preOrder(cur.left); preOrder(cur.right);}Thus, we start at the root and print out the value 10. Then we recursively process the nodes in the left sub-tree, printing out 4, then 2.At this point the 'cur' node will be null, and thus return. Then the algorithm works its way 'upwards' printing out the values of the right sub-trees.The resulting output is:10, 4, 2, 6, 12, 16
Tags: Trees
Author: avb49 (avb49 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.6364
Total ratings: 11



ID: 3609345
Created: 4:48pm, 04 Dec 2018
For this function what is the complexity class of Big theta (?)?for ( int i = 0; i < q * 100; i++ ) { for ( int j = 0; j < q; j++ ) { sum++; }}
a) ?(q)
b) ?(q3)
*c) ?(q2)
d) ?(log(q))
Explanation: Lecture 5 slide 7
Tags: Complexity
Author: rf504 (rf504 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4722
Total ratings: 36



ID: 3609340
Created: 4:38pm, 04 Dec 2018
Which of the following options is true for this tree? 8 / \ 4 12 / \ / \ 3 5 10 17 / \ / \ 2 11 15 18 / \ 14 16
*a) The tree is balanced and has a balance of +1
b) The tree is unbalanced and has a balance of +2
c) The tree is balanced and has a balance of -1
d) The tree is unbalanced and has a balance of -2
Explanation: The tree is right-heavy. The maximum depth of left hand side of the tree is 3 (8-4-3-2) and the maximum depth of the right hand side of the tree is 4 (8-17-15-16(or-14). This means the overall balance is -3 + 4 = 1
Augmented explanation 1: The tree is right-heavy. The maximum depth of left hand side of the tree is 3 (8-4-3-2) and the maximum depth of the right hand side of the tree is 4 (8-12-17-15-16(or-14). This means the overall balance is -3 + 4 = 1 (by: ptear20 [ptear20])
Augmented explanation 2: The tree is right-heavy. The maximum depth of left hand side of the tree is 3 (8-4-3-2) and the maximum depth of the right hand side of the tree is 4 (8-12-17-15-16(or-14)). This means the overall balance is -3 + 4 = 1 (by: dpah20 [dpah20])
Tags: Trees
Author: rf504 (rf504 - permission to this course revoked)
Avg Rating: 4.1200
Avg Difficulty: 0.7353
Total ratings: 34
==> Comment 1: This question is slightly ambiguous. Different people would say that the answer to this question is different depending on how it is calculated. However useful to make sure you calculate the same way as in the notes (by: dpah20 [dpah20])



ID: 3609302
Created: 4:38pm, 04 Dec 2018
An h-sort with an h-value of 1 is equivalent to what other sorting algorithm?
a) Quicksort
b) Insertion Sort
c) Selection Sort
*d) Bubble Sort
Explanation: Bubble sort: go through array A and if A[i]>A[i+1] swap themShell sort: go through array A and if A[i]>A[i+h] swap themHence when h=1 they're the same
Tags: Sorting
Author: awh28 (awh28 - permission to this course revoked)
Avg Rating: 3.5500
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3609264
Created: 4:26pm, 04 Dec 2018
Which traversal is being used when you find the numbers 4, 2, 6, 1, 3, 5, 7 (in that order) for the given tree:
a) In-Order Traversal
b) Pre-Order Traversal
c) Post-Order Traversal
*d) Level-Order Traversal
Explanation: Level-Order Traversal goes through each level of nodes at a time from left to right, therefore, it will start at the top with 4, then 2 and 6 on the 2nd row of nodes, followed by 1, 3 ,5 and 7 on the final row.
Tags: Search, Trees
Author: rfmh20 (rfmh20 - permission to this course revoked)
Avg Rating: 4.3500
Avg Difficulty: 0.3462
Total ratings: 26



ID: 3609260
Created: 4:24pm, 04 Dec 2018
Which two sorting algorithms are UNSTABLE AND have?(n log2n)as the average number of steps when sorting n items?
a) Quicksort and Mergesort
*b) Quicksort and Heapsort
c) Heapsort and Bubblesort
Explanation: Lecture 12 slide 19
Tags: Sorting, Search
Author: rf504 (rf504 - permission to this course revoked)
Avg Rating: 4.1300
Avg Difficulty: 0.7097
Total ratings: 31



ID: 3609245
Created: 4:20pm, 04 Dec 2018
How many operations does the following code take?var x = 0;for(var i = 0; i < 2; i++) { x++;}
a) 8
*b) 11
c) 15
d) 9
e) 13
Explanation: var x = 0;This is 2 operations (declaring a variable, and assigning it a value).var i = 0;This is 2 operations (declaring a variable, and assigning it a value).i < 2; This is 1 operation (happens 3 times).i++; This is 1 operation (happens 2 times).x++; This is 1 operation (happens 2 times).Therefore, 2 + 2 + (3 x 1) + (2 x 1) + (2 x 1) = 11
Author: ajb258 (ajb258 - permission to this course revoked)
Avg Rating: 3.0000
Avg Difficulty: 0.8000
Total ratings: 5



ID: 3612322
Created: 3:57pm, 04 Dec 2018
When representing a graph with a very large number of nodes, is it more efficient to use a adjacency matrix oradjacency list?
a) adjacency matrix
*b) adjacency list
Explanation: Imagine a large number of nodes which may have any number of relationships with each other, a matrix requires n2 array entries, while an adjacency list contains n + ai, where i is the index of the node, and ai is the number of edges coming from that node.
Tags: Graphs
Author: awh28 (awh28 - permission to this course revoked)
Avg Rating: 2.7900
Avg Difficulty: 0.5714
Total ratings: 14
==> Comment 1: https://moodle.bath.ac.uk/pluginfile.php/1145721/mod_resource/content/2/DA-Lecture17-Graphs1.pdfslide 17 clearly shows an example with a large number of nodes where it is better to use an adjacency matrix. (by: callumbateson [cb2063])



ID: 3609173
Created: 3:53pm, 04 Dec 2018
Jamal is designing software for sorting arrays of numbers of varying sizes. He wants to know which sorting algorithm he should use, based on the algorithm's average time complexity.Sarah thinks that Quicksort will be the best algorithm, however Albert thinks Selection-Sort would be faster. Who is correct?
*a) Sarah is correct, i.e. Quicksort has a better average time complexity.
b) Albert is correct, i.e. Selection-Sort has a better average time complexity.
c) They are both correct, i.e. both algorithms have the same average time complexity.
Explanation: Selection-Sort has an average time complexity of O(n2), but Quicksort has an average run time complexity of O(n log n).
Tags: Sorting, Complexity
Author: ajb258 (ajb258 - permission to this course revoked)
Avg Rating: 3.5400
Avg Difficulty: 0.3846
Total ratings: 13



ID: 3609160
Created: 3:48pm, 04 Dec 2018
Which of these statements about an undirected graph is true?
a) Undirected graphs' edges can be followed in only one direction
b) The adjacency matrix of an undirected graph is diagonally asymmetrical
*c) Undirected graphs' edges can be followed in either direction
Explanation: Lecture slides 'graphs 1'Undirected graphs edges are bi-directional
Tags: Graphs
Author: awh28 (awh28 - permission to this course revoked)
Avg Rating: 3.1800
Avg Difficulty: 0.5294
Total ratings: 17



ID: 3609084
Created: 3:09pm, 04 Dec 2018
If g(n) = O(f1(n)) & h(n) = O(f2(n)) then g(n) + h(n) =O(f1(n)) + O(f2(n))
a) TRUE
*b) FALSE
Explanation: g(n) + h(n) = O(Max{f1(n), f2(n)})
Tags: Complexity
Author: gtr25 (gtr25 - permission to this course revoked)
Avg Rating: 3.6800
Avg Difficulty: 0.5789
Total ratings: 19



ID: 3609186
Created: 3:04pm, 04 Dec 2018
What is the worst case time complexity of insertion sort?
a)
b)
*c)
d)
e)
Explanation: Best case of insertion sort, when an array is nearly ordered, is , but in all other cases it is .
Tags: Sorting, Complexity
Author: sc2418 (sc2418 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.2941
Total ratings: 17



ID: 3609050
Created: 2:57pm, 04 Dec 2018
Which list of numbers would the quicksort algorithm take the longest to sort into ascending order?
a) (18, 2, 7, 23, 50, 12, 5, 16, 2, 10)
b) (1, 0, 1, 0, 1, 0, 1, 0, 1, 0)
*c) (2, 2, 2, 2, 2, 2, 2, 2, 2, 2)
Explanation: In this list, all elements are the same so the list is already sorted. This is the worst case for quicksort giving it a time complexity of O(n^2).
Tags: Sorting
Author: gtr25 (gtr25 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3609028
Created: 2:47pm, 04 Dec 2018
What is the time complexity of searching an AVL tree?
*a) O(log n)
b) O(n)
c) 0(n log n)
d) None of the above
Explanation: The number of nodes left to search is halved after each element is traversed.
Tags: Search, Trees
Author: gtr25 (gtr25 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.2667
Total ratings: 15



ID: 3608991
Created: 2:31pm, 04 Dec 2018
Given the following directed graph:what is the corresponding adjacency matrix?
*a)
b)
c)
d)
Explanation: As this is a directed graph, for every edge from i to j, [i][j] in the matrix is filled.
Tags: Graphs
Author: sc2418 (sc2418 - permission to this course revoked)
Avg Rating: 4.2900
Avg Difficulty: 0.2500
Total ratings: 28
==> Comment 1: Nice drawings! (by: nlc29 [nlc29])



ID: 3608937
Created: 2:08pm, 04 Dec 2018
What is the main benefit of using a linked list over another data structure like an array list?
a) Faster for sorting
b) Memory efficient
*c) fast insertion and removal
d) faster lookups
Augmented explanation 1: Inserting data into a linked list only requires updating the pointer of one or two other nodes, whereas other data structures require shifting lots of data. the same goes for removal (by: dtfl20 [dtfl20])
Author: dtfl20 (dtfl20 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.6667
Total ratings: 15
==> Comment 1: It is also memory efficient (by: nmparrott [nmp31])



ID: 3608933
Created: 2:04pm, 04 Dec 2018
Which Representation of a graph should you use for a dense graph?
a) AnAdjacency list
*b) An Adjacency matrix
Explanation: A graph that has many edges between the vertices is called a �dense graph�.You should use anAdjacency matrix if you have lots of edges between vertices
Tags: Graphs
Author: guy (grmb20 - permission to this course revoked)
Avg Rating: 4.1700
Avg Difficulty: 0.3478
Total ratings: 23



ID: 3608928
Created: 2:02pm, 04 Dec 2018
What does it mean for a Binary Tree to be 'perfectly balanced'?
a) For each node, the number of nodes in its left and right subtrees are equal.
*b) For each node, the number of nodes in its left and right subtrees differ by at most one.
c) For each node, the values stored in the nodes of its left and right subtrees are the same.
d) The height of the binary tree is less than 7.
e) There are no leaf nodes in the binary tree.
Explanation: "A binary tree is �perfectly balanced� if for each node, the number of nodes in its left and right subtrees differ by at most one." - Lecture 14 slides.
Tags: Trees
Author: ajb258 (ajb258 - permission to this course revoked)
Avg Rating: 3.4200
Avg Difficulty: 0.4167
Total ratings: 12



ID: 3608913
Created: 1:54pm, 04 Dec 2018
What is the 'Big-Oh' time complexity of traversing a binary tree?
a) O(n log n)
b) O(n2)
c) O(log n)
*d) O(n)
e) O(1)
Explanation: When traversing a binary tree, each node is visitedexactly once. Therefore, for a binary tree withnnodes, the 'Big-Oh' time complexity isO(n).
Tags: Trees, Complexity
Author: ajb258 (ajb258 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5000
Total ratings: 10



ID: 3608903
Created: 1:49pm, 04 Dec 2018
Which Binary Tree traversal method uses the following algorithm?Process the current nodeProcess the nodes in the left subtreeProcess the nodes in the right subtree
a) Post-order
*b) Pre-order
c) In-order
d) Level-order
Explanation: This is the algorithm for the pre-order method.For post-order:Process the nodes in the left subtreeProcess the nodes in the right subtreeProcess the current nodeFor in-order:Process the nodes in the left subtreeProcess the current nodeProcess the nodes in the right subtreeFor level-order:Use a temp pointer variable and a queue of node pointersInsert the root node pointer into the queueWhile the queue isnot empty:Dequeue the top node pointer and store it intempProcess the nodeAdd the node's children to the queueif they arenotNULL
Tags: Trees
Author: ajb258 (ajb258 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.3077
Total ratings: 13



ID: 3608883
Created: 1:35pm, 04 Dec 2018
What is the time complexity of this function?int bigSnack(int n) { int hi = 0; for (int x=0;x<n;x++) { for (int b=0;b<n;b++) { hi = hi + 5; } }return hi;}
*a) O(n^2)
b) O(log n)
c) O(n)
d) O(1)
Explanation: each loop is run n times, so O(log n)
Augmented explanation 1: Looking at the code, we have a loop (that runs n times) with an inner loop (that also runs n times). Counting the elementary operations, we get f(n) = 1 + n*(n*(2)) + 3 = 2n2+ 4.And so, the time complexity in O(n2). (by: rvs27 [rvs27])
Author: dtfl20 (dtfl20 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.5833
Total ratings: 12
==> Comment 1: Your explanation is off (by: nmparrott [nmp31])



ID: 3608868
Created: 1:26pm, 04 Dec 2018
Which of these sorts has the average time complexity of T(n log(n))
*a) Merge Sort
b) Insertion Sort
c) Selection Sort
d) Bubble Sort
e) None of the Above
Explanation: Merge sort has average time complexity of T(n log(n)) whereas each of the others have the time complexity ofT(n^2).
Author: dtfl20 (dtfl20 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3608849
Created: 1:18pm, 04 Dec 2018
Given the following tree: 13 / \ 10 16 / \ / \ 7 11 15 24what is the order of traversal when doing a pre-order traversal?
a) 13, 10, 16, 7, 11, 15, 24
b) 7, 10, 11, 13, 15, 16, 24
*c) 13, 10, 7, 11, 16, 15, 24
d) 7, 11, 10, 15, 24, 16, 13
Explanation: A is a level-order traversal. B is an in-order traversal. C is a pre-order traversal. D is a post-order traversal.
Tags: Trees
Author: sc2418 (sc2418 - permission to this course revoked)
Avg Rating: 3.9000
Avg Difficulty: 0.6500
Total ratings: 20



ID: 3608848
Created: 1:17pm, 04 Dec 2018
What is the big theta notation for this code:for(int i = 0; i < (1000n + 5)n; i++) { for(int j = 0; j < n2+ 7n + 2; j++ ) { acc ++; }}for(int k = 0; k < n3 + n2; k++) { sum++;}
a) ?(n3)
b) ?(n5)
*c) ?(n4)
d) ?(n2)
Explanation: Two for loops nested within each other means that the conditions are added together so n2+ n2 is n4 .
Tags: Complexity
Author: alexg (ag2224 - permission to this course revoked)
Avg Rating: 4.3200
Avg Difficulty: 1.0909
Total ratings: 22



ID: 3608785
Created: 12:53pm, 04 Dec 2018
Which data structure has the fastest average insertion time?
*a) Linked List
b) Skip List
c) Array
Explanation: Insertion into a Linked List has constant runtime, O(1)Insertion into a Skip List has logarithmic runtime, O(log(n))Insertion into an Array has linear runtime, O(n)See:bigocheatsheet.com
Tags: ADTs, Lists, Complexity
Author: hpa22 (hpa22 - permission to this course revoked)
Avg Rating: 2.8100
Avg Difficulty: 0.5238
Total ratings: 21
==> Comment 1: It really all depends on where you're inserting the new element, but if we take average to mean inserting in the middle, we would get:Linked List: O(n) (provided that we aren't given a reference, in which case it would be O(1).)Skip List: O(log(n)) (again provided we don't have a reference.)Array: O(n)So Skip List is fastest. (by: nmparrott [nmp31])



ID: 3608766
Created: 12:46pm, 04 Dec 2018
Given the matrix:0 1 0 00 0 1 00 0 0 10 0 0 0Which matrix is this the output dictating nodes which are three edges apart?
a) 0 1 0 00 0 1 00 0 0 10 0 0 0
b) 0 0 1 00 0 0 10 0 0 00 0 0 0
*c) 0 0 0 10 0 0 00 0 0 00 0 0 0
d) 1 0 0 00 1 0 00 0 1 00 0 0 1
e) 1 0 0 00 0 0 00 0 0 00 0 0 0
Explanation: If you times the original matrix by itself three times, you get that answer.
Tags: Graphs
Author: alexg (ag2224 - permission to this course revoked)
Avg Rating: 4.3500
Avg Difficulty: 0.8077
Total ratings: 26



ID: 3608754
Created: 12:44pm, 04 Dec 2018
What additional property must an AVL tree have over a generic Binary Search Tree?
a) The values of the children of any node differ by at most 1
b) The balance of the children of any node differ by at most 1
*c) The height of the left and right sub-trees of any node differ by at most 1
d) The root node must contain the maximum value
e) The height of the left sub-tree must be less than or equal to the height of the right sub-tree
Explanation: An AVL tree is a BST in which the heights of the left and right sub-trees of each node differ at most by 1See: D&A-Lecture15-Trees3.pptx (slide 5)
Tags: Trees
Author: hpa22 (hpa22 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.3810
Total ratings: 21



ID: 3608621
Created: 11:52am, 04 Dec 2018
What type of traversal is Left-Right-Visit?
a) Pre-Order
b) In-Order
*c) Post-Order
Explanation: Pre-Order is VLRIn-Order is LVRthat leads to Post-Order being LRV.Post-Order useful for deleting the tree and Reverse Polish Notation
Tags: Trees
Author: aa2738 (aa2738 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3608502
Created: 10:42am, 04 Dec 2018
Why is it not recommended to use a 'closed hashtable with linear probing' if you want to remove items?
a) Removing items is too inefficient and costly.
*b) If the item we remove has the same hash value coming after it in the hashtable, then if and when we next search for this item we will not find it.
c) The entire ordering of the hashtable will be affected, meaning we will not be able to search for anything.
Explanation: Searching for a value in a closed linear hashtable involves:Computing a target bucket number with the hash function. Then looking in that bucket for our value. If we've found it we're done, if not we probe linearly down the array until we either find the value or hit an empty bucket. If we hit an empty bucket then the value is not there.Therefore,in the case where an item has an item with the same hash value coming after it, if we search for the item with the same hash value we have removed the search will prematurely abort when it reaches the empty bucket we have left in the removal.There are methods that exist to get around this issue, however they are not recommended.
Tags: Hashtables
Author: rm896 (rm896 - permission to this course revoked)
Avg Rating: 3.3600
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3608500
Created: 10:42am, 04 Dec 2018
Which of the following ADTs is the best way to store data for a social network like Facebook?
a) B- Trees.
b) Hashtables.
c) Undirected graphs with an adjacency matrix.
*d) Undirected graphs with an adjacency list.
Explanation: Undirected graphs are best because it is easy to visualise relationships between vertices thanks to edges. An adjacency list is the better option because of memory efficiency and the ease of adding new vertices.
Tags: Lists, Applications, Graphs, Hashtables
Author: marcfouad (mf656 - permission to this course revoked)
Avg Rating: 4.0700
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3608496
Created: 10:35am, 04 Dec 2018
Which type(s) of sorting use recursion?i. Mergesort.ii. Quicksort.iii. Heapsort.
a) i only.
b) ii only.
*c) i and ii.
d) All of the above.
e) None of the above.
Explanation: Only mergesort and quicksort use recursion in the given options.
Tags: Sorting
Author: marcfouad (mf656 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 1.0000
Total ratings: 15



ID: 3608485
Created: 10:30am, 04 Dec 2018
An algorithm has runtime complexity T(n) = 4n2+16n+4. Which of the following answers describes the asymptotic time complexity of the algorithm?
a) O(4n2+16n)
b) O(4n2)
*c) O(n2)
d) 4 * O(n2+4n+1)
Explanation: We ignore all constants and only consider the highest power when trying to find the asymptotic time complexity of an algorithm.
Tags: Complexity
Author: marcfouad (mf656 - permission to this course revoked)
Avg Rating: 3.0800
Avg Difficulty: 0.1667
Total ratings: 12



ID: 3607772
Created: 1:03am, 04 Dec 2018
Consider two hash tables: a closed hash table with 750 buckets, 235 of which are empty; and an open hash table with 500 buckets and 275 keys inserted. What is the ratio of the average number of steps it will take to insert/find an item in the open hash table with respect to the closed hash table?
*a) 0.603
b) 1.657
c) 0.961
d) 1.041
e) 0.215
Explanation: Start off by calculating the load factors of both hash tables, which is given by the formula L=(max # of keys to insert)/(total buckets in the array). So for closed hash table: L=(750-235)/750 =~0.69. For open hash table: L=275/500=~0.55. Now, the average number of steps to insert/find an item in closed hash table is given by #=0.5*[1+1/(1-L)], so that #=0.5*[1+1/(1-0.69)]=~2.113. For an open hash table, the average number of steps is simply given by A#=1+0.5*L, then A#=1+0.5*0.55=~1.275. Now, the ratio is #(open hash table)/#(closed hash table)=1.275/2.113=~0.603.
Tags: Hashtables
Author: ksr29@bath.ac.uk (ksr29 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 1.2667
Total ratings: 15
==> Comment 1: Well, I calculated 0.608 since I keep fractional number (25500/9259) until the end and transform it as decimal number. (by: samz285 [gz285])



ID: 3607712
Created: 12:26am, 04 Dec 2018
Given the following array of a maxheap: [42,37,24,18,21,23,12,17,10,13,6,8]; what is the value of the right child of the right child of the node with value 37?
a) 8
b) 10
c) 13
*d) 6
e) None of the above.
Explanation: The formula for calculating the slot of the right child node is given by: rightChild(i)=2*i+2, where i is the index of the parent array. Therefore, the node with value 37 is located at index 1, then its right child is located at slot 2*1+2=4, which corresponds to 21. The right child of the node 21 is similarly found at 2*4+2=10, which corresponds to the node with value of 6.
Tags: Sorting, Trees
Author: ksr29@bath.ac.uk (ksr29 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 1.0000
Total ratings: 11



ID: 3607709
Created: 12:24am, 04 Dec 2018
Which statement about Tree nodes is false.
a) A node with 0 children is called a �leaf� node.
b) Every tree has a "root" pointer, that points to the "root" node.
c) Every node may have zero or more �children� nodes.
*d) A tree node can have one or more next pointers.
e) The top node of a tree is called its "root" node.
Explanation: The tree node can't have one next pointer, as it needs to be able to point to at least both it's right and left child.
Tags: Trees
Author: jf809 (jf809 - permission to this course revoked)
Avg Rating: 3.1500
Avg Difficulty: 0.6154
Total ratings: 13
==> Comment 1: Depends on the tree (by: nmparrott [nmp31])



ID: 3607680
Created: 12:09am, 04 Dec 2018
What does a load factor of 0.9 mean?
*a) Your array has 10% more buckets than you need (you�ll fill 90% of the buckets).
b) Your array has 90% more buckets than you need (you�ll fill 10% of the buckets).
c) Your array has 10% less buckets than you need (you�ll fill 90% of the buckets).
d) Your array has 90% less buckets than you need (you�ll fill 10% of the buckets).
e) Your array has 90% more buckets than you need (you�ll fill 90% of the buckets).
Explanation: The �load� of a hash table is the maximum number of values (�keys�) you intend to add divided by number of buckets in the array.In simpler terms, when L = 0.9, your array is 10% bigger than required.
Tags: Hashtables
Author: jf809 (jf809 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.7500
Total ratings: 16



ID: 3607626
Created: 11:41pm, 03 Dec 2018
Out of the input arrays below, which one would make the sorting algorithm, Quick Sort, most efficient.The numbers must be ordered from smallest to largest.
a) [1,2,3,4,5,6]
b) [1,2,3,2,2,2]
c) [1,2,4,3,5,6]
*d) [5,2,3,1,6,4]
e) [6,5,4,3,2,1]
Explanation: The run time for Quick Sort is ?(n^2) for already/mostly/reverse ordered arrays or arrays with the same value repeated many times.Quick Sort is most efficient when the array is not at all ordered, where its run time isnlog2(n).
Tags: Sorting
Author: jf809 (jf809 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6154
Total ratings: 13



ID: 3619410
Created: 8:49pm, 03 Dec 2018
Which of the following functions has the greatest asymptotic growth? I.e. which function is the least efficient one in terms of time! (Think of O-Notation!)
a)
b)
*c)
d)
Explanation: It is easy to see that is just a constant times n, i.e. linear growth. which is inNow differ between
Tags: Complexity
Author: nathalie (nl586 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.8000
Total ratings: 20



ID: 3607257
Created: 8:24pm, 03 Dec 2018
Is the following statement TRUE or FALSE?Quicksort is always faster than insertion sort.
a) TRUE
*b) FALSE
Explanation: If the array is sorted in ascending order, selection sort requires comparisons but quicksort requires comparisons.
Tags: Sorting
Author: nathalie (nl586 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.3750
Total ratings: 16



ID: 3607179
Created: 7:51pm, 03 Dec 2018
Which of the following trees is a AVL Tree?
a) Tree A
*b) Tree B
c) Tree C
Explanation: A is unbalanced i.e. not AVL TreeB is a BST and balanced C is balanced but not a BST i.e. not AVL Tree
Tags: Trees
Author: nathalie (nl586 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.5714
Total ratings: 21



ID: 3607137
Created: 7:35pm, 03 Dec 2018
What is the definition of the "load" of a hash table?
*a) Maximum number of values you intend to add divided bynumber of buckets in the array
b) Total number of buckets in the array
c) Maximum number of values you intend to add multiplied by number of buckets in the array
d) Maximum number of values you intend to add
e) None of the above
Explanation: A -Maximum number of values you intend to add divided by number of buckets in the array.(Lecture slides)
Tags: Hashtables
Author: jackwatson (jw2782 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.2500
Total ratings: 16



ID: 3607051
Created: 7:04pm, 03 Dec 2018
Using the breadth-first graph traversal algorithm, what would the order of nodes processed be?
*a) 1 - 2 - 3 - 4 - 5 - 8 - 9 - 6 - 7 - 10 - 11
b) 1 - 2 - 5 - 6 - 7 - 11 - 3 - 8 - 10 - 4 - 9
c) 1 - 2 - 5 - 7 - 11 - 6 - 3 - 8 - 10 - 4 -9
d) 1 - 2 - 3 - 4 - 9 - 8 - 10 - 5 - 7 - 6 - 11
Explanation:
Tags: Graphs
Author: cdm57 (cdm57 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.4286
Total ratings: 14



ID: 3606956
Created: 6:32pm, 03 Dec 2018
What would this AVLTree look like after the following have been inserted and balancing has been performed?Insert from left to right:(45, 37, 48, 51)
*a)
b)
c)
Explanation: Inserting 45:45 < 50 (left), 45 > 27 (right), 45 > 30 (right)30 ---> 45 (right subtree of 30)Inserting 37:37 < 50 (left), 37 > 30 (right) 30 is now unbalanced by 2 nodes in its right sub-tree (37, 45).37 replaces 30 and 30 is now in its left sub-tree and 45 is in the right sub-tree.Inserting 48:48 < 50 (left), 48 > 27 (right), 48 > 37 (right), 48 > 45 (right)27 tree is now unbalanced by 3 nodes in its right tree (37, 45, 48).37 replaces 27 and standard balancing occurs.Inserting 51:51 > 50 (right), 50 < 89 (left), 50 < 81(left)81 ---> 51 (left subtree of 81)More information on how AVLTrees work:-https://www.geeksforgeeks.org/avl-tree-set-1-insertion/
Tags: Trees
Author: ja795@bath.ac.uk (ja795 - permission to this course revoked)
Avg Rating: 4.2900
Avg Difficulty: 1.1429
Total ratings: 14



ID: 3606906
Created: 6:10pm, 03 Dec 2018
which of the adjacency matricesrepresent the following code:// undirected graphboolean[][] graph = new boolean[6][6]graph[3][0] = true;graph[2][1] = true;graph[4][1] = true;graph[5][2] = true;graph[0][3] = true;graph[0][5] = true;
a) 0 1 2 3 4 50 _ _ _ T _ _1 _ _ T _ T _2 _ _ _ _ _ T3 T _ _ _ _ _4 _ _ _ _ _ _5 T _ _ _ _ _
*b) 0 1 2 3 4 50 _ _ _ T _ T1 _ _ _ _ _ _2 _ T _ _ _ _3 T _ _ _ _ _4 _ T _ _ _ _5 _ _ T _ _ _
c) 0 1 2 3 4 50 _ _ _ T _ _1 _ _ _ _ _ _2 _ T _ _ _ T3 T _ _ _ _ _4 _ T _ _ _ _5 T _ _ _ _ _
d) 0 1 2 3 4 50 _ _ _ T _ T1 _ _ _ _ T _2 _ T _ _ _ _3 T _ _ _ _ _4 _ _ _ _ _ _5 _ _ T _ _ _
e) None of the above.
Explanation: can be found on Lecture 17 - Graphs 1 - Page 8"array[i][j] == true representsdirected edge from i to j."where i is the columnand j is the rowgraph[0][5] = true;corresponds to the top right position in the matrix
Augmented explanation 1: **CORRECTED EXPLANATION**can be found on Lecture 17 - Graphs 1 - Page 8"array[i][j] == true represents directed edge from i to j."where i is the row and j is the columngraph[0][5] = true; corresponds to the top right position in the matrix (by: aro31 [aro31])
Tags: Graphs
Author: aro31 (aro31 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.6471
Total ratings: 17
==> Comment 1: I agree with the answer but not your explanation. If i is the column and j is the row, wouldn't (A) be the correct answer? (by: nmparrott [nmp31])
====> Reply 1: true, corrected thanks



ID: 3606860
Created: 5:59pm, 03 Dec 2018
In time complexity O(log n), by what factor does T increase when n is doubled?
a) Log-1(n).
b) 4.
*c) Constant.
d) 1.
Explanation: In logarithmic complexity, the doubling of n increases T by a constant factor k.
Tags: Complexity
Author: davidmelling (dm819 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 0.6000
Total ratings: 15



ID: 3606842
Created: 5:53pm, 03 Dec 2018
Given the array representing a max heap [30,25,28,7,19,12,22], which index is the parent of 12
a) 0
b) 1
*c) 2
d) 3
e) 4
Explanation: parent = (child - 1) / 2 index, so in this case parent = (5 - 1) / 2 = 2. The second index which is the value 28.
Tags: Trees
Author: alexg (ag2224 - permission to this course revoked)
Avg Rating: 4.1900
Avg Difficulty: 0.9615
Total ratings: 26



ID: 3606713
Created: 5:05pm, 03 Dec 2018
Which sorting algorithm (from lectures) is best to use?
a) Selection Sort
b) Insertion Sort
c) Quick Sort
d) Merge Sort
*e) Depends on the situation
Explanation: Quick Sort has an average run time T(nlog(n))and Merge Sort is alwaysT(nlog(n)), however Merge Sort requires extra RAM and Insertion Sort can beT(n) for already or nearly-ordered arrays; hence the fastest sorting algorithm depends on the situation (how large the array is or if it is nearly ordered...)
Tags: Sorting
Author: jackwatson (jw2782 - permission to this course revoked)
Avg Rating: 2.5700
Avg Difficulty: 0.2857
Total ratings: 14



ID: 3606704
Created: 5:02pm, 03 Dec 2018
Which tree traversal algorithm is described by the following?Visit each level's nodes from left to right before visiting nodes in the next level.
a) Post-Order
b) Pre-Order
c) In-Order
*d) Level-Order
e) None of the above
Explanation: Given in Lecture 13.
Tags: Trees
Author: kaiempage (cp693 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.1333
Total ratings: 15



ID: 3606690
Created: 4:59pm, 03 Dec 2018
Which of these operations is a real operation that can be performed on a binary tree?
*a) Pruning.
b) Panning.
c) Grating.
Explanation: Pruning is the removing of a whole section of the binary tree.
Tags: Trees
Author: davidmelling (dm819 - permission to this course revoked)
Avg Rating: 3.2700
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3606674
Created: 4:57pm, 03 Dec 2018
Which of the following sorts are stable?
a) Quicksort
b) Selection Sort
*c) Insertion Sort
d) Shell Sort
e) None of the above
Explanation: Covered in lectures 10 & 11.
Tags: Sorting
Author: kaiempage (cp693 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.4118
Total ratings: 17



ID: 3606768
Created: 4:55pm, 03 Dec 2018
In graph theory, the handshaking lemma states that "In any finite undirected graph, the number of vertices with odd degree is even".The lemma is a consequence of thedegree sum formula: for a graph with vertex set and edge set .Work out the sum of degrees of the vertices for the following undirected graph:
a) 20
b) 24
*c) 26
d) 10
e) 13
Explanation: EXPECTED METHOD:If we follow thedegree sum formula = number of edges = 13 = 26ALTERNATIVE METHOD:Degree of each node:A = 3 B = 3 C = 1 D = 3 E = 5 F = 1 G =3 H = 1 I = 5 J = 1Sum of degrees:3 + 3 + 1 + 3 + 5 + 1 + 3 + 1 + 5 + 1= 26 = 26More information found here:- https://en.wikipedia.org/wiki/Degree_(graph_theory)-https://en.wikipedia.org/wiki/Handshaking_lemma
Tags: ADTs, Graphs
Author: ja795@bath.ac.uk (ja795 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.7222
Total ratings: 18
==> Comment 1: Is this even covered in the syllabus for this course? (by: mcb68 [mcb68])



ID: 3606643
Created: 4:52pm, 03 Dec 2018
In an open Hashtable, we want to store 2000 elements and be able to find any in around 1.40 steps. How many buckets should our Hashtable have?
a) 4000
*b) 2500
c) 2000
d) 5600
e) None of the above
Explanation: Using the following formula for an open Hashtable:ave. number of steps = 1 + L/2,we find L = 0.8.Then using the formula for the load L:0.8 = max. number of elements to insert / total buckets,we get 0.8 = 2000 / total buckets, and thus total buckets = 2500.
Tags: Hashtables
Author: kaiempage (cp693 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6923
Total ratings: 13



ID: 3606607
Created: 4:46pm, 03 Dec 2018
What is the asymptotic memory usage of an adjacency list?
a)
b)
c)
d)
*e)
Explanation: As there is a linked list for each vertex - so , and that linked list contains all the edges for that vertex - so .
Tags: ADTs, Lists, Graphs
Author: hmg33 (hmg33 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.9474
Total ratings: 19



ID: 3606570
Created: 4:40pm, 03 Dec 2018
What happens if you multiply an adjacency matrix by itself?
a) Nothing
*b) The result now represents vertices that are two edges apart
c) The result now represents vertices that are three edges apart
d) It reverses the direction of edges in the graph
Explanation: If you multiply an adjacency matrix by itself, the result shows vertices that are two edges apart. If you then mulitply this result by the original adjacency matrix again, that result will then show vertices that are three edges apart, and so on.
Tags: ADTs, Graphs
Author: hmg33 (hmg33 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 0.4167
Total ratings: 24



ID: 3606569
Created: 4:39pm, 03 Dec 2018
What is the average time complexity of Interpolation Search, an improved Binary Search algorithm, on a sorted array of N uniformly distributed elements?
a) ?(N)
b) ?(log(N))
c) ?(vN)
*d) ?(log(log(N)))
e) ?(N^1.25)
Explanation: Given in lecture 2.
Tags: Search, Complexity
Author: kaiempage (cp693 - permission to this course revoked)
Avg Rating: 3.4300
Avg Difficulty: 0.9286
Total ratings: 14



ID: 3606545
Created: 4:33pm, 03 Dec 2018
Which of the following can you NOT use to represent a directed graph?
a) A diagram with circles representing vertices, and lines connecting these circles, representing edges.
b) A two-dimensional array, with the vertices represented by the indices of array, and edges represented by the values in the cells of the array
*c) A stack, where each vertex is pushed to the stack and edges are represented by the order that the vertices are pushed to the stack.
d) An array of linked lists, where there is a linked list for every vertex, and the linked list represents the edges of that particular vertex.
Explanation: A stack can be used in the implementation of traversing a graph, but not for representing the graph.
Tags: ADTs, Graphs
Author: hmg33 (hmg33 - permission to this course revoked)
Avg Rating: 3.6500
Avg Difficulty: 0.9565
Total ratings: 23



ID: 3606422
Created: 3:54pm, 03 Dec 2018
What is the time complexity of insertion and look up when using hash tables?
*a) constant
b) n
c) nlogn
d) n^2
Explanation: It is constant
Tags: Complexity, Hashtables
Author: bu220 (bu220)
Avg Rating: 2.6400
Avg Difficulty: 0.4286
Total ratings: 14
==> Comment 1: This depends on the load factor and the type of hashing used (closed/open). Usually its constant, but if the load factor gets high then it becomes O(n). (by: muccy [jcm51])
==> Comment 2: The average steps is 1/2*(1+1/(1-L)), which is actually 1/2*(1+n) for bucket, n. (by: samz285 [gz285])



ID: 3606411
Created: 3:51pm, 03 Dec 2018
What makes a sorting algorithm 'stable'?
a) The algorithm ensures that the sorted order is from small to large.
b) The algorithm sorts in a complexity of log(N).
c) The algorithm maintains the order of all items as they were originally entered.
*d) The algorithm keeps the entered order of items of equal value.
e) The algorithm uses the same number of iterations for each sort.
Explanation: The algorithm is called a stable algorithm if the original order of equal value items is maintained rather than any additional sorting being performed. This is helpful when order of item entry is relevant to the task.
Tags: Sorting
Author: davidmelling (dm819 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3606387
Created: 3:37pm, 03 Dec 2018
What is the main condition of a mixed graph (ADT) in terms ofn and m?n = number of directed edgesm = number of undirected edges
a)
*b)
c)
d)
e)
Explanation: A mixed graph consists of a set of vertices (or nodes) V, a set of undirected edges, and a set of directed edges.Hence for a mixed graph to exist, the number of directed and undirected edges does not matter as long as .Example:More information found here:https://en.wikipedia.org/wiki/Mixed_graph
Tags: ADTs, Graphs
Author: ja795@bath.ac.uk (ja795 - permission to this course revoked)
Avg Rating: 3.1600
Avg Difficulty: 0.8947
Total ratings: 19
==> Comment 1: Is this part of the course? seems unrelated to me (by: muccy [jcm51])
====> Reply 1: Part of graph theory which we are currently being taught so depending on whether it is covered yet, time will have to tell.If it's not covered I will edit the question title to " *not in spec*�".



ID: 3606386
Created: 3:37pm, 03 Dec 2018
Consider the following statements about lists. Which, or all are true?
a) If a list is based on an array, access to the i'th element of the list has run timeT(1)
b) In a linked list of n elements, searching for an element has order O(n)
c) In a skip list, the worst case run time for a search is O(n)
d) In searching the below skip list for the integer 10, only nodes 1, 4, 6, 9 and 10 (in that order) will be visited.
*e) All of the above
Explanation: A) Run time of accessing a specific element in an array is always of order 1.B) At most n elements have to be searched through in a linked list. Hence a run time of order n.C) The worst case is the higher lanes cannot be used or are not there, so has the same run time as an ordinary linked list.D) Start in the highest lane. The next node is null, so move down 1 lane. The next node (4) is less than 10 so move to the next node (6). The next pointer is null, so drop down a level. Next pointer on this level is 9 (<10) so we move here. Next is null, so drop down a level (now at the lowest). Finally, the next node is 10, which is what we are looking for.E) All true as above, so E is the correct answer
Tags: Lists, Search, Complexity
Author: sj623 (sj623 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.8125
Total ratings: 16
==> Comment 1: I found option A a little confusing (by: muccy [jcm51])
====> Reply 1: Imagine a list but instead of having reference nodes, it's just values in array. So searching for the ith element, it would just be in position I in the array.



ID: 3606362
Created: 3:30pm, 03 Dec 2018
What is the formula for the average number of steps needed to find an item in a closed hash table of size N given the load factor L, 0 <= L <=1.0 ?
a) 1+ (L^2/N)
b) 1/2(1+N/(1-L))
c) 1/(1-L)
d) 1/3(1 + 1/(1-L) + N)
*e) 1/2 (1+1/(1-L))
Explanation: To find the average number of steps, add together the minimum number of steps to find bucket which is always 1 and then add the max steps to find the bucket, which is 1/(1-L) then divide by 2 so we get 1/2 (1 + 1/(1-L))
Tags: Hashtables
Author: muccy (jcm51 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.7273
Total ratings: 11



ID: 3606329
Created: 3:19pm, 03 Dec 2018
How will the list 9, 4, 7, 5, 8, 6, 1, 2 look after the first pass of 3-sort (shellsort h=3) and after all passes are complete.
a) First Pass: 5, 4, 6, 9, 8, 7, 1, 2Complete:1, 2, 6, 5, 4, 7, 9, 8
b) First Pass: 5, 4, 6, 9, 8, 7, 1, 2Complete: 5, 4, 6, 1, 2, 7, 9, 8
*c) First Pass: 5, 4, 6, 1, 2, 7, 9, 8Complete: 1, 2, 6, 5, 4, 7, 9, 8
d) First Pass: 5, 4, 6, 1, 2, 7, 9, 8Complete: 1, 2, 4, 5, 6, 7, 8, 9
e) First Pass: 9, 4, 1, 2, 8, 6, 7, 5Complete:9, 4, 1, 2, 8, 6, 7, 5
Explanation: H-sort algorithm:Pick a value of h (for example = 3)For each element in the array if A[i] and A[i+h] are out of order then swap.So for9, 4, 7, 5, 8, 6, 1, 2Consider 9 and 5 (which is 3 places along from 5), they are out of place so swap5, 4, 7, 9, 8, 6, 1, 2Consider 4 and 8 - in order so dont swapConsider 7 and 6 - out of order so swap5, 4, 6, 9, 8, 7, 1, 2Consider 9 and 1 - out of order so swap5, 4, 6, 1, 8, 7, 9, 2Consider 8 and 2 - out of order so swap5, 4, 6, 1, 2, 7, 9, 8No more elements to consider so this is the first passSince there were swaps we must repeat againConsider 5 and 1 - out of order so swap1, 4, 6, 5, 2, 7, 9, 8Consider 4 and 2, out of order so swap1, 2, 6, 5, 4, 7, 9, 8Consider 6 and 7 - in order no swapConsider 5 and 9 - in order no swapConsider 4 and 8 - in order no swapSince there was a swap consider from start again1, 2, 6, 5, 4, 7, 9, 8Consider 1 and 5 - in order no swapConsider 2 and 4 - in order no swapConsider 6 and 7 - in order no swapConsider 5 and 9 - in order no swapConsider 4 and 8 - in order no swapComplete so after final pass it is 1, 2, 6, 5, 4, 7, 9, 8
Tags: Sorting
Author: muccy (jcm51 - permission to this course revoked)
Avg Rating: 4.2200
Avg Difficulty: 1.2222
Total ratings: 9



ID: 3606240
Created: 2:49pm, 03 Dec 2018
For the given AVL Tree, if 5 is inserted what rotation will be required to re-balance the tree?
a) Left rotation about node 4.
*b) Right Rotation about node 6, then left rotation about node 4.
c) Left Rotation about node 6, then right rotation about node 4.
d) Right rotation about node 4, then left rotation about node 3.
e) Left rotation about node 3.
Explanation: From the given figure you can see what the tree will look like after inserting 5. 4 is the first node we approach when rebalancing the tree after inserting 5 that has a balance value <=-2 or >= 2. So we have to rotate about 4. As the rightchild of 4 has a balance of -1, this is the case for a double rotation, right rotate the rightchild (node 6), then left rotate on node 4.
Tags: Trees
Author: muccy (jcm51 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3606014
Created: 1:33pm, 03 Dec 2018
If we take an Adjacency Matrix, A, that represents a graph, and multiply it by itself n times, we find out:
a) which edges are n vertices apart
*b) which vertices are n edges apart
c) which vertices are 2^n edges apart
d) which edges are 2^n vertices apart
e) nothing useful
Explanation: From the lecture notes we have:A^2 gives us the number of vertices that are 2 edges awayA^3 gives us the number of vertices that are 3 edges awayGeneralising this gives:A^n gives us the number of vertices that are n edges away
Tags: Graphs
Author: user_anon (zeb23 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.5000
Total ratings: 16



ID: 3606003
Created: 1:29pm, 03 Dec 2018
Which of the following sorting algorithms are stable?
*a) Insertion sort
b) Shell sort
c) Heap Sort
d) Quick sort
e) All of the above
Explanation: Shell, heap and quick sort all involve 'swapping' elements, and so order of equal elements may change during the sorting process.
Tags: Sorting
Author: sj623 (sj623 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4615
Total ratings: 13
==> Comment 1: quick sort is also stable in some implementations. (by: iwonderwhothisislol [eg574])



ID: 3605975
Created: 1:16pm, 03 Dec 2018
In a SkipList of n elements, how many elements are expected in lane 1 and lane 3?
a) n in lane 1, and n/2 in lane 3
b) n/2 in lane 1, and n/8 in lane 3
*c) n in lane 1, and n/4 in lane 3
d) n in lane 1, and n/8 in lane 3
e) n/2 in lane 1, and n/4 in lane 3
Explanation: For each lane in a skip list, the expected number of elements in each lane halves:Lane 1: n (contains all elements)Lane 2: n/2Lane 3: n/4 (n/2 divided by 2)Lane 4: n/8 (n/4 divided by 2)
Tags: Lists
Author: user_anon (zeb23 - permission to this course revoked)
Avg Rating: 2.8700
Avg Difficulty: 0.6000
Total ratings: 15
==> Comment 1: State indexing of lanesState probability of an item being in a lane above it, it's not always 0.5 (by: iwonderwhothisislol [eg574])



ID: 3605946
Created: 1:05pm, 03 Dec 2018
Below is a description of a tree traversal, which type of traversal is it?1. Process the nodes in the left sub-tree.2. Process the nodes in the right sub-tree.3. Process the current node.
a) Pre-Order Traversal
*b) Post-Order Traversal
c) In-Order Traversal
d) Level-Order Traversal
Explanation: [Taken From Lecture Notes]Pre-Order Traversal:1. Process the current node.2. Process the nodes in the left sub-tree.3. Process the nodes in the right sub-tree.Post-Order Traversal:1. Process the nodes in the left sub-tree.2. Process the nodes in the right sub-tree.3. Process the current node.In-Order Traversal:1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub-tree.Level-Order Traversal:1. Use a temp pointer variable and a queue of node pointers.2. Insert the root node pointer into the queue.3. While the queue is not empty:� Dequeue the top node pointer and put it in temp.� Process the node.� Add the node�s children to queue if they are not NULL.
Tags: Trees
Author: user_anon (zeb23 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.5000
Total ratings: 14



ID: 3605916
Created: 12:55pm, 03 Dec 2018
What is an adjacency matrix?
a) An array of elements indicating whether a node is directed
*b) An array of elements indicating whether there is an edge between vertex i and vertex j
c) The matrix used to apply a convolution
d) An array to store the nodes in a depth first traversal
Explanation: Graph lecture
Tags: Graphs
Author: dre31 (dre31 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.3200
Total ratings: 25



ID: 3605908
Created: 12:52pm, 03 Dec 2018
How many of the following sort methods are stable:Selection SortShell SortBubble SortHeap SortMerge Sort
a) 1
*b) 2
c) 3
d) All of them!
e) None of them!
Explanation: From the given sort methods only Bubble sort and Merge sort are stable.
Tags: Sorting
Author: kb744 (kb744 - permission to this course revoked)
Avg Rating: 3.0700
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3605793
Created: 12:06pm, 03 Dec 2018
Which of the following is a valid maxheap? (Assuminglexicographic order)
a)
*b)
c)
d)
e)
Explanation: A) Not correct as Zenith>Moss, and Quazar>MossB) Each node is greater than or equal to it's children and is a complete treeC) Arthur > AaronD) Wilson > JerryE) Not a complete tree. (Level 3 missing the left child of Jerry)
Tags: Trees
Author: sj623 (sj623 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.7500
Total ratings: 12



ID: 3604800
Created: 10:50pm, 02 Dec 2018
Given the elements [14, 18, 3, 2, 1, -1, -4, 5, 20], find the final balanced AVL Tree.
a) 3 2 14 -1 1 5 18-4 20
b) 3 -1 14-4 1 5 18 2 20
c) 5 1 18 -1 2 14 20-4 3
*d) 2 -1 14-4 1 3 18 5 20
e) 14 2 18 -1 3 20-4 1 5
Explanation: Insert 14, 18, 3, 2, 1: 14 3 18 21Rebalance at "3": 14 2 181 3Insert "-1": 14 2 18 1 3-1Rebalance at "14": 2 1 14-1 3 8Insert "-4": 2 1 14 -1 3 18-4Rebalance at "1": 2 -1 14-4 1 3 18Insert "5" & "20": 2 -1 14-4 1 3 18 5 20
Tags: Trees
Author: jma52 (jma52 - permission to this course revoked)
Avg Rating: 4.2100
Avg Difficulty: 1.5000
Total ratings: 24



ID: 3658468
Created: 10:23pm, 02 Dec 2018
Insert the elements -3, -5, -1, 5, 0, 4, into a standard closed hashtable (of size 6) with linear probing (to the right) in that order.The hash function has the form h(x) = ((x+1)2-3) % 6.What does the final hashtable look like?
*a) 4, -3, -5, -1, 5, 0
b) -5, -3, 5, -1, 0, 4
c) 0, -3, -5, 4, -1, 5
d) 4, -3, -5, 5, -1, 0
e) 0, -5, -3, 4, -1, 5
Explanation: h(-3) = 1. Insert into slot 1.h(-5) = 1. Slot 1 is taken so insert into slot 2.h(-1) = 3. Insert into slot 3.h(5) = 3. Slot 3 is taken so insert into slot 4.h(0) = 4. Slot 4 is taken so insert into slot 5.h(4) = 4. Slot 4 is taken and so is slot 5. So insert into slot 0. (Also last free slot).If you chose B then you probed in the wrong direction.
Author: jma52 (jma52 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 1.0667
Total ratings: 15



ID: 3658473
Created: 10:14pm, 02 Dec 2018
The runtime for the following code fragment is?(f(m,n)). What is f(m,n)?int a;for (int i = -5; i < n; i++) for (int j = 1; j < 2i+1; 2*j) for (int k = 1; k < n-1; 3*k) a=a+1; for (int l = 0; l < m; 5*l) a=a+j;return a;
a) ?(m2log(n2))
b) ?(n2log(nm))
c) ?(n log(log(nm)))
*d) ?(nlog(n)log(nm))
e) ?(n2(n+m))
Explanation: First loop has?(n) operations.Second loop has?(n) operations.Third loop has?(log(n)) operations.Fourth loop has?(log(m)) operations.In the second loop we have the sum of the third and fourth loops which have different bases. So we get?(log(n) + log(m)) operations. Bases of logarithms do not matter so we can use logarithmic laws to get?(log(n) + log(m)) =?(log(nm)).Then multiply these loops together to get?(n*log(n)*log(nm)) =?(n log(n) log(nm)).
Tags: Complexity
Author: jma52 (jma52 - permission to this course revoked)
Avg Rating: 3.3600
Avg Difficulty: 1.4103
Total ratings: 39



ID: 3604596
Created: 9:36pm, 02 Dec 2018
How do you extract the biggest item from a Maxheap?
*a) Replace the root with the lowest right node and then swap the moved value with the larger of it�s children until it is the greatest.
b) Replace the root with the lowest left node and then swap the moved value with the larger of it�s children until it is the greatest.
c) Replace the root with the lowest right node.
d) Replace the root with the lowest right node.
Explanation: This ensures the highest value is at the top
Tags: ADTs
Author: ts936 (ts936 - permission to this course revoked)
Avg Rating: 3.2700
Avg Difficulty: 0.6364
Total ratings: 11



ID: 3604599
Created: 9:33pm, 02 Dec 2018
Which value would signify that a re-balance is needed in an AVL tree?
a) 0
b) 1
*c) 2
d) -1
Explanation: Any value greater than 1 or smaller than -1 means that a re-balance is needed.
Tags: Trees
Author: ts936 (ts936 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.0000
Total ratings: 9



ID: 3604572
Created: 9:26pm, 02 Dec 2018
Which is not a form of tree traversal
a) Pre-order
b) Post-order
c) In-order
*d) By-order
e) Level-order traversal
Explanation: By-order is not a traversal method.
Tags: Trees
Author: ts936 (ts936 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.2105
Total ratings: 19



ID: 3604556
Created: 9:20pm, 02 Dec 2018
Which sort uses h-sorting?
a) Merge Sort
*b) Shell Sort
c) Bubble Sort
d) Insertion Sort
e) Quick Sort
Explanation: Shell sort uses h sort multiple times with a range of values, always ending in 1.
Tags: Sorting
Author: ts936 (ts936 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.2667
Total ratings: 15



ID: 3607225
Created: 8:19pm, 02 Dec 2018
See the incomplete java code below for the classes ListNode and LinkedList:class ListNode { Object element; ListNode next; ListNode(Object e, ListNode n) { element = e; next = n; }}class LinkedList { private ListNode head = null; private int n = 0; // n is the list size public Object get(int i) { if (i<0 || i>=n) { // �error! } ListNode node = head; X return node.element; }}The method get finds nodeiin the linked list and outputs its element (get(0) outputs head.element). Which code should go at the place marked X for the method to work correctly?
a) for (int j=0; j<i-1; j++) { node = node.next;}
*b) for (int j=0; j<i; j++) { node = node.next;}
c) for (int j=0; j<i+1; j++) { node = node.next;}
d) for (int j=0; j<i+1; j++) { node.next = node;}
e) for (int j=0; j<i; j++) { node.next = node;}
Explanation: (d) and (e) are wrong because the assignment "node.next = node" is incorrect - this line would repeatedly make the assignment head.next = head.To find node i, the line "node = node.next" needs to be executed itimes. Examples:If i=0, the line "node = node.next" should not be executed because get(0) should outputhead.elementIf i=2, the line "node = node.next" should be executed 2 times so that node=head.next.next, which is node 2 in the listWe are left with (a), (b) and (c).(a) executes the line "node = node.next" (i-1) times(b) executes the line "node = node.next" i times(c) executes the line "node = node.next" (i+1) timesTherefore the answer is (b).
Tags: Lists
Author: jtc38 (jtc38 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.9000
Total ratings: 10



ID: 3609029
Created: 7:58pm, 02 Dec 2018
What type of rotation is needed to balance the following unbalanced AVL tree? 5 / \ 2 7 / \ 1 3 \ 4
a) Right (Clockwise) rotation
b) Left(Anti-Clockwise) rotation
c) Right-Left (Clockwise Anti-Clockwise) rotation
*d) Left-Right (Anti-Clockwise Clockwise) rotation
Explanation: Starting Tree: Left(Anti-clockwise) rotation on the sub-tree root 2: Then a right (clockwise) rotation on the root of the tree: 5 5 3 / \ / \ / \ 2 7 3 7 2 5 / \ / \ / / \ 1 3 2 4 1 4 7 \ / 4 1
Tags: Trees
Author: guy (grmb20 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.8824
Total ratings: 17



ID: 3604237
Created: 7:18pm, 02 Dec 2018
Using selection sort, which of the following permutations of [1,2,3,4,5] takes 5 swaps? (Ascending order)
a) [4,1,2,5,3]
*b) [5,1,2,4,3]
c) [4,5,1,3,2]
d) [5,4,1,2,3]
e) [2,3,4,1,5]
Explanation: [5,1,2,4,3][1,5,2,4,3] (1)[1,2,5,4,3] (2)[1,2,4,5,3] (3)[1,2,3,5,4] (4)[1,2,3,4,5] (5)
Tags: Sorting
Author: km846 (km846 - permission to this course revoked)
Avg Rating: 2.4000
Avg Difficulty: 0.8000
Total ratings: 10
==> Comment 1: A selection sort (in ascending order) will start at the first element, search the rest of the list to find the smallest number and then swap it with the current position. If you only have 5 elements, the maximum number of swaps there will be is 4. None of your answers are correct, but A is the closest (I think) with 4 swaps. (by: nmparrott [nmp31])



ID: 3604145
Created: 6:28pm, 02 Dec 2018
What is the Big-O of the code below for a random value of j?if( j>=0 && j<=5) a+=5;else if( j<0){ for(int i = 0; i<=n; i++){ a+=3; }}else{ for(int i = 0; i<n*n; i++){ a+=8; }}
a) 1
*b) n^2
c) n
d) log(n)
e) 2^n
Explanation: For Big-O we need to look at only the worst case which is the last else for the given code. The complexity then is 4n^2 +2 which means that the Big-O is n^2.
Tags: Complexity
Author: kb744 (kb744 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.5882
Total ratings: 17
==> Comment 1: What does += mean? (by: sj623 [sj623])
====> Reply 1: x+=y means increment x by yso more or less the same as x=x+y



ID: 3603880
Created: 4:32pm, 02 Dec 2018
Of the following statements, which of these are not correct:
a) An AVL Tree is a type of Binary Search Tree.
b) The difference between the nodes on the left and right of an AVL tree must be no more than 1.
c) In a Binary search tree, the value of the left child is always less than the parent node.
d) An AVL Tree that is imbalanced, can be rebalanced by rotating the imbalanced branch.
*e) A double rotation is required for nodes on the outside of the tree.
Explanation: A double rotation is required when a node is on the inside of the tree, one to move it to the outside, and another to rebalance the tree.
Tags: ADTs, Trees
Author: gray (jg2124 - permission to this course revoked)
Avg Rating: 3.2100
Avg Difficulty: 0.7368
Total ratings: 19
==> Comment 1: B is also incorrect, the difference in HEIGHT should be no more than one, but the way B is phrased implies that the difference in value is no more than one. (by: nmparrott [nmp31])
====> Reply 1: i agree



ID: 3603850
Created: 4:19pm, 02 Dec 2018
What is the complexity of the worst-case scenario for quicksort?
a) n log?(n)
b) n
c) n3
*d) n2
e) log(n)
Explanation: The worst-case scenario for quick sort is if it repeatedly selects an extreme end of the dataset, meaning that each recurse only reduces the problem by one step, thus n2.
Tags: Sorting, Search, Complexity
Author: gray (jg2124 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3750
Total ratings: 16



ID: 3603848
Created: 4:18pm, 02 Dec 2018
A skip list containing lanes from 0 to 12 is used to organise 262000 elements.On average, what will the combined sum of pointers in lanes 3, 8 and 11 be closest to?
a) 28000
*b) 34000
c) 41000
d) 45000
e) 16000
Explanation: ~ 34000
Tags: Lists, Search
Author: sll57 (sll57 - permission to this course revoked)
Avg Rating: 3.7900
Avg Difficulty: 1.5000
Total ratings: 14
==> Comment 1: Skip lists don't always decrease the number of elements in each successive lane by 1/2 (by: joebr [jayb20])



ID: 3603830
Created: 4:09pm, 02 Dec 2018
Which of the following notations are used to represent the �exact bound� for the complexity of an algorithm?
a) O(n)
*b) ?(n)
c) O(n)
Explanation: Big Theta or the exact bound, describes two functions with the runtime of the actual function being somewhere between the two.
Tags: Complexity
Author: gray (jg2124 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.2500
Total ratings: 20



ID: 3603746
Created: 3:16pm, 02 Dec 2018
Provided that the load factor is limited, what is the runtime complexity of insert, find and remove for a hashtable?
a) ?(n) for all.
b) ?(n) for find and remove,?(log n) for insert
*c) ?(1) for all
d) ?(log n) for find and remove,?(n) for insert
e) ?(n) for find,?(n2) for insert and remove.
Explanation: Summary of Hashtables Lecture 2 - provided a limited load factor (max number of keys to insert / total buckets in the array) complexity is linear for find, remove and insert!
Tags: Complexity, Hashtables
Author: mcb68 (mcb68 - permission to this course revoked)
Avg Rating: 3.1900
Avg Difficulty: 0.6875
Total ratings: 16
==> Comment 1: In the explanation you say linear time. This would be ?(n) surely? (by: sj623 [sj623])



ID: 3603742
Created: 3:14pm, 02 Dec 2018
Which of the following statements are true?
a) Selection sort, Insertion sort and Quick sort are all stable.
b) Insertion sort, Quick sort and Merge sort are all stable.
c) Insertion sort, Shell sort and Quick sort are all unstable.
*d) Selection sort, Shell sort and Quick sort are all unstable.
Explanation: Selection: UnstableInsertion: StableQuick: UnstableMerge: StableShell: Unstable
Tags: Sorting
Author: jtc38 (jtc38 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.7500
Total ratings: 12



ID: 3603737
Created: 3:11pm, 02 Dec 2018
Which of the below is the correct order of asymptotic complexity, from fastest to slowest
a) 1, n, log(n), 2n, n2
*b) 1, log(n), n, n2, 2n
c) n, log(n), 2n, n2, 1
d) log(n), n, n2, 2n, 1
e) log(n), 1, n, n2, 2n
Explanation: 1 (linear) is fastest, followed by log(n), n, n2 and 2n.
Tags: Complexity
Author: mcb68 (mcb68 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.1333
Total ratings: 15



ID: 3603712
Created: 3:02pm, 02 Dec 2018
See the binary tree below. What is the balance value of the node with value '10'? Is this an AVL tree? 15 / \ 10 18 / \ / \ 6 12 17 20 / 11
*a) 1, AVL tree
b) 1, not an AVL tree
c) 2, not an AVL tree
d) -1, AVL tree
e) -1, not an AVL tree
Tags: Trees
Author: jtc38 (jtc38 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3603678
Created: 2:48pm, 02 Dec 2018
Binary Search Trees, Binary Trees and AVL Trees are all types of Tree, but which is a special type of which?
a) AVL Tree is a type of Binary Tree which is a type of Binary Search Tree
b) Binary Tree is a type of AVL Tree which is a type of Binary Search Tree
*c) AVL Tree is a type of Binary Search Tree which is a type of Binary Tree
d) Binary Search Tree is a type of Binary Tree which is a type of AVL Tree
e) Binary Search Tree is a type of AVL Tree which is a type of Binary Tree
Explanation: An AVL Tree is a type of balanced Binary Search Tree, and a Binary Search Tree is a type of Binary Tree where all nodes in the left subtree are less than the node's value, and all nodes in the right subtree are greater than the node's value.
Tags: Trees
Author: mcb68 (mcb68 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.4444
Total ratings: 18



ID: 3603270
Created: 9:19am, 02 Dec 2018
Which of the following sorting algorithms use a 'Divide & Conquer' strategy?
a) Insertion Sort & Shell Sort
b) Quick Sort & Shell Sort
c) Merge Sort, Insertion Sort & Quick Sort
*d) Quick Sort & Merge Sort
e) Merge Sort & Insertion Sort
Explanation: Both merge and quick sorts split a given list into smaller lists and then sort those - this is what is meant by 'Divide & Conquer'.
Tags: Lists, Sorting
Author: rf470 (rf470 - permission to this course revoked)
Avg Rating: 3.8700
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3603264
Created: 9:09am, 02 Dec 2018
In which order (from first to last) are nodes processed by an In-Order traversal of a binary tree?
a) Right Sub-Tree, Current Node, Left Sub-Tree
*b) Left Sub-Tree, Current Node, Right Sub-Tree
c) Current Node, Left Sub-Tree, Right Sub-Tree
d) Current Node, Right Sub-Tree, Left Sub-Tree
e) Left Sub-Tree, Current Node, Left Sub-Tree
Explanation: In-Order processes left nodes before the current node and then finishes with right nodes.
Tags: Search, Trees
Author: rf470 (rf470 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.2000
Total ratings: 20



ID: 3603254
Created: 9:01am, 02 Dec 2018
What is the worst case run time of a BST search for a tree with N values?
a) ?(log N)
b) ?(N^2)
*c) ?(N)
d) ?(1)
Explanation: In the worst case, every node in the tree will have at most 1 child, and the desired node will be at the bottom of the tree - requiring you to pass through every other node in order to reach it.
Tags: Search, Trees, Complexity
Author: rf470 (rf470 - permission to this course revoked)
Avg Rating: 3.6200
Avg Difficulty: 0.6154
Total ratings: 13



ID: 3603175
Created: 7:00am, 02 Dec 2018
How many different orders of the characters 'B', 'A', 'T', 'H' can be inserted into the AVL tree described in lectures, such that preorder traversal will return "BATH"?
a) 2
b) 4
*c) 6
d) 8
e) None of the above
Explanation: 'B', 'A', 'T', 'H''B', 'T', 'A', 'H''A', 'B', 'T', 'H''A', 'T', 'B', 'H''T', 'A', 'B', 'H''T', 'B', 'A', 'H'
Tags: Trees
Author: km846 (km846 - permission to this course revoked)
Avg Rating: 2.7800
Avg Difficulty: 1.5217
Total ratings: 23



ID: 3602392
Created: 9:54pm, 01 Dec 2018
What is the definition of precision?
*a) When you take repeated measurements and get similar values
b) When you measure to a high number of decimal points
c) When you average out your measurements
d) When the average of your measurements is close to the true value
Explanation: Precision= when measuring repeatedly,we get very similar resultsfrom lecture 3, slide 5.
Author: cdm57 (cdm57 - permission to this course revoked)
Avg Rating: 3.7600
Avg Difficulty: 0.2941
Total ratings: 17



ID: 3615733
Created: 9:35pm, 01 Dec 2018
Which of the following is false about a complete binary tree?
a) The top N-1 levels are all completely filled with nodes.
*b) All nodes on the bottom row are as far right as possible with no empty slots in between.
c) It is a useful data structure for implementing heaps.
d) The maximum number of nodes in a binary tree of height �h� is 2h � 1, h > 1.
Explanation: Content found in lecture 16 which was about heaps and using complete binary trees for minheaps and maxheaps.
Tags: Trees
Author: cdm57 (cdm57 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.9091
Total ratings: 11



ID: 3605573
Created: 6:46pm, 01 Dec 2018
Insert the following elements into a standard closed hashtable with linear probing (to the right): 22, 9, 3, 16, 6, 29, 12, 26, in that order. The hash function has the form h(x) = x % 8 (with slots 0,...,7). What does the hashtable look like?
a) 3, 6, 9, 12, 16, 22, 26, 29
b) 16, 9, 12, 3, 29, 6, 22, 26
*c) 16, 9, 26, 3, 12, 29, 22, 6
d) None of the above.
Explanation: Find x mod 8 and then insert it into the right slot. If that slot is already occupied then move to the next available slot on the right.
Tags: Hashtables
Author: pskl20 (pskl20 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.6667
Total ratings: 12



ID: 3601856
Created: 6:22pm, 01 Dec 2018
What are the advantages of a linked list over an array?
a) Insertion at the front is faster
b) Getting to an element at index i
c) Removing an item from the middle
d) A and B
*e) A and C
Explanation: INSERT: Inserting in an array is difficult, all n items will need to be shifted to the right. However, insertion can be achieved in a few steps in a linked list by simple reassignment of nodes.GET: Any element in an array can be reached in one step. However, to get to element at index i in a linked list would require going through i-1 nodes to get to it.REMOVE: In a linked list, an item can be removed in a few steps. However, in an array, all following items must be shifted to the left.
Tags: ADTs, Lists
Author: pskl20 (pskl20 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4762
Total ratings: 21



ID: 3601824
Created: 6:06pm, 01 Dec 2018
Which of the following sorting algorithms is always stable?
a) Selection sort
*b) Bubble sort
c) Shell sort
d) Quick sort
e) None of the above
Explanation: A sort is considered to be stable if the original order of the input is preserved, i.e. if there is a comparison between two equal items, the one that appeared first in the input will appear before the second item in the sorted output too.Bubble sort is stable because it only swaps elements if one is strictly less than the other.However, selection sort is unstable, for example, because it swaps the least value with the first value - but what if they are the same?
Tags: Sorting
Author: pskl20 (pskl20 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.5333
Total ratings: 15
==> Comment 1: According to the DS&A Exam Revision Document found on moodle, Selection sort is considered to be a stable algorithm (by: dpah20 [dpah20])



ID: 3601236
Created: 10:26am, 01 Dec 2018
In an AVL Tree, what is the maximum balance factor a node can have before it needs re-balancing?
a) -1
b) 2
c) 0
*d) 1
e) None of the above
Explanation: In an balanced AVL Tree, all nodes should have a balance factor of -1, 0 or 1. This means that the maximum balance factor a node can have before needing to be re-balanced is 1. -1 is the minimum balance factor accepted.
Tags: Trees
Author: willtaylor (wat23 - permission to this course revoked)
Avg Rating: 3.3300
Avg Difficulty: 0.3333
Total ratings: 21
==> Comment 1: Tad bit vague, since the balance factor could be counted as a maximum of -1 (by: nlc29 [nlc29])



ID: 3601233
Created: 10:23am, 01 Dec 2018
Which of the following is the worst complexity?
a) O(1)
b) On^2)
*c) O(2^n)
d) O(n log n)
Explanation: Exponential increase.
Tags: Complexity
Author: willtaylor (wat23 - permission to this course revoked)
Avg Rating: 3.2800
Avg Difficulty: 0.1111
Total ratings: 18



ID: 3601232
Created: 10:19am, 01 Dec 2018
What is a ADT?
*a) Abstract Data Type
b) Additional Data Type
c) Algorithms and Data Types
d) None of the above.
Explanation: Abstract Data Type - A collection of algorithms, data types and interface methods.
Tags: ADTs
Author: willtaylor (wat23 - permission to this course revoked)
Avg Rating: 3.3200
Avg Difficulty: 0.0909
Total ratings: 22



ID: 3601230
Created: 10:17am, 01 Dec 2018
Using binary search with a data set with 1,048,576 elements, what is the maximum number of iterations would it take to find a specific element?
*a) 20
b) 15
c) 25
d) 50
e) None of the above.
Explanation: 20 iterations. Binary search is log2(n) - so log2(1048576) = 20.
Tags: Search
Author: willtaylor (wat23 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2857
Total ratings: 14



ID: 3601224
Created: 10:10am, 01 Dec 2018
Which of the following data structures is it difficult to remove data from?
*a) Closed Hash Table (with linear probing)
b) Skip List
c) AVL Tree
d) Open Hash Table
Explanation: Closed hash table, as removing items will create gaps before the rest of the data. This gap will prematurely abort the linear probing/search, meaning you wont be able to find any items after it.
Tags: Lists, Trees, Hashtables
Author: willtaylor (wat23 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.4211
Total ratings: 19



ID: 3601221
Created: 10:09am, 01 Dec 2018
What would be the resultant maxheap after adding the number "15" to the maxheap (All images created using draw.io):
a)
b)
c)
*d)
Explanation: Here, D is the correct answer, as 15 is first added as the right child of 4, in order to maintain a complete binary tree, and then it is "sifted up", until it becomes the root node.
Tags: Trees
Author: liampugh (ljp67 - permission to this course revoked)
Avg Rating: 4.1900
Avg Difficulty: 1.0625
Total ratings: 16



ID: 3601094
Created: 7:06am, 01 Dec 2018
What is meant by the the Load Factor (L) for an Open Hash Table?
a) The average amount of values stored in each bucket.
b) The ratio of the amount of values stored in the bucket with most values stored, to the bucket with the least values stored.
c) The maximum amount of values a bucket is allowed to store.
*d) The maximum number of keys to insert, divided by the number of buckets in the array.
Explanation: See: Lecture 9, Page 12
Tags: Hashtables
Author: maxk (mk918 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.1818
Total ratings: 11



ID: 3601082
Created: 6:54am, 01 Dec 2018
What is the Big-O time complexity of Level Order Traversal for a tree structure with n nodes? (Pick the smallest upper bound which applies.)
*a) O(n)
b) O(log(n))
c) O(n2)
d) O(nlog(n))
Explanation: Each node of the tree is visited exactly once, and there are n nodes. Hence O(n) time complexity. (This is true for any of the tree traversals.)See: Lecture 13, Slide 29
Tags: Trees, Complexity
Author: maxk (mk918 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6000
Total ratings: 15



ID: 3601056
Created: 6:28am, 01 Dec 2018
Select the correct statement about time complexity (Big-O notation).
a) If given the exact time complexity?(f(n)) of an algorithm, you can work out exactly how much time it will take to complete the algorithm for a given n.
b) If given the exact time complexity ?(f(n)) of an algorithm, you can work out exactly how many operations it will take to complete the algorithm for a given n.
*c) ?(log2(n)) time complexity is the same as?(log10(n)) time complexity.
d) An algorithm with ?(1) time complexity will always take less operations to complete than an algorithm with ?(n2) time complexity.
Explanation: log2(n) is equal to log10(n)/log10(2). Constant factors can be disregarded in Big-O notation, so?(log2(n)) complexity is the same as ?(log10(n)) complexity. (1/log10(2) is the constant factor in this case.)Providing a counterexample for A and B: an algorithm that always takes 1 operation to complete and an algorithm that always takes 100 operations to complete would both be?(1) time complexity. So given only the time complexity you would not be able to work out which of these cases it would be (or if it was another case altogether). So you would not be able to work out the number of operations it would take to complete, and hence would not be able to work out how much time it would take to complete.A counterexample for D: Consider an algorithm f(n) which always takes 1,000,000 operations to complete and therefore has?(1) time complexity. Now also consider an algorithm g(n) which always takes n2 operations to completeand therefore has ?(n2) time complexity. But for all n < 1,000, g(n) will take less operations to complete than f(n).
Tags: Complexity
Author: maxk (mk918 - permission to this course revoked)
Avg Rating: 4.1400
Avg Difficulty: 1.0909
Total ratings: 22



ID: 3599411
Created: 6:21pm, 30 Nov 2018
Which sorting algorithms are used in some low RAM embedded systems?
a) Quick sort & merge sort
b) Merge sort & shell sort
*c) Heap sort & shell sort
d) Heap sort & merge sort
Explanation: Slide 19 in the Sorting 3 lecture says:Shell sort:Used in some embedded systems (eg, in a car) instead of quicksort due to fixed RAM usageHeap sort:Sometimes used in low-RAM embedded systems because of its performance/low memory req�ts.
Tags: Sorting
Author: jc2681 (jc2681 - permission to this course revoked)
Avg Rating: 4.2300
Avg Difficulty: 0.7273
Total ratings: 22



ID: 3599388
Created: 6:17pm, 30 Nov 2018
What is the O (worst case), ? (average case), and O (best case) complexities of this method:void foo(int sum) { if(sum == 0) { return; } for (int i = 0 ; i < n*n ; i++) { sum += i + n; } if(sum == 5000) { for (int i = 0 ; i < n*n*n ; i++) { sum += i; } }}
a) O(n): n2, ?(n): n, O(n): n
b) O(n): n2, ?(n): n, O(n): 1
c) O(n): n3, ?(n): n2, O(n): n
*d) O(n): n3, ?(n): n2, O(n): 1
Explanation: Best case is when sum= 0 and the method returnsAverage case is whensum!= 0 &&sum!= 5000 so only goes through the for loop n2timesWorst case is whensum= 5000 and has to go through the final for loop n3 times
Tags: Complexity
Author: jc2681 (jc2681 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.7059
Total ratings: 17
==> Comment 1: is theexact bound not the average bound, so none of the above are really correct. (by: callumbateson [cb2063])
====> Reply 1: Sorry, so all the symbols should be but with labels: worst case, average case, and best case? (based off of the lecture called Complexity 3, slide 8)
====> Reply 2: Yes exactly like that
==> Comment 2: The complexity for the average case is 4n^2+2 which is roughly n^2.The complexity for the worst case is 4n^3+4n^2+4 which is roughly n^3 (by: kb744 [kb744])



ID: 3599368
Created: 6:09pm, 30 Nov 2018
Inserting the values 1, 2, 3, 4, 5, 6, 7 into a binary search tree, how many singular rotations occur and what is the direction of the final rotation in order for it to be perfectly balanced?
*a) 4, left
b) 4, right
c) 3, left
d) 3, right
Explanation: rotation 1: 1 -> 2 2 1 3 3rotation 2: 2 -> 2 1 3 1 4 4 3 5 5rotation 3: 2 -> 2 1 4 1 4 3 5 3 6 6 5 7 7rotation 4: 2 -> 4 1 4 2 6 3 6 1 3 5 7 5 7All rotations are left rotations and the final rotation is in the left direction too.
Augmented explanation 1: The answer and the final graph are correct but rotation 3 is wrong. After 6 is added there needs to be a rotation:rotation 1: 1 -> 2 2 1 3 3rotation 2: 2 -> 2 1 3 1 4 4 3 5 5rotation 3: 2 -> 4 1 4 2 5 3 5 1 3 6 6 rotation 4: 4 -> 4 2 5 2 6 1 3 6 1 3 5 7 7 (by: kb744 [kb744])
Augmented explanation 2: UPDATED ROTATIONS 3 + 4:rotation 1: 1 -> 2 2 1 3 3rotation 2: 2 -> 2 1 3 1 4 4 3 5 5rotation 3: 2 -> 4 1 4 2 5 3 5 1 3 6 6rotation 4: 4 -> 4 2 5 2 6 1 3 6 1 3 5 7 7 (by: jc2681 [jc2681])
Tags: Trees
Author: jc2681 (jc2681 - permission to this course revoked)
Avg Rating: 4.3300
Avg Difficulty: 1.2222
Total ratings: 18



ID: 3599208
Created: 4:50pm, 30 Nov 2018
With the BST below, what is the maximum number of elements which can be inserted into the root's left sub-tree until the tree is not an AVL tree (include the insertion which causes the unbalance as part of your answer)?5 \ 6
a) 2
b) 3
*c) 4
d) 5
e) none of the above
Explanation: 3 insertions will cause the tree to look like: 5 / \ b 6 / \a cwhich is balanced, then the next insertion has to be below a or c. Hence the 4th insertion causes the tree to not be an AVL tree.
Tags: Trees
Author: jackwatson (jw2782 - permission to this course revoked)
Avg Rating: 3.0900
Avg Difficulty: 0.6364
Total ratings: 11
==> Comment 1: in your explanation, you assume order bac but you'dget a different tree with abc or cba, meaning in these cases 3 would be enough to no longer be avl (by: aro31 [aro31])



ID: 3599205
Created: 4:49pm, 30 Nov 2018
Which is a valid comparison between open and closed hash tables?
a) Open hash table:- Faster run time- Smaller memory consumption
b) Closed hash table:- Faster run time- Smaller memory consumption
*c) Closed hash table:- Smaller memory consumptionOpen hash table:- Faster run time
d) Open hash table:- Smaller memory consumptionClosed hash table:- Faster run time
e) They both have the same run time efficiencies and memory consumptions
Explanation: An open hash table is going to take up more space since it allows for adding unlimited elements to its buckets, and in order to speed it up, it should purposefully be made too large.A closed hash table takes up a static amount of memory, less than an open hash table would, but will in comparison run slower.
Tags: Hashtables
Author: mk2022 (mk2022 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.6667
Total ratings: 15



ID: 3599189
Created: 4:43pm, 30 Nov 2018
Which sorting algorithm does the following best describe?_____ sort is unstable, can be used on linked lists and is approx?(n^1.25)
a) merge sort
b) quick sort
c) heap sort
*d) shell sort
e) selection sort
Augmented explanation 1: Merge sort is stable so that rules A out.Quick sort is unstable, but it has the sorting time of either n^2 (presorted array, worst case) or n log(n) normally so that rules B outHeap sort is unstable, but it has the sorting time of n log(n) always, so that rules C outSelection sort is unstable, but it always has the sorting time n^2 so that rules E outBy process of elimination, it is D. But we can always remember that the only sorting algorithm with a time of n^1.25 is shell sort. (by: nlc29 [nlc29])
Tags: Sorting
Author: jrbg12 (jrbg20 - permission to this course revoked)
Avg Rating: 3.5600
Avg Difficulty: 0.8125
Total ratings: 16



ID: 3606079
Created: 4:41pm, 30 Nov 2018
Which of the following statements is false?
a) The top node of a tree is called the 'root'
b) A node with 0 children is called a leaf
*c) In a binary tree, every node has at least 2 children
d) In a full binary tree, every non-leaf has exactly 2 children
e) In a full binary tree, the number of nodes on depth level d is 2^d
Explanation: In a binary tree, every node has at MOST 2 children nodes
Tags: Trees
Author: jrbg12 (jrbg20 - permission to this course revoked)
Avg Rating: 4.3200
Avg Difficulty: 0.4091
Total ratings: 22



ID: 3599178
Created: 4:38pm, 30 Nov 2018
Which is faster (linked list or array) when1) inserting a new item at front?2) removing an item from the middle?
*a) 1) linked list 2) linked list
b) 1) array 2) linked list
c) 1) linked list 2) array
d) 1) array 2) array
e) 1) same 2) linked list
Explanation: 1) linked list done in a few steps where as with an array we would have to shift all n items right first2)Once we�ve found the item we want to delete, we can remove it in a few steps. With an array, we�d have to shift all the following items left one slot.
Tags: Lists
Author: jrbg12 (jrbg20 - permission to this course revoked)
Avg Rating: 3.0000
Avg Difficulty: 0.5882
Total ratings: 17
==> Comment 1: (2) Unless you are given the initial position of the node you wish to remove, for a linked list, you'd still have to find it. Therefore they both have complexity O(n). (by: nmparrott [nmp31])



ID: 3599174
Created: 4:36pm, 30 Nov 2018
What is the time complexity of adding and deleting items in a priority queue
a) Add: O(logn)Remove O(log2n)
*b) Add: O(logn)Remove O(logn)
c) Add: O(n)Remove O(logn)
d) Add: O(logn)Remove O(ln)
e) Add: O(n)Remove O(n)
Explanation: google heaps geeks for geeks
Author: iwonderwhothisislol (eg574 - permission to this course revoked)
Avg Rating: 4.1700
Avg Difficulty: 0.7222
Total ratings: 18
==> Comment 1: Is it true that "People don't think the universe be like it is, but it do"? (by: mk2022 [mk2022])
====> Reply 1: ik you may not think it be like that, it took me a long time to understand, but it do



ID: 3599233
Created: 4:35pm, 30 Nov 2018
What is the average case run-time of heap sort?
a) O(n^2)
b) O(log(n))
*c) O(n * log(n))
d) O(1)
e) O(log(n)^2)
Explanation: Time complexity of heap sort is O(n * log(n))http://bigocheatsheet.com/
Tags: Sorting
Author: mk2022 (mk2022 - permission to this course revoked)
Avg Rating: 3.9500
Avg Difficulty: 0.2632
Total ratings: 19



ID: 3599170
Created: 4:33pm, 30 Nov 2018
What is the complexity of this?for (int i=0; i<n+1000; i++){ int k=n; while (k>1) { sum ++; k=k/2; }}
*a) ?(nlog(n))
b) ?(log(n))
c) ?(n)
d) ?(2^n)
e) ?(n^2)
Tags: Complexity
Author: jrbg12 (jrbg20 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.7059
Total ratings: 17



ID: 3599164
Created: 4:31pm, 30 Nov 2018
Assuming 0 indexed array representation of a heapwhat is the index of the right child of the node at index 5
*a) 12
b) 11
c) 10
d) 13
e) 9
Explanation: formula is:public int getRightChild(int i) { if(2 * (i + 1) >= pointer) return -1; return 2 * (i + 1);}
Author: iwonderwhothisislol (eg574 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 1.0000
Total ratings: 16



ID: 3599161
Created: 4:30pm, 30 Nov 2018
What are the rules for a max heap as a binary tree?1. Value obtained by a node is always greater than or equal to the values of the node's children.2. The tree is a complete binary tree3. The tree must be balanced
a) Only 1
b) Only 2
c) Only 3
d) 1 and 3
*e) 1 and 2
Explanation: These are the conditions for a max heap:Value obtained by a node is always greater than or equal to the values of the nodes children.The tree is a complete binary tree
Tags: Sorting
Author: mk2022 (mk2022 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.7059
Total ratings: 17



ID: 3599158
Created: 4:29pm, 30 Nov 2018
Assume a heap stored at an 0 indexed array.What is the index of the parent of the item in index 5.
*a) 2
b) 1
c) 3
d) 0
e) 4
Explanation: Formula is :public int getParent(int i) { if (i == 0) return -1; return (i + 1) / 2 - 1;}
Author: iwonderwhothisislol (eg574 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3599136
Created: 4:20pm, 30 Nov 2018
Below is an incorrect implementation of Selection Sort for sorting items in ascending order. What is wrong with the code? You may assume the swap function is correct.void selectionSort(int a[], int n){ for (int i = 0; i < n-1; i++){ int minIndex = i; for (int j = i + 1; j < n-1; j++){ if (a[j] < a[minIndex]){ minIndex = j; } } swap(a, i, minIndex); }}
a) The code sorts the items into descending order.
*b) The algorithm only sorts the first n-1 items in the list.
c) The code is wrongly typed.
d) The inner for-loop should start from j = i.
e) In the inner for-loop it should be ++j and not j++.
Explanation: The for-loop's should compare up to index n-1 i.e. the last element. This code only compares the first n-2 elements i.e. the second to last element.
Tags: Sorting, Applications
Author: jmpms20 (jmpms20 - permission to this course revoked)
Avg Rating: 3.7500
Avg Difficulty: 0.8125
Total ratings: 16



ID: 3599083
Created: 3:53pm, 30 Nov 2018
Below is some code which preforms an operation on a positive integer. Describe what the code returns? Note that the '%' operator give the modulus.int doSomething(int n){ int result; int d; while( n != 0){ d = n%10; n = n/10; result = result * 10; result = result + d; } return result;}
a) The code returns the input unchanged.
b) The code returns the odd digits of the input.
c) The code returns the even digits of the input.
d) The code adds the input to it's reverse.
*e) The code reverses the input integer.
Explanation: Consider the code applied to the integer 1234. We track the variables through the code.n d result1234 0 0 123 4 0 412 3 40 431 2 430 4320 1 4320 4321returned integer is: 4321 (so the code reverses a positive integer)
Augmented explanation 1: Note: In Java when you divide a int it only returns what's left of the decimal point (i.e. 23/10 = 2.3; Java would return 2 for type int) (by: jmpms20 [jmpms20])
Tags: Applications
Author: jmpms20 (jmpms20 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 1.3333
Total ratings: 9



ID: 3599018
Created: 3:19pm, 30 Nov 2018
Why is is not possible to remove an entry from a Closed Hash Table with Linear Probing?
a) Because the hash value of a key is not unique we don't know which entry to remove.
b) Because Hash Functions are not injective.
*c) Removing an entry from a Closed Hash Table with Linear Probing destroys the "structure" of linear probing when searching for an entry.
d) It is possible to remove an entry from a Closed Hash Table with Linear Probing.
e) Because the Hash Function does not necessarily have an inverse.
Explanation: If a key has the same hash value as an entry already in the hash table then we insert it in the next available space below the hash value. Now when searching we compute the hash value of the entry which we wish to find then beginning at the hash value we search through the hash table until we either reach the entry or a blank space. If we were to remove an item from the hash table then if we were to search for an entry with the same hash value which came after the removed entry our search would come back false even though the entry is in the hash table.
Tags: Hashtables
Author: jmpms20 (jmpms20 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.6111
Total ratings: 18
==> Comment 1: It is possible to remove an entry from a Closed Hash Table with Linear Probing, however doing so will destroy the structure of the table, as you state. (by: guy [grmb20])
====> Reply 1: I see what you mean. Yes it is physically possible to remove an entry from the table but given that it destroys the structure it's not possible in the sense that it makes the data structure redundant. Sorry if you found it ambiguous.



ID: 3598812
Created: 1:19pm, 30 Nov 2018
What is an AVL Tree?
a) A Binary in which the heights of left and right sub-trees don'tdiffer.
b) A Binary Tree in which the root node has a balance of zero.
*c) a Binary Tree in which the heights of the left and right sub-trees of each node differ at most by 1.
Explanation: in lecture slides trees3 it defines an AVL tree as "a BST in which the heights of the left and right sub-trees of each node differ at most by 1."
Tags: Trees
Author: bb585@bath.ac.uk (bb585 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.1875
Total ratings: 16



ID: 3598741
Created: 12:50pm, 30 Nov 2018
what will the following list of numbers look like at different layers of Quick Sort? (where the pivot used is thefirst element)6, 5, 3, 4, 1, 8, 7, 2, 9
*a) 5, 3, 4, 1, 2, 6, 8, 7, 93, 4, 1, 2, 5, 6, 7, 8, 91, 2,3, 4,5,6,7,8,91, 2, 3,4,5, 6, 7, 8, 91,2,3,4, 5, 6, 7, 8, 9
b) 5, 3, 4, 1, 2, 6, 8, 7, 93, 4, 1, 2, 5, 6, 7, 8, 92, 1, 3, 4, 5, 6, 7, 8, 91, 2, 3, 4, 5, 6, 7, 8, 91, 2, 3, 4, 5, 6, 7, 8, 9
c) 1, 6, 5, 3, 4, 8, 7, 2, 91, 3, 2,4, 6, 5, 8, 7, 91, 2,3,4, 6, 5, 7,8, 91, 2, 3, 4,5, 6, 7,8, 91, 2, 3, 4, 5, 6, 7,8, 91, 2, 3, 4, 5, 6, 7, 8, 9
d) 1, 6, 5, 3, 4, 8, 7, 2, 91, 6, 5, 3, 4, 7, 2,8, 91, 3, 2,4, 6, 5, 7,8, 91, 2, 3,4, 5, 6, 7, 8, 9,1, 2, 3, 4, 5, 6, 7, 8, 9,1, 2, 3, 4, 5, 6, 7, 8, 9,
Explanation: Make sure you keep them in the order they were before, just moved to one side of the pivot.Also, remember the first element of each section and must keep going till all points are pivots.
Tags: Sorting
Author: bb585@bath.ac.uk (bb585 - permission to this course revoked)
Avg Rating: 4.3600
Avg Difficulty: 0.7273
Total ratings: 11



ID: 3598731
Created: 12:44pm, 30 Nov 2018
A quadratic time algorithm uses 27 elementary operations when given an input n=10. What is the (most likely) amount of elementary operations for n=1000?
a) 54,000
b) 27,000
c) 729,000
*d) 270,000
e) 540,000
Explanation: We can represent this problem as an equation; let f(x) = cx^2 where c is a constant to be calculated. We know that 27 = c * 10^2, so c = 27/100.Now lets look at the case where n=1000; f(x) = 27/100 * 1000^2. This equates to 270,000
Tags: Applications
Author: joelmbroad (jmb221 - permission to this course revoked)
Avg Rating: 4.3300
Avg Difficulty: 0.4667
Total ratings: 15



ID: 3598702
Created: 12:25pm, 30 Nov 2018
From the diagram (above), what would the balance value of the node with value "Ronda" be? Is this an AVL tree?
a) 2 & an AVL tree
b) -2 & an AVL tree
*c) 2 & NOT an AVL tree
d) -2 & NOT an AVL tree
e) 0 & NOT an AVL tree
Explanation: The balance value of a node is calculated by calculating the heights of the nodes left and right subtrees; balance = rightSubtree.height - leftSubtree.height.This is NOT an AVL tree, the definition of an AVL tree is as follows: "a BST (binary search tree) in which the heights of the left and right sub-treesof each node differ at most by 1." As we have a balance factor not in the range [-1,1], it is not an AVL tree.
Tags: Trees
Author: joelmbroad (jmb221 - permission to this course revoked)
Avg Rating: 3.7900
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3598697
Created: 12:21pm, 30 Nov 2018
What is the average runtime of these sorting algorithms? (in Big O notation)InsertionSortQuickSortMergeSort
a) InsertSort - N2QuickSort - N*log(N)MergeSort - log(N)
*b) InsertionSort - N2QuickSort - N*log(N)MergeSort N*log(N)
c) InsertSort - N2QuickSort - log(N)MergeSort - N*log(N)
d) InsertSort - N2QuickSort - N2MergeSort - log(N)
Explanation: Insertion sort is O(N2) because, for each element, it needs to compare to up to n other elements.Quick Sort is O(N*log(N)) because it will have on average log(N) layers because it halves it each time, and each layer has up to n comparisons.Merge Sort is alsoO(N*log(N)) because it also halves the array each time, and in each of these cases will be doing up to n comparisons.
Tags: Complexity
Author: bb585@bath.ac.uk (bb585 - permission to this course revoked)
Avg Rating: 3.8300
Avg Difficulty: 0.6667
Total ratings: 12



ID: 3598734
Created: 12:13pm, 30 Nov 2018
What is the complexity of the following function?for (int i=0 ; i < n ; i++){ int k = n; while (k > 1){ sum++; k = k/2; }}
a) T(logn)
b) T(n)
*c) T(nlogn)
d) T(n^2)
e) T(n^3)
Explanation: Our code has 2 loops involved; 1 for loop and 1 while loop. The for loop loops n times, so our answer is going to be n multiplied by the order of the while loop.The order of the while loop is log(n), as with each loop we keep halving k (If you imagine a graph with y=n at x=0, it will show a logarithmic relationship if for each increase in x you halve n.)This gives us the resulting answer of O(nlogn)
Tags: Complexity
Author: joelmbroad (jmb221 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.5556
Total ratings: 9



ID: 3597293
Created: 10:22pm, 29 Nov 2018
Let g, h, f1 and f2 be functions. If g(n) = O( f1(n) ) and h(n) = O( f2(n) ), what is the big-O complexity of (g(n)+h(n))?
a) O(f1(n) + f2(n))
*b) O(max{ f1(n), f2(n) })
c) O(f1(n)*f2(n))
d) None of the above
Explanation: If we are given two functions, the complexity of their sum is determined by the "larger" function. I.e if f(n) = n^3 and g(n) = 4n^2, then their sum f(n) + g(n) = n^3 + 4n^2 still has complexity O(n^3) (the larger of the two functions).
Tags: Complexity
Author: tjh71 (tjh71 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.5714
Total ratings: 7



ID: 3596234
Created: 4:39pm, 29 Nov 2018
Given 67, 54, 3, 98, 34, which is the root node and which are leaf nodes if it were a balanced AVL tree
*a) Root: 54Leaves: 3, 98
b) Root: 54Leaves 3, 67, 98
c) None, it cannot be a balanced AVL tree
Explanation: Heights of left and right subtrees differ by only 1
Author: bgc (ac2291 - permission to this course revoked)
Avg Rating: 2.8300
Avg Difficulty: 0.6087
Total ratings: 23
==> Comment 1: If you input the elements of the tree in the order you stated it would result in 54 being the root with 34 and 98 being the leaves. (by: mh2200 [mh2200])
====> Reply 1: Where would 3 go?
====> Reply 2: 54 / \ 3 67 \ \ 34 98
==> Comment 2: I don't think that the author of this question realises you can form different avl trees depending on the order in which you insert the elements. In the order provided, you'd have 54 as the root and, 34 and 98 as the leaves. (by: nmparrott [nmp31])
==> Comment 3: 67 Is also balanced but gives a different answer / \ 54 98 / \ 3 34 (by: sj623 [sj623])



ID: 3595719
Created: 1:34pm, 29 Nov 2018
Which of the following are stable sorts?1. Selectionsort2. Insertionsort3. Shellsort4. Quicksort5. Mergesort
a) 1 and 2
b) 2 and 4
c) 3 and 5
d) 1 and 4
*e) 2 and 5
Explanation: Insertionsort and mergesort are both stable sorts. Selectionsort, shellsort and quicksort are unstable.
Tags: Sorting
Author: t_collins1710 (tpc41 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.5000
Total ratings: 18



ID: 3595641
Created: 12:52pm, 29 Nov 2018
On average, how many nodes would you expect to be in the fourth lane of a skip-list with 64 elements (Assuming the first lane contains all elements)?
a) 64
b) 12
c) 16
*d) 8
e) None of the above
Explanation: As we move up to the next lane, we expect the number of nodes to be half the number that were in the previous lane. In this exampleLANE 1: 64 nodesLANE 2: 32 nodesLANE 3: 16 nodesLANE 4: 8 nodes
Tags: Lists
Author: tjh71 (tjh71 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 15



ID: 3595442
Created: 11:42am, 29 Nov 2018
How many comparisons does it take to sort these numbers using insertion sort?5 3 2 6 1
*a) 8
b) 6
c) 10
d) 7
e) 5
Tags: Sorting
Author: izzyp1 (ip334 - permission to this course revoked)
Avg Rating: 2.9100
Avg Difficulty: 0.8182
Total ratings: 11



ID: 3593056
Created: 7:39pm, 28 Nov 2018
There are various ways to Traverse a Tree. These are :
a) Pre-Order TraversalIn-Order TraversalBalance-Order TraversalPost-Order Traversal
b) Pre-Order TraversalDepth-Order TraversalIn-Order TraversalPost-Order Traversal
*c) Post-Order TraversalIn-Order TraversalLevel-Order TraversalPre-Order Traversal
Explanation: [Taken from the lecture notes]Post-Order Traversal:Process the nodes in the left sub-tree.Process the nodes in the right sub-tree.Process the current node.In-Order Traversal:Process the nodes in the left sub-tree.Process the current node.Process the nodes in the right sub-tree.Level-Order Traversal:Use a temp pointer variable and a queue of node pointers.Insert the root node pointer into the queue.While the queue is not empty:Dequeue the top node pointer and put it in temp.Process the node.Add the node�s children to queue if they are not NULL.Pre-Order Traversal:Process the current node.Process the nodes in the left sub-tree.Process the nodes in the right sub-tree.
Tags: Search, Trees
Author: lemesios10 (al951 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.2083
Total ratings: 24



ID: 3592746
Created: 5:34pm, 28 Nov 2018
Which of these algorithms should be the fastest to sort a randomly ordered linked-list?
a) Bubble sort
b) Quick sort
c) Insertion sort
*d) Merge sort
Explanation: While quicksort and mergesort are comparable in the best and average case, the worst case scenario of quick sort is n2, while merge sort's still n log(n)
Tags: Lists, Sorting, Complexity
Author: jn475 (jn475 - permission to this course revoked)
Avg Rating: 3.4400
Avg Difficulty: 0.7500
Total ratings: 16



ID: 3592518
Created: 4:22pm, 28 Nov 2018
What is the best, worst, and average/amortised runtime of adding an element to an arraylist?
*a) Best: 1Worst: nAmortised: 1
b) Best: 1Worst: 1Amortised: 1
c) Best: 1Worst: nAmortised: n+1
d) Best: nWorst: nAmortised: 1
e) Best: nWorst: 1Amortised: n
Explanation: Amortized analysis doesn't naively multiply the number of invocations with the worst case for one invocation.
Tags: Complexity
Author: bgc (ac2291 - permission to this course revoked)
Avg Rating: 3.0700
Avg Difficulty: 0.9333
Total ratings: 15



ID: 3592484
Created: 4:12pm, 28 Nov 2018
Which of these statements about hash tables is FALSE?
a) Open hash table searching is almost always MORE runtime efficient than linear probing
b) Only use a linear probing search if no items will be removed from the hash table
c) The load factor is the maximum number of values divided by the number of 'buckets'
*d) A hash function is a function that creates an array
Explanation: A hash function computes the index of a key in an array. In a hash table, there are fewer array positions than the keys, so the position of the key in the array has to be computed, this is done using the hash function.
Tags: Search, Hashtables
Author: bgc (ac2291 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.6875
Total ratings: 16



ID: 3591743
Created: 12:23pm, 28 Nov 2018
Which of the following sets of sorting algorithms are all stable?
a) Selection, Bubble, Merge
b) Merge, Insertion, Heap
*c) Bubble, Merge, Insertion
d) Shell, Quick, Insertion
e) Selection, Shell, Quick
Explanation: Out of Selection, Insertion, Bubble, Shell, Quick, Merge and Heap sorts, only Insertion, Bubble and Merge sorts are stable.
Tags: Sorting
Author: liampugh (ljp67 - permission to this course revoked)
Avg Rating: 4.1400
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3591506
Created: 10:04am, 28 Nov 2018
What will the following list of numbers look like after 2 iterations of a bubble sort:6, 5, 3, 4, 1, 8, 7, 2, 9
*a) 3, 4, 1, 5, 6, 2, 7, 8, 9
b) 1, 2, 3, 4, 5, 6, 7, 8, 9
c) 4, 1, 3, 5, 6, 2, 7, 8, 9
d) 3, 4, 1, 5, 6, 2, 7, 9, 8
e) 3, 4, 5, 1, 6, 2, 7, 8, 9
Explanation: After the first iteration:5, 3, 4, 1, 6, 7, 2, 8, 9After the second iteration:3, 4, 1, 5, 6, 2, 7, 8, 9
Tags: Sorting
Author: emw55 (emw55 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3591497
Created: 9:58am, 28 Nov 2018
If a function f(x), has (n^2) time complexity, which of the following statements is false, under large values for n?
*a) f(x) will complete in at most quadratic time
b) f(x) will not complete in linear time
c) f(x)will on average take linear time to complete
Explanation: If an algorithm has big Omega runtime complexity of n squared, then the lower bound is n squared, so we cannot say for sure that the upper bound is also quadratic, it could be significantly higher.As the lower bound is quadratic however, we know it will not complete in linear time, and that the average is not necessarily linear time.
Tags: Complexity
Author: liampugh (ljp67 - permission to this course revoked)
Avg Rating: 2.7500
Avg Difficulty: 0.5833
Total ratings: 12
==> Comment 1: The correct answer is that f(x) will compute in at LEAST linear time.If f(x) computes in at most linear time then you'd want to use big O notation. (by: nmparrott [nmp31])



ID: 3591494
Created: 9:55am, 28 Nov 2018
If I was to add the number 8 to the following tree, what type of balancing algorithm will be required: (4) / \ (2) (6) \ (9)
a) Anticlockwise with (9) and (8) then Clockwise with (6), (9) and (8)
b) Clockwise with (9) and (8) and then Clockwise with (6), (9) and (8)
*c) Clockwise with (9) and (8) and then Anticlockwise with (6), (9) and (8)
d) Anticlockwise with (9) and (8) and then Anticlockwise with (6), (9) and (8)
e) It cannot be balanced
Explanation: After the first Clockwise the tree looks like: (4) / \ (2) (6) \ (8) \ (9)And then after the Clockwise rotation it becomes: (4) / \ (2) (8) / \ (6) (9)which is now balanced
Tags: Trees
Author: emw55 (emw55 - permission to this course revoked)
Avg Rating: 3.7400
Avg Difficulty: 0.8421
Total ratings: 19



ID: 3643014
Created: 9:50am, 28 Nov 2018
If a measuring instrument is described as "precise", what does it mean?
*a) Repeated measurements of the same value conducted with this instrument will yield results that are very close together.
b) The measurement provided by the instrument will be very close to the true value.
c) The instrument allows you to measure a value to a large number of decimal places.
Explanation: A correctly describes precision, whilst B describes the accuracy of an instrument and C the resolution of the instrument, see Lecture Notes "Complexity 1"
Tags: Applications
Author: liampugh (ljp67 - permission to this course revoked)
Avg Rating: 3.7200
Avg Difficulty: 0.3696
Total ratings: 46



ID: 3591729
Created: 9:45am, 28 Nov 2018
Which of the following definitions correctly describes the meaning of "accuracy"?
*a) How close a measured value is to the real value being measured.
b) The "closeness" with which repeated measurements of the same value occur.
Explanation: A describes accuracy, while B describes the precision of an instrument, see Lecture Notes "Complexity 1".
Tags: Applications
Author: liampugh (ljp67 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.2381
Total ratings: 21



ID: 3591475
Created: 9:45am, 28 Nov 2018
In the following skip list, which elements would be compared with "d", including the lane that the program is in at that moment, before "d" is found:Lane 1: "a" "e"Lane 2: "a" "c" "e"Lane 3: "a" "b" "c" "d" "e"
a) "a" and "e" in lane 1"a", "c" and "e" in lane 2"a", "b", "c" and "d" in lane 3
*b) "a" and "e" in lane 1"c" and "e" in lane 2"d" in lane 3
c) "a" and "e" in lane 1"a", "c" and "e" in lane 2"a", "b", "c" and "d" in lane 3
d) "a" and "e" in lane 1"a", "c" and "e" in lane 2"c" and "d" in lane 3
Explanation: In the first lane it will see that "d" is greater than "a" and less than "e"In the second lane it will start at "a", but it won't compare it with "a" again, and see it is greater than "c" and less than "e"As it knows it is greater than "c" it will start from "c" in the third lane and find it immediately
Tags: Lists
Author: emw55 (emw55 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.7857
Total ratings: 14



ID: 3590427
Created: 12:56am, 28 Nov 2018
Merge sort algorithm takes 69s to sort an array of 1000 items. How long would it take (approximately) to sort an array of 10000 items?
a) 690
*b) 921
c) 69
d) None of the above
Explanation: Merge sort has an average complexityT(n log(n)), so for a 10x increase in items, ballpark estimate would be 10 times and a bit.
Augmented explanation 1: find fixed variable x:1000 * log(1000) * x = 69 secondsx = 0.023for n = 10,000 we have:10,000 * log(10,000) * 0.023 = 920 seconds (by: avb49 [avb49])
Tags: Sorting, Complexity
Author: jn475 (jn475 - permission to this course revoked)
Avg Rating: 3.6500
Avg Difficulty: 1.1176
Total ratings: 17



ID: 3590379
Created: 12:39am, 28 Nov 2018
Which of these is NOTa characteristic of a B+ tree?
a) Leaves have the same depth
b) All nodes are always more than 50% full, except for root node
c) It is often used for database storage
*d) Data is stored in the leaves
Explanation: B+ tree is very streamlined and leaves only contain pointers to the data (ie where it is stored on the disk).
Tags: ADTs, Trees
Author: jn475 (jn475 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.7500
Total ratings: 16



ID: 3592130
Created: 12:03am, 28 Nov 2018
If this is an unbalanced AVL tree, what are the new leaf nodes of the tree once it has been balanced? (7) / \ (5) (10) / \ (4) (9) / (1)
*a) Root 5: leaf nodes 1, 9, 10.
b) Root 9: leaf nodes 1, 7, 10.
c) Root 4: leaf nodes 5, 9, 10.
d) The tree cannot be balanced.
e) None of the above/other implementation.
Explanation: Use of the re-balancing and rotation algorithms to create a tree that looks like this: (5) / \ (4) (7) / \ \ (1) (9) (10)However other implementations using the right sub-tree instead is also valid, as long as all balance factors are -1, 0, or 1.
Tags: Trees
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 2.3900
Avg Difficulty: 0.7222
Total ratings: 18
==> Comment 1: An AVL tree is a type of binary tree. In a binary tree, given a node, ALL nodes in the left subtree must be less than the nodes value - so surely 9 being in 5s left subtree is incorrect? (by: bgc [ac2291])
====> Reply 1: I was thinking this too



ID: 3590264
Created: 11:53pm, 27 Nov 2018
In an implementation of an AVL Tree, why would you want to rebalance the tree after insertion?
a) In order to ensure that inserting the node is as fast as possible.
b) To make the tree more space efficient.
*c) So that searching through the tree will always be in O(log n) time.
d) You don�t rebalance the tree in AVL implementation
Explanation: The purpose of balancing the tree is to ensure that all the nodes are as evenly distributed as necessary for the search to remain in O(log n) time. If there was no re-balancing, then it is possible to end up with a tree that has a height of N, which would make searching through it linear (O(n)). As such, we re-balance after every insertion in order to ensure this.
Tags: Search, Trees, Complexity
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.3333
Total ratings: 21
==> Comment 1: Surely, the aim of balancing a tree is to ensure all operations are in log n time, this would also include insertion which would suggest A is also true? (by: nlc29 [nlc29])



ID: 3590247
Created: 11:49pm, 27 Nov 2018
Which of these statements are true?
a) Quicksort is the fastest search algorithm in every case.
b) Insertion sort in unstable and easy to implement.
*c) Merge sort requires extra memory space in order to be implemented properly.
d) Shell sort is inappropriate for use in embedded systems due to its memory handling properties.
Explanation: Merge sort requires extra RAM than other algorithms because during the splitting functions it needs to create new arrays to store the split arrays at different sorting levels, whereas other sorting algorithms mainly operate on the array that already exists.
Tags: Sorting, Search, Complexity
Author: jtp42 (jtp42 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3571
Total ratings: 14



ID: 3589971
Created: 10:14pm, 27 Nov 2018
What kind of traversal does this describe?1)process nodes in left subtree2)process current node3)process nodes in right subtree
a) Pre-order
b) Post-order
*c) In-order
d) Level Order
Explanation: pre-order = current, LST, RSTpost-order = LST,RST, currentlevel order = level 1, level 2 etc...
Tags: Trees
Author: fernyhough (hdf22 - permission to this course revoked)
Avg Rating: 4.2300
Avg Difficulty: 0.0455
Total ratings: 22



ID: 3589961
Created: 10:10pm, 27 Nov 2018
What is the equation for the load of a hashtable?
*a) L = Max number of keys to insert / Total buckets in array
b) L = Total buckets in array / Max number of keys to insert
c) L = Average number of keys to insert / Total buckets in array
d) L = Total buckets in array / Average number of keys to insert
e) None of the above
Tags: Hashtables
Author: fernyhough (hdf22 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.4615
Total ratings: 13



ID: 3589939
Created: 10:06pm, 27 Nov 2018
Which of the choices below best describes mergesort?
a) Mergesort can't be applied to linked list, is stable, complexity O(nlogn)
b) Mergesort can be applied to a linked list, isn't stable, complexity O(logn)
c) Mergesort can be applied to a linked list, is stable, complexity O(logn)
d) Mergesort can't be applied to a linked list, isnt stable, complexity O(nlogn)
*e) Mergesort can be applied to a linked list, is stable, complexity O(nlogn)
Explanation: O(nlogn) because for keep dividing piles in half until pile just 1 item = logn -- do it for n items = nlogn
Tags: Sorting
Author: fernyhough (hdf22 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.8333
Total ratings: 18



ID: 3589777
Created: 9:10pm, 27 Nov 2018
Which of these statements is FALSE
a) The average case (i.e. the average number of steps) of a linear search is N/2
b) The worst case (i.e. the average number of steps) of a linear search is N
c) The average runtime of interpolation search is loglog(N)
*d) The average case (i.e. the average number of steps) of binary search is N
Explanation: The estimated total steps is log_2(N)We know that log_2(N) is equal to the number of times you can divide N by 2 before you reach a value of 1.
Author: bgc (ac2291 - permission to this course revoked)
Avg Rating: 4.2100
Avg Difficulty: 0.6429
Total ratings: 14



ID: 3588906
Created: 4:10pm, 27 Nov 2018
When constructing a perfectly balanced binary tree given the following numbers: 40, 5, 37, 9, 100, 28, 59Which will be leaf nodes? (left to right)
a) 8, 37, 59, 100
b) 9, 37, 59
*c) 5, 28, 40, 100
d) 8, 9, 37, 40
Explanation: Tree lecture 2 37 9 59 5 28 40 100
Tags: Trees
Author: dre31 (dre31 - permission to this course revoked)
Avg Rating: 4.2700
Avg Difficulty: 0.8182
Total ratings: 11



ID: 3588824
Created: 3:45pm, 27 Nov 2018
Who invented AVL trees?
*a) Georgy Adelson-Velsky & Evgenii Landis
b) Gregory Aitchison-Vanstone & Eimear Lakner
c) Gerald Anderton-Veale & Edmond Latham
d) Gilbert Amstead-Vernon & Eamon Ledgard
e) George Ainsley-Vallins & Ellison Lockey
Explanation: Trees 3rd lecture
Tags: Trees
Author: dre31 (dre31 - permission to this course revoked)
Avg Rating: 2.7900
Avg Difficulty: 0.8571
Total ratings: 14



ID: 3588348
Created: 12:03pm, 27 Nov 2018
What is the notation for the upper bound time complexity?
a) T
*b) O
c) O
Explanation: The answer is O.
Tags: Complexity
Author: bu220 (bu220)
Avg Rating: 3.2100
Avg Difficulty: 0.2105
Total ratings: 19



ID: 3588334
Created: 11:58am, 27 Nov 2018
What is an advantage of a List over an array?
a) Lists require less storage space to store the same amount of data.
*b) It is faster to insert elements into a list.
c) It is faster to access the nth element in a list than to access the nth element in an array.
Explanation: To add an element in the nth place in a list only the n-1th next pointer has to be changed where as in a array all elments in a position greater than n have to be moved a place higher.
Tags: ADTs, Lists
Author: bu220 (bu220)
Avg Rating: 3.5600
Avg Difficulty: 0.4400
Total ratings: 25
==> Comment 1: Inserting into an array is also O(1) if the array is large enough to hold the new data. The advantage of a list is faster dynamic memory allocation. (by: iwonderwhothisislol [eg574])



ID: 3588320
Created: 11:49am, 27 Nov 2018
Which sorting algorithm has the fastest average case?
*a) Quick sort
b) Selection sort
c) Merge sort
d) Insertion sort
e) Shell sort
Explanation: The time complexity of Quicksort is O(n log n) in the best case, O(n log n) in the average case, and O(n^2) in the worst case. This is the fastest average case for sorting algorithms.
Tags: Sorting
Author: bu220 (bu220)
Avg Rating: 1.9200
Avg Difficulty: 0.5000
Total ratings: 12
==> Comment 1: Quicksort and Mergesort have the same average case? (by: rm896 [rm896])



ID: 3587353
Created: 12:13am, 27 Nov 2018
Given the sorted list: 10, 16, 25, 33, 52, 58, 61, 70, 100, 140How many steps would a binary search take to find 10 in the list?
a) 2
*b) 3
c) 4
d) 5
Explanation: Step 1: midpoint is 52 so list is now:10, 16, 25, 33Step 2: midpoint is 16 so list is now:10, 16Step 3: midpoint is 10, therefore element found!So takes 3 steps :)
Augmented explanation 1: :) (by: lh949 [lh949])
Tags: Search
Author: lh949 (lh949 - permission to this course revoked)
Avg Rating: 3.2900
Avg Difficulty: 0.5714
Total ratings: 14



ID: 3587293
Created: 11:57pm, 26 Nov 2018
Which of the following applies to Selection Sort?
a) Stable and?(n log2n)
b) Unstable and?(n)
c) Stable and?(n2)
d) Stable and?(n1.25)
*e) Unstable and?(n2)
Explanation: Unstable as Selection Sort does not take into account the initial ordering of the elements in the list.The time complexity of Selection Sort is always?(n2) no matter what.
Tags: Sorting
Author: lh949 (lh949 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.2857
Total ratings: 14



ID: 3587161
Created: 10:51pm, 26 Nov 2018
In the given array, how many steps would it take to find the value '20' when using binary search?__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 |
a) 2
*b) 3
c) 4
d) 5
e) 6
Explanation: In the binary search algorithm we keep on dividing our search in half until we finally arrive at our value.Therefore each step of the algorithm would divide the array as follows:__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L M H__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L M H__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L H ^ Found in 3 steps
Tags: Search
Author: ec789@bath.ac.uk (ec789 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.6250
Total ratings: 16



ID: 3586644
Created: 6:54pm, 26 Nov 2018
With a load of 0.50, which of these statements are correct?
*a) Average number of steps to insert/find an item for a Closed hash table is 1.5Average number of steps to insert/find an item for anOpen hash table is 1.25
b) Average number of steps to insert/find an item for a Closed hash table is 2Average number of steps to insert/find an item for anOpen hash table is 1.5
c) Average number of steps to insert/find an item for a Closed hash table is 1.75Average number of steps to insert/find an item for anOpen hash table is 1.75
Explanation: Closed: with L=0.5, 0.5*(1+1/(1-L)) gives 1.5Open: with L=0.5, 1+0.5*L gives 1.25(Lecture 9)
Tags: Hashtables
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 3.5600
Avg Difficulty: 0.6250
Total ratings: 16



ID: 3586623
Created: 6:47pm, 26 Nov 2018
int[] arr;for ( int i = 0; i < n; i++ )arr[i] = 0;What is T(n), the number of elementary operations, that this algorithm performs
a) 3n+3
b) 3n2+2
c) 2n+2
*d) 3n+2
Explanation: Initialise the variable i once1Perform n+1 comparisons between 0 and n n+1Increment the variable i, n times nSet value in array n times n(Lecture 3)
Tags: Complexity
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 2.5800
Avg Difficulty: 1.0000
Total ratings: 12
==> Comment 1: It looks like the array has to be re-sized each iteration. This may affect the run time. (by: nmparrott [nmp31])
==> Comment 2: Is there not another initialisation of the array? (by: lm2066 [lm2066])



ID: 3586609
Created: 6:41pm, 26 Nov 2018
For a dictionary with 10,000,000 words in it, how many steps does the binary search algorithm take to find a particular word?
a) ~17
b) ~20
*c) ~23
d) ~1000
Explanation: log2(10,000,000) = 23.25
Tags: Search
Author: acp42 (acp42 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3586496
Created: 5:47pm, 26 Nov 2018
Which of these statements is the Big-Oh transitivity rule?
a) if g(n) = O(f1(n)) and h(n)=O(f2(n)) then g(n)+h(n)=O(max{f1(n),f2(n)})
*b) if f(n)=O(g(n)) and g(n)=O(h(n)) then f(n)=O(h(n))
c) if g(n)=O(f(n)) and h(n)=O(f(n)) then g(n)=O(h(n))
d) if g(n)=O(f1(n)) and h(n)=O(f2(n) then g(n)h(n)=O(f1(n)f2(n))
e) if f(n)=O(g(n)) and g(n)=O(h(n)) then h(n)=O(f(n))
Explanation: if f(n)=O(g(n)) and g(n)=O(h(n)) then f(n)=O(h(n))i.e if A<B & B<C then A<C
Tags: Complexity
Author: fernyhough (hdf22 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.7857
Total ratings: 14



ID: 3586494
Created: 5:46pm, 26 Nov 2018
Which of the following sorting algorithms has the same best-case and worst-case time complexities?
a) Bubble sort
*b) Merge sort
c) Quick sort
d) Shell sort
Explanation: Merge sort has worst case n log (n) and best case n log(n)
Tags: Sorting
Author: ilovecompsci12345 (mr662 - permission to this course revoked)
Avg Rating: 3.9000
Avg Difficulty: 0.3000
Total ratings: 10



ID: 3586450
Created: 5:31pm, 26 Nov 2018
What is the max number of comparisons needed to find a name with binary search in the following list:AaronAndreaBenBryceEmmaJamesJohnVictoria
a) 2
*b) 3
c) 4
d) 5
e) 6
Explanation: log(n)
Tags: Search
Author: ilovecompsci12345 (mr662 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.4500
Total ratings: 20
==> Comment 1: Is it not 8? You don't state that it's a perfectly balanced tree so it could beAaron - Andrea - Ben - Bryce - Emma - James - John - Victoria and you're searching for Victoria.Worst case is N, average is Log N = 3 (by: dr474 [dr474])
====> Reply 1: My bad, just re-read and it's binary search, not binary search tree - ignore my comment



ID: 3586428
Created: 5:23pm, 26 Nov 2018
A tree is a type of ....
a) Array
b) Hashtable
c) Sorting Algorithm
*d) Linked List
e) Algorithm
Explanation: In the first trees lecture
Tags: Trees
Author: ilovecompsci12345 (mr662 - permission to this course revoked)
Avg Rating: 3.1900
Avg Difficulty: 0.1905
Total ratings: 21



ID: 3586391
Created: 5:04pm, 26 Nov 2018
Suppose we have the following AVLTree. If we remove the root node 4 correctly, how could the binary treelook like after? (4) / \ / \ / \ / \ (2) (6) / \ / \ / \ / \ (1) (3) (5) (7) / \ / \ (0) (8)
a) 3 is the root, 0, 1, 5, and 8 are leaves
*b) 5 is the root, 0, 3, 6, and 8 are leaves
c) 6 is the root, 0, 1, 5, and 8 are leaves
d) The root node cannot be removed
e) None of the above
Explanation: The lecture slide states to replace the removal node's value by the greatest value of the left branchor the lowest value on the right branch.So if we chose 5 on the right branch, we would then need to balance the tree by rotating left on(6) \ (7) after rotate right = (7) \ / \ (8) (6) (8)then leave the left branch untouched to obtain leave nodes: 0, 3, 6, 8We can also choose 3 on the left branch, however, the leave nodes are balanced incorrectly.
Tags: Trees
Author: jh2699 (jh2699 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 1.2917
Total ratings: 24



ID: 3586032
Created: 2:33pm, 26 Nov 2018
Which of the following statements is true?
a) Merge Sort is not stable and has O(nlog(n)) complexity
b) Quick Sort is stable and has O(log(n)) complexity
*c) Selection Sort has an unstable default implementation and has O(n^2) complexity
d) Insertion Sort is unstable and has O(n) complexity
e) None of the above
Explanation: Merge Sort is stable and has O(nlog(n)) complexity.Quick Sort is not stable and has O(n^2) complexity.Insertion Sort is stable and has O(n^2) complexity.
Tags: Sorting, Complexity
Author: tmr38 (tmr38 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.4706
Total ratings: 17



ID: 3585358
Created: 9:38am, 26 Nov 2018
Which of these properties do not apply to big-Oh notation?
a) Scaling:For all c>0: cf(n) = O(f(n))
b) Summation:If g(n) = O(f1(n)) and h(n) = O(f2(n)),then g(n)+h(n) = O(max{f1(n), f2(n)})
c) Transitivity:If f(n) = O(g(n)), and g(n) = O(h(n)),then f(n) = O(h(n))
*d) Proportionality:For all c>0: f(cn) = O(cf(n))
e) Products:If g1(n) = O(f1(n)) and g2(n) = O(f2(n)),then g1(n)g2(n) = O(f1(n)f2(n))
Explanation: You have Proportionality:For all c>0: f(cn) = O(cf(n))confused withScaling:For all c>0: cf(n) = O(f(n)).Multiplying the n-value it acts on does not affect the order of the whole function
Tags: Complexity
Author: leogriff (ljig20 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.5000
Total ratings: 8



ID: 3585355
Created: 9:35am, 26 Nov 2018
Let c,N be real numbers, and f(n), g(n) be time complexity functions.The function f(n) is said to be O(g(n)) if:
a) For some value of c, f(n) > c*g(n), for all n>N.
b) For some value of c, f(n) < g(n), for all n>N.
c) For some value of c, f(n) < c*g(n), for all n<N.
*d) For some value of c, f(n) < c*g(n), for all n>N.
e) None of the above.
Explanation: A) This is the definition of big-omegaB) This lacks the constant c in the definitionC) This is for all n<N (inequality is wrong way round) i.e. the statement is true before N, rather than after ND) This is the correct choice
Tags: Complexity
Author: jcm50 (jcm50 - permission to this course revoked)
Avg Rating: 3.3600
Avg Difficulty: 0.4545
Total ratings: 11



ID: 3588151
Created: 9:29am, 26 Nov 2018
Which of these is the exact bound of asymptotic complexity?
a) Big-Omega, O(f(n))
b) Big-Theta, ?(f(n))
c) Big-O, (f(n))
*d) Big-Theta, T(f(n))
Explanation: Big-Theta, T(f(n)), if the correct notation.
Tags: Complexity
Author: leogriff (ljig20 - permission to this course revoked)
Avg Rating: 2.3300
Avg Difficulty: 0.5000
Total ratings: 12



ID: 3584272
Created: 7:09pm, 25 Nov 2018
Which of the following sorts is the fastest for a small set of data
a) Quick sort
b) Merge sort
c) Shell sort
d) Heap sort
*e) Insertion sort
Tags: Sorting
Author: wleeanglin (wla24 - permission to this course revoked)
Avg Rating: 3.3300
Avg Difficulty: 0.6111
Total ratings: 18



ID: 3584271
Created: 7:08pm, 25 Nov 2018
Which of the following sorting algorithms is the fastest for nearly sorted data?
a) Heap sort
b) Quick sort
*c) Insertion sort
d) Merge sort
e) Bogosort
Explanation: Insertion sort only needs a few cycles in order to fully sort a nearly sorted list but becomes slower when the data is more out of order
Tags: Sorting
Author: wleeanglin (wla24 - permission to this course revoked)
Avg Rating: 3.9200
Avg Difficulty: 0.4615
Total ratings: 13



ID: 3650700
Created: 7:04pm, 25 Nov 2018
Which of the following sorts is not a real sort?
a) Insertion Sort
b) Quicksort
c) Selection Sort
*d) Dump Sort
Tags: Sorting
Author: wleeanglin (wla24 - permission to this course revoked)
Avg Rating: 1.6500
Avg Difficulty: 0.0968
Total ratings: 31



ID: 3584134
Created: 5:25pm, 25 Nov 2018
Which statement is incorrect?
a) Linear search finds the element in O(n) time.
b) Binary search finds an element in O(log n) time.
c) Interpolation search finds an element in O(log log N) time.
*d) None of the above, all statements are correct.
Explanation: All statements are correct as there corresponding runtimes are correct.
Tags: Search
Author: bh598 (bh598 - permission to this course revoked)
Avg Rating: 3.5900
Avg Difficulty: 0.9412
Total ratings: 17



ID: 3584105
Created: 5:05pm, 25 Nov 2018
Which definition for the types of traversal is incorrect?
a) POST ORDER TRAVERSAL: 1. Process the nodes in the left sub-tree. 2. Process the nodes in the right sub-tree. 3. Process the current node
b) IN-ORDER TRAVERSAL 1. Process the nodes in the left sub-tree. 2. Process the current node. 3. Process the nodes in the right sub-tree.
*c) PREORDER TRAVERSAL1. Process the current node.2. Process the nodes in the right sub-tree.3. Process the nodes in the left sub-tree.
Explanation: In preorder traversal, the left sub-tree nodes are processed before the righ sub-tree nodes.
Tags: Trees
Author: bh598 (bh598 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.2308
Total ratings: 13



ID: 3584094
Created: 4:58pm, 25 Nov 2018
It is faster to remove an item from the middle of a linked list or from the middle of an array?
*a) Linked list
b) Array
c) Neither
Explanation: Removing from a linked list only takes a few steps once we have found the item we'd like to remove. When using arrays, we'd have to shift all the items one slot to the left after removal.
Tags: Lists
Author: bh598 (bh598 - permission to this course revoked)
Avg Rating: 2.6900
Avg Difficulty: 0.5625
Total ratings: 16
==> Comment 1: Unless you are given a reference to where the item is in the linked list which you'd like to remove, both have complexity O(n) (by: nmparrott [nmp31])



ID: 3584071
Created: 4:42pm, 25 Nov 2018
How many buckets would you need in your open hash table If you wish to store 10,000 items in an average of 1.45 steps? (To the nearest integer)
a) 6,897
*b) 11,111
c) 3,448
d) 13,793
e) 9,000
Explanation: # steps = 1 + L/2 = 1.45therefore L = 0.9L = max keys to insert / total # of buckets in arrayso total # buckets in array = max keys to insert / L = 10,000 / 0.9 = 11,111
Augmented explanation 1: # steps = 0.5[1+1/(1-L)] = 1.45Therefore 1+1/(1-L) = 2.91/(1-L) = 1.91-L = 1/1.9L = 1-1/1.9L= max keys to insert / total # of buckets in arrayL = 10000/(1-1/1.9)L = 20,833 (by: sheppypeppy [mls46])
Tags: Hashtables
Author: t_collins1710 (tpc41 - permission to this course revoked)
Avg Rating: 2.6700
Avg Difficulty: 1.0000
Total ratings: 9



ID: 3583943
Created: 3:15pm, 25 Nov 2018
Given the following selection of integers,2,5,11,14,17,24,51Which of the following would be valid AVL trees:1: 14 11 17 2 5 24 512: 24 14 51 5 17 2 11 3: 14 5 24 2 11 17 514: 51 17 24 2 5 11 14
a) 1
b) 1 and 4
c) 2 and 3
*d) 3
e) None of the above are valid AVL trees.
Explanation: 3 is the only valid AVL tree, as it is the only BSTin which the heights of the left and right sub-trees of each node differ at most by 1.
Tags: Trees
Author: t_collins1710 (tpc41 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.6818
Total ratings: 22



ID: 3583089
Created: 9:48pm, 24 Nov 2018
The following image represents which option in regards to its precision and accuracy.
a) Low AccuracyLow Precision
*b) Low AccuracyHigh Precision
c) High AccuracyLow Precision
d) High AccuracyHigh Precision
Explanation: Accuracy determines how close you are to the real value, in the case of the image, it is clearly far off from the intended target! Thus a low accuracy.Precision determines how close measurements are together, in the case of the image, it is clear that all shots are close together! Thus a high precision.
Tags: Complexity
Author: ec789@bath.ac.uk (ec789 - permission to this course revoked)
Avg Rating: 3.8700
Avg Difficulty: 0.3478
Total ratings: 23



ID: 3582955
Created: 7:58pm, 24 Nov 2018
You should only use a closed hash table (with linear probing) if __________
a) You are never need to search for an element.
*b) You never need to remove elements.
c) You never need to add new elements.
Explanation: If we have several values with the same hash, which have been linearly probed in the hash table, and we remove one of these items, it creates a gap. This gap means that when searching for an element, we may abort our search prematurely when we reach the gap and therefore not find an element which is actually in the table.
Tags: Hashtables
Author: tmr38 (tmr38 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.1667
Total ratings: 18



ID: 3582926
Created: 7:47pm, 24 Nov 2018
Which of the following unbalanced AVL trees are impossible to balance? (NOTE: For these trees, elements that have the same value as the current node are placed to the left of the current node)1) 4 4 42) 9 8 83) 2 2 14) 5 1 7 1 1
a) 2, 3 and 4
b) Only 4
*c) 1 and 3
d) Only 1
e) 2 and 3
Explanation: 1) cannot be balanced because same elements go the left of each other and therefore you cannot have 4 4 42) can be balanced to 8 using right rotation. 8 93) cannot be balanced because neither 2 nor 1 are allowed due to the same elements to the left consistency rule. 1 2 2 24) can be balanced to 1 using right rotation on the root node (5). 1 5 1 7
Tags: Trees
Author: tmr38 (tmr38 - permission to this course revoked)
Avg Rating: 4.1300
Avg Difficulty: 1.0000
Total ratings: 23



ID: 3582726
Created: 4:29pm, 24 Nov 2018
what is the meaning of precision
*a) when measuring repeatedly we get similar results
b) when measuring repeatedly we don't get similar results
c) when measuring repeatedly we get correct results
Explanation: lecture notes 3 slide 5
Author: rab82 (rab82 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.1176
Total ratings: 17



ID: 3582705
Created: 4:06pm, 24 Nov 2018
what is the maximum height of a perfectly balanced search tree
a) n
*b) log n
c) (log n)2
d) n-1
e) n/2
Tags: Search, Trees
Author: rab82 (rab82 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2143
Total ratings: 14



ID: 3582700
Created: 4:03pm, 24 Nov 2018
how do you calculate the balance of a tree or sub-tree
a) number of nodes on the right side - the number of nodes on the left side
*b) the depth of nodes on the right side - the depth of nodes on the left side
Explanation: lecture notes 15 -slide 11
Tags: Trees
Author: rab82 (rab82 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 0.0714
Total ratings: 14



ID: 3582634
Created: 3:02pm, 24 Nov 2018
What is in the "root" object of an empty tree?
a) A 'null' node (i.e.with 'null' children and 'null' as it's value)
b) Some dirt and some foliage
c) "Null"
*d) Null
e) 0
Explanation: The root is a pointer and so will point to the first element, if it exists.If the tree is empty, there is no such first element and so it will point to Null - the pointer doesn't point to anything."Null" is incorrect as it is a stringA 'null' node is incorrect as it is a node and so an element of the tree exists, making it non-empty.
Tags: Trees
Author: leogriff (ljig20 - permission to this course revoked)
Avg Rating: 3.2500
Avg Difficulty: 0.5714
Total ratings: 28



ID: 3582626
Created: 2:57pm, 24 Nov 2018
Which of these sorting methods is slowest?
*a) Quick Sort
b) Merge Sort
c) Heap Sort
Explanation: Quick sort is slowest as, although it has an ?(n log_2(n)) average, ?(n^2) for already/mostly/reverse ordered array.Merge sort and Heap sort are always ?(n log_2(n)).
Tags: Sorting
Author: leogriff (ljig20 - permission to this course revoked)
Avg Rating: 3.0600
Avg Difficulty: 0.6250
Total ratings: 16



ID: 3582620
Created: 2:54pm, 24 Nov 2018
Which of these are stable?
a) Quick Sort
b) Heap Sort
c) Shell Sort
*d) Merge Sort
e) Selection Sort
Explanation: Merge sort is stable - there are no jumps when the list is merged
Tags: Sorting
Author: leogriff (ljig20 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.3704
Total ratings: 27



ID: 3582506
Created: 12:49pm, 24 Nov 2018
What is the exact bound complexity for the following code:for ( int i= 0; I < n; i++ ) for ( int j = 99; j < n*n; j++ ) sum++;
a) n^2
*b) n^3
c) log(n)
d) None of the above
Explanation: First loop is run n times,Second loop is run n^2 times,n * n^2 = n^3
Tags: Complexity
Author: gst28 (gst28 - permission to this course revoked)
Avg Rating: 3.8700
Avg Difficulty: 0.6957
Total ratings: 23



ID: 3582500
Created: 12:39pm, 24 Nov 2018
Is quicksort stable? What is its worst case complexity?
a) Stable, n^2
b) Stable,n*log(n)
*c) Unstable, n^2
d) Unstable,n*log(n)
Explanation: https://moodle.bath.ac.uk/pluginfile.php/1138973/mod_resource/content/3/DA-Lecture11-Sorting2.pdf - See slide 16 onwards for full explanation
Tags: Sorting, Complexity
Author: gst28 (gst28 - permission to this course revoked)
Avg Rating: 3.5200
Avg Difficulty: 0.3810
Total ratings: 21



ID: 3582492
Created: 12:34pm, 24 Nov 2018
In an AVL Tree, what does it mean if a node has a balance value of -1 ?
a) The node�s right subtree is 1 higher than the left
b) The node�s left and right subtrees have the same height
c) The node has no children
*d) The node�s left subtree is 1 higher than the right
Explanation: https://moodle.bath.ac.uk/pluginfile.php/1144766/mod_resource/content/2/DA-Lecture15-Trees3.pdf - see slide 6 and onwards for full explanation :)
Tags: ADTs, Trees
Author: gst28 (gst28 - permission to this course revoked)
Avg Rating: 3.4500
Avg Difficulty: 0.3636
Total ratings: 22



ID: 3582410
Created: 10:36am, 24 Nov 2018
What is interpolation search?
a) Another name for linear search
*b) A search similar to binary search but with choosing a different element (eg. not the halfway one)
c) A search that enables us to find an element in less than N steps
Explanation: Interpolation search is like binary search but we choose a different element (eg. Not the halfway element).
Tags: Search
Author: mb24 (mb2412 - permission to this course revoked)
Avg Rating: 3.8200
Avg Difficulty: 0.5882
Total ratings: 17



ID: 3582405
Created: 10:30am, 24 Nov 2018
True or False - Transitivity applies when using Big O, Theta and Omega?
*a) True
b) False
Explanation: It is true. One of the Big O rules (and for Theta and Omega) is that if A = B, and B = C, then also A = C. If f(n) = O(g(n)), and g(n) = O(h(n)), then f(n) = O(h(n))
Tags: Complexity
Author: mb24 (mb2412 - permission to this course revoked)
Avg Rating: 3.5300
Avg Difficulty: 0.4706
Total ratings: 17



ID: 3582392
Created: 10:11am, 24 Nov 2018
When using QuickSelect, we use the k-th smallest element to simplify quick sort. On average, how many levels will there be?
a) log(n^2)
*b) log(n)
c) n
d) n^2
e) n^3
Explanation: The answer is log(n) levels. It takes on average log(n) levels of partitions in order to get down to single elements to sort.
Tags: Sorting, Complexity
Author: mb24 (mb2412 - permission to this course revoked)
Avg Rating: 3.3000
Avg Difficulty: 0.7000
Total ratings: 10



ID: 3581136
Created: 3:22pm, 23 Nov 2018
Calculate the output of the pre-order traversal algorithm in the following tree a / \ b e /\ /\c d f g/\ /h i j
*a) a, b, c, h, i, d, e, f, g, j
b) h, c, i, b, d, a, f, e, g, j
c) h, i, c, d, b, f, j, g, e, a
Explanation: A as the steps for pre-order traversal are1) Process the current node2) Process the left node3) Process the right node
Tags: Trees
Author: tjs66 (tjs66 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.3333
Total ratings: 15



ID: 3581109
Created: 3:04pm, 23 Nov 2018
Calculate the average number of steps needed to find an empty space in a hash table when the table is intended to have 57 keys and has 145 buckets in the array.
a) 1.01 steps
*b) 1.32 steps
c) 1.5 steps
d) 2.2 steps
Explanation: Load Factor = Max intended keys / total bucketsLF = 57/145 = 0.393...Average Steps =for L < 1.0Steps == 1.323...
Tags: Hashtables
Author: tjs66 (tjs66 - permission to this course revoked)
Avg Rating: 4.3100
Avg Difficulty: 0.8125
Total ratings: 16



ID: 3581091
Created: 2:51pm, 23 Nov 2018
If an algorithm takes 1 second to process 1,000 elements and takes 8,000 seconds to process 20,000 results, what is its complexity?
a) O(n)
b) O(n2)
*c) O(n3)
d) O(log n)
e) O(n log n)
Explanation: For O(n3), doubling the value of n increases T by a factor of 8.20,000 / 1,000 = 20 - the factor increase of n203 = 8,000 seconds, so the complexity is O(n3)
Tags: Complexity
Author: tjs66 (tjs66 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 0.7692
Total ratings: 13



ID: 3581354
Created: 2:38pm, 23 Nov 2018
Which of the following statements comparing linked lists with arrays are true:A) In a Linked List, it would be faster to get to the 110th item.B) In a Linked List, it would be faster to remove an item from the middle of it.C) In an Array, it would be be faster to insert an item in the front of it.D) Arrays use less memory since they do not use storage for pointers.
a) Only A and C
b) Only B and C
*c) Only B and D
d) Only D
e) Only A and D
Explanation: A) Arrays are faster in this case, since in a Linked List you need to go through 109 positions in this case to reach the 100th position, where as you can access the 110th item in an Array in one go.B) In a Linked List, there is no shifting of elements when removing an item, where as in an Array you need to shift all the elements left one slot.C) In an Array, you need to shift all the items to the right one slot in order to insert the new item, where as in a Linked List you can add a new element in a few steps. (involving updating pointers)D) A Linked List uses pointers, so it needs extra storage for the pointers, where as an Array does not.
Tags: Lists
Author: lemesios10 (al951 - permission to this course revoked)
Avg Rating: 4.3200
Avg Difficulty: 1.0000
Total ratings: 25
==> Comment 1: For B, it is only faster if you're given the location of the item to be removed, otherwise you'd need to search for it so it wouldn't be faster than array as they both have O(n) complexity. (by: nmparrott [nmp31])



ID: 3581070
Created: 2:33pm, 23 Nov 2018
Which of the following statements is correct?
a) Selection sort is stable and always has complexityO(n^2)
b) Insertion sort is stable and always has complexityO(log(n))
*c) Merge sort is stable and always has complexityO(nlog(n))
d) Bubble sort is unstable and always has complexityO(n)
e) None are true
Tags: Search, Complexity
Author: izzyp1 (ip334 - permission to this course revoked)
Avg Rating: 3.6700
Avg Difficulty: 0.7333
Total ratings: 15



ID: 3581055
Created: 2:20pm, 23 Nov 2018
Given a closed hash table with 50 buckets, what is the average number of steps it will take to insert/find an item if the maximum number of keys to insert is 40?
*a) 3
b) 2.5
c) 6
d) 0.8
e) 4
Explanation: Load = 40/50 = 0.8Average number of steps = 1/2(1 + 1/(1-load)) = 1/2(1+ 1/0.2)) = 3
Tags: Hashtables
Author: izzyp1 (ip334 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6111
Total ratings: 18



ID: 3581029
Created: 2:00pm, 23 Nov 2018
What is the Time Complexity for Binary Search?
a) O(n^k)
b) O(n log n)
*c) O(log n)
d) O(2^n)
Explanation: Imagine you try to find page 30 in a book of 100 pages:You first take the half of 100, which is 50. Then you ask yourself, is 30 < 50? The answer is yes, so you take the half of the pages on the LEFT of 50.You reach page 25.Then ask yourself again, is 30 < 25? The answer is no, so you take the half of the pages on the RIGHT of 25.Then you reach page 38. You keep repeating this process until you reach page 30.Thus by doing 1/2 every time, the time complexity of Binary Search is found to be O(log n).
Tags: Search, Complexity
Author: lemesios10 (al951 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.2222
Total ratings: 18

ID: 3583918
Created: 1:57pm, 23 Nov 2018
If f(n) = 2^n+ 10, g(n) = 5nlog(n), and h(n) = n^2 + log(n), which of the following statements is true?
a) h(n) = O(g(n)), h(n) = O(f(n)), f(n) = O(h(n))
b) g(n) = ?(h(n)), f(n) = O(g(n)), f(n) = ?(h(n))
*c) f(n) = ?(h(n)), g(n) = O(h(n)), h(n) = O(f(n))
d) h(n) = O(f(n)), g(n) = ?(h(n)), h(n) = O(g(n))
e) None are true
Explanation: In order of increasing complexity, the functions go g(n), h(n), f(n).So h(n) is a lower bound for f(n), h(n) is an upper bound for g(n), and f(n) is an upper bound for h(n).
Tags: Complexity
Author: izzyp1 (ip334 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 1.2941
Total ratings: 17



ID: 3580821
Created: 11:48am, 23 Nov 2018
How many comparisons does it take to sort the following numbers using quick sort?8 9 7 6 4
a) 5
b) 7
*c) 6
d) 2
e) none of the above
Tags: Sorting
Author: ses59 (ses59 - permission to this course revoked)
Avg Rating: 2.3600
Avg Difficulty: 0.8182
Total ratings: 11



ID: 3579452
Created: 9:49pm, 22 Nov 2018
Complete this sentence:To sort N books, the runtime for _________ is ___ .
a) Selection Sort -?(N)
b) Insertion Sort -?(N^3)
c) Insertion Sort -?(NlogN)
*d) Selection Sort -?(N^2)
Explanation: For Selection Sort: it will take N swap steps, plus N + N-1 + N-2 + ... + 2 + 1 steps to find the smallest book. So for N books, you will need N^2 steps to sort them.For Insertion Sort: the runtime is also?(N^2) in average, 1 step in round 1 + 2 steps in round 2 + ... + N-1 steps in the last round, so N^2.
Tags: Sorting
Author: leabaviere (lcyb20 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2500
Total ratings: 12



ID: 3579397
Created: 9:29pm, 22 Nov 2018
Open hash tables are almost always less runtime efficient than closed hash tables
a) True
*b) False
Explanation: They are almost always MORE efficient. Indeed, for .10 loads, both of the hash tables are going to take an average of 1.05 steps, but when it comes to .90 loads, the closed hash tables will take an average of 5.50 steps compared to the open hash tables, which will only take an average of 1.45 steps.
Tags: Hashtables
Author: leabaviere (lcyb20 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.3333
Total ratings: 9



ID: 3579366
Created: 9:17pm, 22 Nov 2018
What is the right order of steps for the Post-order way to traverse a tree?
a) Process the current nodeProcess the nodes in the left sub-treeProcess the nodes in the right sub-tree
*b) Process the nodes in the left sub-treeProcess the nodes in the right sub-treeProcess the current node
c) Process the nodes in the left sub-treeProcess the current nodeProcess the nodes in the right sub-tree
Explanation: The first one is Pre-order, the last one is In-order
Tags: Trees
Author: leabaviere (lcyb20 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.2105
Total ratings: 19



ID: 3578778
Created: 4:31pm, 22 Nov 2018
Which of these sorts are ALL Stable?
a) Selection sort, Merge sort, Bubble Sort.
b) Insertion sort, Heap sort, Merge sort.
*c) Merge sort, Insertion sort, Bubble sort.
d) Selection sort, Shell Sort, Quick Sort.
e) only Quick sort
Explanation: Insertion sort:T(n) for already or nearly-ordered arrays. T(n2) otherwise.Bubble sort:T(n) for already or nearly-ordered arrays (with a good implementation). T(n2) otherwiseMerge sort:T(n log2n) always. Used for sorting large amounts of data on disk (aka �external sorting�).
Tags: Sorting
Author: kiaraplds (kgp22 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.4706
Total ratings: 17
==> Comment 1: oops accidentally confirmed the wrong answer (by: kaiempage [cp693])



ID: 3578731
Created: 4:12pm, 22 Nov 2018
How do you compute the Big-O of an algorithm?
a) Count the number of "n" in an algorithm and add them. This is the Big-O of the algorithm.
b) Determine how many steps f(n) an algorithm requires to solve the problem in terms of number of items n.For example: 3n^2 + 2n +1Solve for 0 and find two possible complexities.
c) Determine how many steps f(n) an algorithm requires to solve the problem in terms of number of items n.For example: 3n^2 + 2n +1Keep the most significant term: 3n^2This is your Big-0: O(3n^2)
*d) Determine how many steps f(n) an algorithm requires to solve the problem in terms of number of items n.For example: 3n^2 + 2n +1Keep the most significant term: 3n^2Remove any constant multiplier -> n^2This is your Big-0: O(n^2)
Explanation: Find Big-oh:Determine how many steps f(n) an algorithm requires to solve the problem in terms of number of items n.For example: 3n^2 + 2n +1Keep the most significant term: 3n^2Remove any constant multiplier -> n^2This is your Big-0: O(n^2)
Tags: Complexity
Author: kiaraplds (kgp22 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.1667
Total ratings: 18



ID: 3578706
Created: 4:05pm, 22 Nov 2018
Doubly Linked lists can only travel in one direction: down.
a) True
*b) False
Explanation: Simple linked lists can only travel in one direction (down),with Doubly Linked List we can move both directions.
Tags: Lists
Author: kiaraplds (kgp22 - permission to this course revoked)
Avg Rating: 3.0900
Avg Difficulty: 0.1818
Total ratings: 22



ID: 3578661
Created: 3:47pm, 22 Nov 2018
What is the Birthday Problem?
a) A problem asking if in a room with 50 people, at least one has his birthday on that day.
*b) A problem asking the likelyhood of two people having the same birthday on the same day out of n people.
c) A problem asking how many people have their birthdays on the same day.
Explanation: In probability theory the Birthday problem asks that in a set of n people,what is the probablity of two people having the same brirthday.The probablity reaches 100% when n=367 (since there are 366 possible days to have birthday)The probablity is 50% when n=23but 99.9% when n=75.It is usually also calles the Birthday Paradox
Tags: Hashtables
Author: kiaraplds (kgp22 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 0.5000
Total ratings: 22
==> Comment 1: It started out as:How many people would you need to be in a room for p(2 people in the room have the same bday) > 0.5 (by: iwonderwhothisislol [eg574])



ID: 3577316
Created: 12:03am, 22 Nov 2018
Which of the following statements a,b,c or d are all stable sorting algorithms?a) Insertion sort, Bubble sort, Merge sortb)Merge sort, Bubble sort, Shell sortc) Quick sort, Insertion sort, Heap sortd) Heap sort, Shell sort, Bubble sort
*a) a)
b) b)
c) c)
d) d)
Tags: Sorting
Author: ses59 (ses59 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.4737
Total ratings: 19



ID: 3576594
Created: 5:52pm, 21 Nov 2018
What tree traversal algorithm was used on the binary tree to get the output of:
a) Pre-order
*b) Post-order
c) In-order
d) Level-order
Explanation: Post-order algorithm:1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
Tags: Trees
Author: lh949 (lh949 - permission to this course revoked)
Avg Rating: 4.3400
Avg Difficulty: 0.3750
Total ratings: 32
==> Comment 1: love the christmas theme :D (by: kaiempage [cp693])



ID: 3576544
Created: 5:25pm, 21 Nov 2018
What would the output be for the given tree when using post-order traversal? A / \ B C / \ / \ D E F G
a) A B C D E F G
b) D B E A F C G
c) A B D E C F G
*d) D E B F G C A
Explanation: Post-order traversal requires us to first process nodes in the left sub-tree, then nodes in the right sub-tree, and finally the current node.
Tags: Trees
Author: ec789@bath.ac.uk (ec789 - permission to this course revoked)
Avg Rating: 3.9600
Avg Difficulty: 0.3478
Total ratings: 23



ID: 3576354
Created: 3:32pm, 21 Nov 2018
What is the definition of a 'stable' sort?
*a) Stable sorting takes into account the initial ordering when sorting, maintaining the order of equal-valued items.
b) Stable sorting takes exactly the same amount of time to run, given a constant number of items.
c) Stable sorting sorts both the initial and final items symmetrically.
d) Stable sorting does not sort already sorted items.
Explanation: The correct answer is A. A stable sort maintains the order of equal valued items. If two equal valued items were compared in a stable sort they would not switch positions.
Tags: Sorting
Author: aw2044 (aw2044 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.2439
Total ratings: 41
==> Comment 1: Nice! (by: ac2424 [ac2424])



ID: 3586285
Created: 3:24pm, 21 Nov 2018
What is the complexity of the following code?int searchArray(int arr[], int n, int forValue) { for ( int i = 0; i < n; i++ ) { if (arr[i] == forValue) { return i*2; } }}
a) T(n^2)
b) T(nlog(n))
c) T(2^n)
*d) T(n)
e) T(1)
Explanation: The correct answer is T(n). This is the correct answer as the for loop is cycled through n times. If the value is found then it is returned.
Tags: Complexity
Author: aw2044 (aw2044 - permission to this course revoked)
Avg Rating: 3.4600
Avg Difficulty: 0.6923
Total ratings: 13
==> Comment 1: yeah true, but you can tell he tried his best :) (by: ac2424 [ac2424])
==> Comment 2: Not great :/ (by: lejp21 [lejp21])



ID: 3576328
Created: 3:15pm, 21 Nov 2018
Which type of traversal follows the following steps?1. Process nodes in the left sub-tree2. Process nodes in the right sub-tree3. Process the current node
a) In-Order Traversal
*b) Post-Order Traversal
c) Pre-Order Traversal
d) Mid-Order Traversal
Explanation: The correct answer is Post-Order traversal. This is because the current node is processed after(post) both the left and right subtrees have been processed. The current node will therefore be the last node to be processed using Post-Order traversal.
Tags: Trees
Author: aw2044 (aw2044 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.4643
Total ratings: 28



ID: 3575105
Created: 10:26pm, 20 Nov 2018
What is a stable sorting algorithm?
*a) Algorithms which take into account the initial ordering when sorting � maintaining the order of equal-valued items.
b) An algorithm which has elements which change state.
c) Algorithms which re-order items without taking into account their initial ordering.
d) Algorithms which use an abstract data type with dynamic space.
e) None of the above.
Explanation: A stable sorting algorithms are algorithms which take into account the initial ordering when sorting � maintaining the order of equal-valued items.
Tags: Sorting
Author: jo402 (jo402 - permission to this course revoked)
Avg Rating: 3.6300
Avg Difficulty: 0.1111
Total ratings: 27



ID: 3575036
Created: 9:59pm, 20 Nov 2018
Which List structure is the quickest to traverse?
*a) Skip List
b) Linked List
c) Doubly Linked List
d) Queue
e) Stack
Explanation: A skip list has more pointers in the list nodes to traverse it quicker.
Tags: ADTs, Lists
Author: jo402 (jo402 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.4815
Total ratings: 27



ID: 3607221
Created: 9:53pm, 20 Nov 2018
Which statement about the trade-offs of having a big hash tables is true?
a) Big hash tables have fast search time and an efficient use of memory.
*b) Big hash tables have fast search time and an inefficient use of memory.
c) Big hash tables have slow search time and an efficient use of memory.
d) Big hash tables have slow search time and an inefficient use of memory.
e) None of the above.
Explanation: Big hash tables with too many buckets which ensures really fast searches because the hash functions map to more unique indexes but waste a lot memory.
Tags: Hashtables
Author: jo402 (jo402 - permission to this course revoked)
Avg Rating: 4.0800
Avg Difficulty: 0.5833
Total ratings: 12



ID: 3574274
Created: 3:01pm, 20 Nov 2018
What is the worst-cast runtime-complexity of Bubblesort?
a) O(1)
b) O(n)
c) O(n log n)
*d) O(n2)
e) O(n!)
Explanation: Worst-Case is when the list is sorted in order backwards.In this case BubbleSort iterates through the list n times, and swaps the position of every pair it goes over for every iteration
Tags: Sorting
Author: guy (grmb20 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.2250
Total ratings: 40



ID: 3574266
Created: 2:57pm, 20 Nov 2018
What is the best-case runtime-complexity ofBubble Sort?
a) O(n2)
*b) O(n)
c) O(n log n)
d) O( log n)
e) O (1)
Explanation: Best case scenario is where the list is already sorted.In this instance, bubblesort goes over every element once, and makes no changes
Tags: Sorting
Author: guy (grmb20 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 0.1053
Total ratings: 19



ID: 3574061
Created: 1:01pm, 20 Nov 2018
For which operation performed on a singly linked list are the run time complexities NOT best case = 1, worst case = n, average case = n? (When you are not given a reference to the previous element)
a) Removing an element
*b) Adding an element to the list at the start
c) Inserting an element in the list
d) Finding an element in the list
Explanation: When adding an element at the start of the list, the head pointer always lets you add the element without having to do any searching, so the best, worst and average case complexity for this operation is always 1.
Tags: Lists, Complexity
Author: te307 (te307 - permission to this course revoked)
Avg Rating: 3.8700
Avg Difficulty: 0.3333
Total ratings: 15



ID: 3574037
Created: 12:41pm, 20 Nov 2018
What is the best definition for a data structure?
*a) It is the data that is being operated on by an algorithm to solve a problem.
b) It is a way in which we organise data on a computer.
c) It is how elements of a collection of data are related to each other.
d) It is how fast we can sort that data.
Explanation: As stated on slide 12 of Lecture 2. A data structure is the data that is operated on by an algorithm to solve a problem.
Tags: ADTs
Author: adham (aofge20 - permission to this course revoked)
Avg Rating: 3.4100
Avg Difficulty: 0.6818
Total ratings: 22



ID: 3574029
Created: 12:32pm, 20 Nov 2018
In a tree, when is node called a leaf?
a) When its parent node only has one child node.
b) When it only points to one other node.
*c) When it does not point to any other nodes.
Explanation: All of a leaf node's pointers point to null.
Tags: Trees
Author: adham (aofge20 - permission to this course revoked)
Avg Rating: 3.6800
Avg Difficulty: 0.0506
Total ratings: 79



ID: 3574021
Created: 12:23pm, 20 Nov 2018
Why is a Skip List a probabilistic data structure?
*a) Because the number of lanes every node has is determined randomly.
b) Because the number of lanes the head has is determined randomly.
c) Because the node that the head points to is determined randomly.
d) Because there is no tail reference.
Explanation: When we create a skip list node we keep flipping a coin to decide if its number of lanes is increased by one, that is why its random and has a time complexity of log(n).
Tags: Lists
Author: adham (aofge20 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.4118
Total ratings: 17



ID: 3573970
Created: 11:41am, 20 Nov 2018
Which of the options are the correct definitions for a data structure and a secondary data structure in the context of ADTs and Algorithms?
a) Data Structure: A class in Java containing methods, variables and constructorsSecondary Data Structure: A class in Java which extends or implements an existing class
b) Data Structure: A collection of variables in a structure definition in CSecondary Data Structure: A class in Java which extends or implements an existing class
*c) Data Structure: The data that is operated on by an algorithm to solve a problemSecondary Data Structure: An additional set of data created by an algorithm in the process of solving a problem
d) Data Structure: The layout of a table of dataSecondary Data Structure: A sub-table of data that is referenced from the initial table
Explanation: In the lecture on ADTs, data structures were generically defined as a set of data that is operated on by an algorithm to solve a problem. Sometimes algorithms need to create or store extra bits of data, these are secondary data structures.
Tags: ADTs
Author: te307 (te307 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 0.2941
Total ratings: 17



ID: 3573864
Created: 10:28am, 20 Nov 2018
Which of the following are Carey�s 2 Rules of Sorting?
*a) Don�t choose a sorting algorithm until you understand the requirements of your problem.andAlways choose the simplest sorting algorithm possible that meets your requirements.
b) Don�t choose a sorting algorithm until you understand the requirements of your problem.andAlways choose the sorting algorithm which will be the simplest to implement even if it's less efficient.
c) Always choose the algorithm with the lowest space complexity.andAlways choose the simplest sorting algorithm possible that meets your requirements.
d) Always choose the sorting algorithm which will be the simplest to implement even if it's less efficient.andAlways choose the algorithm with the lowest space complexity.
e) Always choose the algorithm with the lowest space complexity.andAlways choose the sorting algorithm which will sort the items correctly.
Explanation: You should use the requirements of the problem to inform your choice of algorithm. Once you have a choice of algorithm that fits these requirements you should always choose the simplest, most efficient option.
Author: ac2424 (ac2424 - permission to this course revoked)
Avg Rating: 4.0700
Avg Difficulty: 0.0667
Total ratings: 15



ID: 3573192
Created: 12:27am, 20 Nov 2018
What makes a binary tree balanced
*a) Given any node: | # of nodes in left sub tree - # of nodes in right sub tree| = {0, 1}
b) It rarely falls over
c) New nodes cannot be added to level L of the tree if level L - 1 is not full
d) For all nodes, left child <= parent <= right child
e) For all nodes, left child < parent < right child
Explanation: https://www.geeksforgeeks.org/avl-tree-set-1-insertion/
Tags: Trees
Author: iwonderwhothisislol (eg574 - permission to this course revoked)
Avg Rating: 3.7800
Avg Difficulty: 0.3889
Total ratings: 18



ID: 3573029
Created: 11:11pm, 19 Nov 2018
in a linked list which of these methods has a guaranteed complexity of 1?
a) get(i)
*b) add(o)
c) remove(i)
d) find(o)
e) insert(o,i)
Explanation: all methods other than add have an average complexity of n, adding will always take a guaranteed time as it is always adding at a set location so doesn't need to traverse the list
Author: ac2424 (ac2424 - permission to this course revoked)
Avg Rating: 4.2000
Avg Difficulty: 0.3333
Total ratings: 15



ID: 3573023
Created: 11:07pm, 19 Nov 2018
What doesBig-Omega O(f(n)) refer to?
*a) lower bound of f(n)
b) upper bound of f(n)
c) middle Bound of f(n)
Explanation: Lower Bound: g(n) = O(f(n)) ("g(n) is Big- Omega of f(n)") iff there are constants c>0and n0>0 so that for all n>n0: g(n) = c f(n)it is used for underestimating eg.�it must be at least n�
Author: ac2424 (ac2424 - permission to this course revoked)
Avg Rating: 3.4200
Avg Difficulty: 0.2368
Total ratings: 38



ID: 3573035
Created: 11:03pm, 19 Nov 2018
What is linear probing?
a) a method of searching a tree for an item, one node at a time
*b) scanning through a hash table to find empty space
c) the term for any search algorithm of linear complexity
d) a link list with only one lane
Explanation: To avoid collisions in a hash table, linear probing is used to scan for the next available empty space if a bucket is full.
Author: ac2424 (ac2424 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 0.1429
Total ratings: 21



ID: 3573005
Created: 10:48pm, 19 Nov 2018
How do you delete an item from an open hash table?
a) By adding a null value over the item in the hash table
*b) By removing the value from the Linked list
c) You can't, as it is an open hash table and not a closed one
d) Both A and B are valid answers
Explanation: Unlike a closed hash table, you can easily delete items from an open hash table
Tags: Lists, Hashtables
Author: lejp21 (lejp21 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.6071
Total ratings: 28



ID: 3572997
Created: 10:42pm, 19 Nov 2018
What is the worst case time complexity of Insertion Sort?
a) n
*b) n^2
c) log(n)
d) n^3
Explanation: We have to compare and shift up to N-1 books to find the right spot for the last element. The sum of all of the steps before that and this adds up to roughly N^2 steps
Tags: Sorting, Search, Complexity
Author: lejp21 (lejp21 - permission to this course revoked)
Avg Rating: 3.7700
Avg Difficulty: 0.2692
Total ratings: 26



ID: 3572988
Created: 10:34pm, 19 Nov 2018
For a list of n sorted items, what is the time complexity of Binary search?
a) n*n
b) n
c) 1
*d) log(n)
Explanation: In Binary Search, we keep on dividing our search area in half until we arrive at our item.
Tags: Search, Complexity
Author: lejp21 (lejp21 - permission to this course revoked)
Avg Rating: 3.5900
Avg Difficulty: 0.2727
Total ratings: 22



ID: 3574272
Created: 3:14pm, 19 Nov 2018
A search engine 'Bugle' uses a system called PageRank to determine the order it shows results in.This involves solving a large matrix problem using an algorithm of order N2log(N) where the size of the matrix is N x N.Which one of the following statements is false?
a) The order of the algorithm isO(N2)
b) The order of the algorithm is O(2N)
c) As N becomes larger, so will the runtime
*d) The algorithm will always run faster than another algorithm of order N4
e) None of the above
Explanation: A & B) N2=O(N2log(N)) = O(N3) = O(2N),i.e for some real, non-negative constants w,x,y,z and N sufficiently large: w*(N2) < x*(N2log(N)) < y*N3 < z*2NC) Trivially trueD) For small N this is not necessarily true as the constant in front of the second algorithm could be very small compared to a large constant infront of the N2log(N) algorithm e.g.for (a) being the first algorithm, (b) the N4algorithm, and T being the actual run-time,we could have: T(a) = 0.00000001*N4, T(b) = 100000000*N2log(N), and so for N=10, T(a)>T(b).
Tags: Sorting, Complexity
Author: jcm50 (jcm50 - permission to this course revoked)
Avg Rating: 3.6900
Avg Difficulty: 1.2692
Total ratings: 26



ID: 3572118
Created: 3:08pm, 19 Nov 2018
Which of the following is the output of In-order traversal on this tree: a / \ b e / \c d(Where the processing is simply printing the node value)
a) c d b e a
b) c b a d e
c) a d c e b
*d) c b d a e
e) e a b d c
Explanation: Using the notes from lecture 13:1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub-tree.
Tags: Trees
Author: tim_hildyard (th621 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.4167
Total ratings: 24



ID: 3572089
Created: 2:56pm, 19 Nov 2018
For the following tree, which traversal algorithm will print the following sequence : a b c d e f a / \ b c / d / \e f
a) Pre-Order
b) In-Order
c) Post-Order
*d) Level-Order
Explanation: Pre-Order will print a b d e f cIn-Order will print e d f b a cPost-Order will print e f d b c aLevel-Order will print a b c d e f
Tags: Trees
Author: tpz20 (tpz20 - permission to this course revoked)
Avg Rating: 4.2200
Avg Difficulty: 0.3125
Total ratings: 32



ID: 3572079
Created: 2:50pm, 19 Nov 2018
Consider a binary tree with numeric nodes where the left sub-tree consists of numbers less than the node, and the right sub-tree consists of numbers greater than the node.This tree is empty other than the root value: 10.The following numbers are inserted into the tree in order from left to right (i.e. 15 is inserted first):15, 6, 12, 4, 9, 11, 7, 8What is the height (number of levels) of the tree?
a) 3
b) 4
*c) 5
d) 6
e) 7
Explanation: The tree should look like: 10 (1) / \ 6 15 (2) / \ / 4 9 12 (3) / / 7 11 (4) \ 8 (5)There are 5 levels, hence the height of the tree is 5
Tags: Trees
Author: jcm50 (jcm50 - permission to this course revoked)
Avg Rating: 4.2900
Avg Difficulty: 0.7083
Total ratings: 24



ID: 3572072
Created: 2:48pm, 19 Nov 2018
Which of these is a valid shell sort sequence of h values?
a) 27 - 9 - 3
b) 16 - 8 - 4 - 2
c) 10 - 9 - 8 - 7 - 6 - 5 - 4 - 3
*d) 12 - 8 - 4 - 1
Explanation: A Shell sort must end with a h-sort of 1 to ensure the sort is complete.
Tags: Sorting
Author: tpz20 (tpz20 - permission to this course revoked)
Avg Rating: 4.2400
Avg Difficulty: 0.3529
Total ratings: 17
==> Comment 1: Nice comment! (by: lejp21 [lejp21])



ID: 3572060
Created: 2:42pm, 19 Nov 2018
Which of these is not an elementary operation?
*a) Looping over an array
b) Accessing an item in an array
c) Traversing a reference
Explanation: Looping over an array involves multiple operations, namely incrementing the pointer multiple times. The other two are both elementary operations, that can be "completed" in one step.
Tags: Complexity
Author: tpz20 (tpz20 - permission to this course revoked)
Avg Rating: 3.5500
Avg Difficulty: 0.8387
Total ratings: 31



ID: 3570566
Created: 5:38pm, 18 Nov 2018
An implementation of selection sort runs for 2s to sort a list of 1,000 records. How long will it likely run to sort 10,000 records?
a) 20s
b) 100s
*c) 200s
d) 1000s
e) 2000s
Explanation: Selection sort has a runtime complexity of?(n2), so increasing the number of records by a factor of 10 increases the time taken to sort by a factor of 102 = 100.100 x 2s = 200s, therefore we would expect it to take 200s to sort 10,000 records.
Tags: Sorting, Complexity
Author: mha (mha38 - permission to this course revoked)
Avg Rating: 4.0400
Avg Difficulty: 0.5833
Total ratings: 24



ID: 3570408
Created: 3:41pm, 18 Nov 2018
An algorithm takes 1s for n = 100. Given that its asymptotic time complexity is?(n2), how many seconds do you expect it to take for n = 800?
a) 4s
b) 8s
c) 16s
*d) 64s
e) 128s
Explanation: ?(n2) means that doubling n increases T by factor 4 (slide 14 on lecture 4).We start at n = 100, taking 1s.So n = 200, would take 4 x 1s = 4s.n = 400 would take 4 x 4s = 16s.n = 800 takes 4 x 16s = 64s.Therefore the answer is 64s.
Tags: Complexity
Author: mha (mha38 - permission to this course revoked)
Avg Rating: 4.0400
Avg Difficulty: 0.2500
Total ratings: 48



ID: 3570377
Created: 3:06pm, 18 Nov 2018
Interpolation search is an improved version of Binary search. Given that it has time complexity O(log(log n)), which of the following correctly orders the time complexities from best to worst, for large n.
a) O(1), O(logn), O(log(log n)), O(n), O(nlogn)
b) O(log(log n)), O(1), O(logn), O(n), O(nlogn)
c) O(1), O(logn),O(log(log n)), O(nlogn), O(n)
d) O(1), O(log(log n)), O(log n), O(nlogn), O(n)
*e) O(1), O(log(log n)), O(log n), O(n), O(nlogn)
Explanation: Binary seach has O(logn). We know interpolation search is faster than binary search, so this must be to the left of O(log n). We also know O(1) must be the quickest, as it doesn't change no matter how large the input n. Finally, O(nlogn) is slower than O(n), since there is an extra factor logn which is greater than 1 for large n. This leaves us with option E.
Tags: Complexity
Author: josephmcphillips (jmm81 - permission to this course revoked)
Avg Rating: 3.9100
Avg Difficulty: 0.9565
Total ratings: 23



ID: 3570372
Created: 3:01pm, 18 Nov 2018
You wish to use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = (x*x) % 5 , and the hash table has slots 0, ... , 4. If you insert the elements 3, 2, 4, 1, 5 in that order, what does the hashtable look like at the end?
a) 5, 4, 1, 2, 3
b) 4, 16, 1, 25, 9
c) 25, 16, 1, 4, 9
*d) 2, 4, 1, 5, 3
e) None of the others
Explanation: The correct answer is 2, 4, 1, 5, 3.We first insert 3: (3*3) % 5 = 9 % 5 = 4, so 3 goes in slot 4 (last one).Next insert 2: (2*2) % 5 = 4 % 5 = 4. However slot 4 is full, so we move one to the right, which loops us back to the front of the hashtable so we insert 2 in slot 0.Next insert 4: (4*4) % 5 = 16 % 5 = 1, so 4 goes in slot 1.Next insert 1: (1*1) % 5 = 1 % 5 = 1. Slot 1 is full so move one to the right and insert in slot 2, which is empty.Finally insert 5: (5*5) % 5 = 25 % 5 = 0. Slot 0 is full so move to the right. Slot 1 is also full so move right. Slot 2 is also full so move right. We find slot 3 is empty so we insert 5 into slot 3.
Tags: Hashtables
Author: mha (mha38 - permission to this course revoked)
Avg Rating: 4.2800
Avg Difficulty: 0.5556
Total ratings: 36



ID: 3570355
Created: 2:46pm, 18 Nov 2018
What is the main advantage of considering an amortised runtime?
a) The user does not need to see the exact workings of the code.
*b) Worst-case runtime per operation can be too pessimistic.
c) It can give the user a greater bound for the worst-case runtime than when considering asympotitc complexity.
d) Worst-case runtime per algorithm can be too pessimistic.
e) None of the above.
Explanation: Worst-case runtime per operation can be too pessimistic. Operations may usually be quick, and only sometimes slow. So the average may not be so bad.
Tags: Complexity
Author: josephmcphillips (jmm81 - permission to this course revoked)
Avg Rating: 2.3600
Avg Difficulty: 0.8571
Total ratings: 14



ID: 3570331
Created: 2:14pm, 18 Nov 2018
When for loops are nested, the asymptotic time complexity can be found by multiplying the order of each loop. If the for loops are not nested, big-O complexity is given by...
*a) the highest order of one of the loops.
b) the sum of the orders of the loops.
c) the product of the orders of the loops.
d) the average of the orders of the loops.
e) the fastest performing loop.
Explanation: The highest order of one of the loops corresponds to the slowest performing loop, which gives us our upper bound.
Tags: Complexity
Author: josephmcphillips (jmm81 - permission to this course revoked)
Avg Rating: 3.7600
Avg Difficulty: 0.5238
Total ratings: 21



ID: 3569682
Created: 11:14pm, 17 Nov 2018
You are using a standard closed hashtable with linear probing (to the right). The hash function has the form h(x) = x % 5 and the hash table has slots 0,1,2,3,4. If you insert the elements 9,3,14,7,1 in this order, what does the hashtable look like at the end?
a) 1,3,7,9,14
*b) 14,1,7,3,9
c) 3, 1, 14, 7, 9
d) 14, 7, 1, 3, 9
e) None of the above.
Explanation: We first insert 9, which goes into slot 4: _,_,_,_,9We then insert 3, which goes into slot 3: _,_,_,3,9We then insert 14, which should go in slot 4. As slot 4 is full, we move to the next free slot which is slot 0: 14,_,_,3,9We then insert 7, which goes into slot 2: 14,_,7,3,9We finally insert 1, which goes into the remaining slot 1: 14,1,7,3,9 (which is answer B).
Tags: Hashtables
Author: dminnis1 (dnm28 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.4000
Total ratings: 15



ID: 3569650
Created: 10:39pm, 17 Nov 2018
What is the definition of a Lower Bound (Big-Omega)?
*a) 1) ("g(n) is Big-Omega of f(n)") iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
b) 2) ("g(n) is Big-Omega of f(n)") iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
c) 3) ("g(n) is Big-Omega of f(n)") iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n) = c1 f(n) and g(n) = c2 f(n)
Explanation: A is the correct answer, g(n)= c f(n). This means that, for all n>n0, the graph of the function f(n) will always be beneath the value of the graph g(n), hence making this a lower bound.This can be clarified in lecture 4.
Tags: Complexity
Author: dminnis1 (dnm28 - permission to this course revoked)
Avg Rating: 3.9600
Avg Difficulty: 0.6957
Total ratings: 23



ID: 3569637
Created: 10:23pm, 17 Nov 2018
If we insert a new node into the middle of a doubly linked list, which combination of the following sets of references must we update?a) The new node�s next and previous pointersb) The tail referencec) The previous node�s next pointerd) The following node�s previous pointere) The previous node�s previous pointer
*a) A, C & D
b) A, D & E
c) A
d) B & C
Explanation: This can be taken from lecture slide 12 in Lecture 07
Tags: Lists
Author: dminnis1 (dnm28 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.1818
Total ratings: 33



ID: 3569411
Created: 5:59pm, 17 Nov 2018
Given a particular load L for an Open Hash Table, what is the average number of steps to insert or find an item?
a)
*b)
c)
d)
e) None of the above
Explanation: Answer given in lecture 9
Tags: Hashtables
Author: chrisdix (csd31 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.5600
Total ratings: 25



ID: 3569407
Created: 5:51pm, 17 Nov 2018
In which of the following cases is a linked list preferable to an array?1) Inserting a new element at the front of either2) Removing an element in the middle of either3) Getting the 200th element of either
a) 1 only
*b) 1 and 2
c) 1 and 3
d) 1, 2 and 3
e) None of the options
Explanation: Clearly reasoned in lecture 7
Author: chrisdix (csd31 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.4762
Total ratings: 21



ID: 3569373
Created: 5:21pm, 17 Nov 2018
What binary tree traversal algorithm is described by the pseudocodebelow?1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub tree.
a) Pre-order traversal
*b) In-order traversal
c) Post-order traversal
d) Level-order traversal
Explanation: Definition can be seen in lecture 13
Tags: Trees
Author: chrisdix (csd31 - permission to this course revoked)
Avg Rating: 3.7200
Avg Difficulty: 0.3600
Total ratings: 25



ID: 3569363
Created: 5:10pm, 17 Nov 2018
What is the theta time complexity of the following algorithm fragment (f(a,b))?for (int i=0; i<a+b; i++) {System.out.println(i);}for (int i=0; i<a*a*a; i++) {System.out.println(i);}
a)
b)
*c)
d)
e) None of the above
Explanation: From lecture 5, we must take into account both independant input sizes. Considering both loops, the first is order exactly a+band the second is a^3. Combining these leaves only a^3 + b
Tags: Complexity
Author: chrisdix (csd31 - permission to this course revoked)
Avg Rating: 3.5700
Avg Difficulty: 1.1304
Total ratings: 23



ID: 3569179
Created: 2:25pm, 17 Nov 2018
Given the numbers [1,4,6,3,7,2,10]. What would be the final balanced AVL Tree?
a)
b)
*c)
d)
e) None of the above
Explanation:
Tags: Trees
Author: vk407 (vk407 - permission to this course revoked)
Avg Rating: 3.7300
Avg Difficulty: 0.5333
Total ratings: 15
==> Comment 1: Aren't A and B the same tree? (by: mcb68 [mcb68])
====> Reply 1: Yes.



ID: 3569166
Created: 1:52pm, 17 Nov 2018
A binary search tree whose left subtree and right subtree differ in height by at most one unit is called..
a) 2-3 Tree
*b) AVL Tree
c) Red-black tree
d) None of the above
Tags: Trees
Author: vk407 (vk407 - permission to this course revoked)
Avg Rating: 3.1400
Avg Difficulty: 0.2727
Total ratings: 22
==> Comment 1: AVL is a way of creating and using balanced trees, it should be balanced trees as red-black is also type of balanced tree... (by: cro26 [cro26])



ID: 3568551
Created: 10:27pm, 16 Nov 2018
Which are the following statements are false?
*a) Selection sort has an average time complexity of O(n), is stable and is hard to implement in comparison with other sorting algorithms
b) Merge sort has an average time complexity of O(n log n), is stable and can be parallelized across multiple cores
c) Bubble sort is good for sorting nearly-sorted data, is stable and can be used with a linked list
d) Insertion sort has an average time complexity of O(n), is stable and can be used with a linked list
e) None of the above
Explanation: Selection sort is easy to implement, always has a time complexity of O(n2) and is unstable
Augmented explanation 1: . All other statements are true (by: msu26 [msu26])
Tags: Sorting, Complexity
Author: msu26 (msu26 - permission to this course revoked)
Avg Rating: 3.6100
Avg Difficulty: 0.5000
Total ratings: 18



ID: 3568135
Created: 5:03pm, 16 Nov 2018
Does the following code result in a stable sort?void Sort(int[] a){ for(int s = 2; s <= a.length; s++) { int SortNum = a[ s - 1 ]; int i = s - 2; while (i >= 0 && SortNum <= a[i]) { a[i+1] = a[i]; i--; } a[i+1] = SortNum;}}
a) Yes
*b) No (Neigh!!)
Explanation: This code is almost identical to code for insertion sort, which is stable, but has one key differenceInstead of "while (i >= 0 && SortNum < a[i])"we have "while (i >= 0 && SortNum <= a[i])"This means when two items have the same value, the one that started off further back will actually move in front of the first one.E.g. in an array [10, 10, 1], the end result would be [1, 10, 10]
Tags: Sorting
Author: dr474 (dr474 - permission to this course revoked)
Avg Rating: 3.9500
Avg Difficulty: 1.0909
Total ratings: 22



ID: 3568029
Created: 3:59pm, 16 Nov 2018
For what value of h is h-sorting essentially a bubble sort?
a) 0
*b) 1
c) Never
d) Always
Explanation: When h = 1, h-sorting behaves exactly the same as a bubble sort.
Tags: Sorting
Author: anonymous01 (ry356 - permission to this course revoked)
Avg Rating: 4.0900
Avg Difficulty: 0.3023
Total ratings: 43



ID: 3568015
Created: 3:54pm, 16 Nov 2018
Given the following sorted list of numbers: 5, 14, 67, 146, 874, 946.How many iterations does linear search go through to find the number 146?
a) 3
*b) 4
c) 6
d) 146
Explanation: Linear searchsequentially checks each element of the list until a match is found.So, it checks (5), which isn't a match (Iteration 1)Then, it checks (14), which is isn't a match (Iteration 2)Then, it checks (67), which isn't a match (Iteration 3)Then, it checks (146), which is a match (Iteration 4).Therefore, 4 iterations.
Tags: ADTs
Author: anonymous01 (ry356 - permission to this course revoked)
Avg Rating: 3.5400
Avg Difficulty: 0.1429
Total ratings: 35



ID: 3568086
Created: 3:46pm, 16 Nov 2018
Which of these algorithms uses divide and conquer?
*a) Quicksort and Mergesort
b) Mergesort only
c) Bubble Sort
d) Sorting Sort
Explanation: Quicksort and Mergesort use divide and conquer.
Tags: Sorting
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.8700
Avg Difficulty: 0.2436
Total ratings: 78



ID: 3567984
Created: 3:44pm, 16 Nov 2018
Given the int array 6, 5, 1, 4, 7, 8, 2, how many steps will it take to sort it in ascending order using bubble sort?
a) 3
b) 4
c) 5
*d) 6
e) None of the above
Explanation: Initial array: 6 5 1 4 7 8 2Iteration 1: 5 1 4 6 7 2 8Iteration 2: 1 4 5 6 2 7 8Iteration 3: 1 4 5 2 6 7 8Iteration 4: 1 4 2 5 6 7 8Iteration 5: 1 2 4 5 6 7 8Final iteration to check (iteration 6): 1 2 4 5 6 7 8
Tags: Sorting, Complexity
Author: msu26 (msu26 - permission to this course revoked)
Avg Rating: 2.7700
Avg Difficulty: 0.7308
Total ratings: 26
==> Comment 1: the term "step" seems vague and could suggest elementary operations (by: simon_powell [sp2183])
====> Reply 1: I meant iterations, sorry your majesty xx



ID: 3567980
Created: 3:42pm, 16 Nov 2018
What is the time complexity of Binary Search?
*a) O(Log(n))
b) O(nLog(n))
c) O(Nog(L))
d) O()
Explanation: The time complexity for a binary search is O(Log(n))
Tags: Complexity
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.2273
Total ratings: 22



ID: 3567977
Created: 3:40pm, 16 Nov 2018
which of these sorts is stable
a) none of the options bellow
b) Shell sort
*c) Merge sort
d) Quick sort
e) horse sort (because it's in a stable hahahahah I am funny and no I did not copy this joke)
Explanation: Merge sorts will not rearrange elements already in the correct order
Tags: Sorting
Author: mh2200 (mh2200 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.4000
Total ratings: 20
==> Comment 1: hahaha (by: ptear20 [ptear20])



ID: 3567976
Created: 3:39pm, 16 Nov 2018
What is the definition of Abstraction?
a) Talking about things in an abstract manner
*b) The Hiding of unnecessary detail
c) Space-Time Complexity
d) Like Distraction, but with an A
Explanation: Abstraction is the hiding of unnecessary detail.
Tags: ADTs
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.3900
Avg Difficulty: 0.5217
Total ratings: 23



ID: 3567975
Created: 3:39pm, 16 Nov 2018
Which of the following images represents low accuracy and high precision?
a)
*b)
c)
d)
Explanation: Accuracy:Average difference between measurements and reference value r. ("How far away is each measurement from the 'true value'?")Precision:Standard deviation s of the measurements ("How close is each measurement to each other?")From these definitions, it is clear that the second imagerepresents low accuracy and high precision.(Other Images: Image 1: Low Accuracy, Low Precision Image 3: High Accuracy, Low Precision Image 4: High Accuracy, High Precision)
Tags: Complexity
Author: anonymous01 (ry356 - permission to this course revoked)
Avg Rating: 4.1200
Avg Difficulty: 0.1923
Total ratings: 26



ID: 3568057
Created: 3:36pm, 16 Nov 2018
What is the average time complexity of finding one element in a hash table (Assuming more slots are available than elements)?
a) O(n)
b) O(r)
c) O(O(n))
*d) O(1)
Explanation: Searching a hash table is done in constant time so its complexity is O(1)
Tags: Complexity, Hashtables
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.6000
Avg Difficulty: 0.4400
Total ratings: 25



ID: 3567955
Created: 3:31pm, 16 Nov 2018
What is the definition of Space Complexity?
a) How much space it needs in the physical world
*b) How much memory space an algorithm requires
c) How complex the space of the algorithm is
Explanation: Space complexity describes how much memory space an algorithm takes up.
Tags: Complexity
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.7100
Avg Difficulty: 0.1429
Total ratings: 21



ID: 3567947
Created: 3:29pm, 16 Nov 2018
When do you use Big-Theta notation when calculating time complexity?
a) For over-estimation
b) For under-estimation
*c) For exact estimation
d) Whenever possible
e) None of the above
Explanation: Big O is used for over-estimatingBig Omega is used for under-estimatingBig Theta is used for exact estimation
Tags: Complexity
Author: msu26 (msu26 - permission to this course revoked)
Avg Rating: 3.5000
Avg Difficulty: 0.3333
Total ratings: 30



ID: 3567941
Created: 3:28pm, 16 Nov 2018
Which of these describes the worst case performance time complexity for an algorithm?
*a) Big-O
b) Big-?
c) Big-O
d) None of the Above
Explanation: Big-O describes the worse case scenario, this is the upper bound for an algorithm (i.e. It can never be slower than Big-O) Big Theta describes average performance and Big Gamma describes the best case performance.
Augmented explanation 1: Big-O describes the worse case scenario, this is the upper bound for an algorithm (i.e. It can never be slower than Big-O) Big Theta describes average performance and Big Omega describes the best case performance. (by: kaiempage [cp693])
Tags: Complexity
Author: jv350 (jv350 - permission to this course revoked)
Avg Rating: 3.8600
Avg Difficulty: 0.2381
Total ratings: 21



ID: 3567929
Created: 3:23pm, 16 Nov 2018
An empty closed hashtable which uses linear probing (to the right).The hashtable can store up to 6 data in 6 buckets (from 0-5).Data is inserted using the function:Where x is the data to be stored and the result is the bucket to insert it in.What would the resulting hashtable be, if we were to insert the following integers?18,33,9,3,27,21
a) 33,21,9,27,3,18
*b) 18,33,21,9,27,3
c) 18,33,9,3,27,21
d) 18,33,3,9,27,21
Explanation: f(18) = 0Current result: 18, , , , ,f(33) = 1Current result: 18,33, , , ,f(9) = 3Current result: 18,33, ,9, ,f(3) = 5Current result: 18,33, ,9, ,3f(27) = 39 has already been put in this slot, so 27 is inserted in the next open slot.Current result: 18,33, ,9,27,3f(21) = 53 has already been put in this slot, so 21 is inserted in the next open slot.Current result: 18,33,21,9,27,3Finished result:18,33,21,9,27,3
Tags: Hashtables
Author: fc494 (fc494 - permission to this course revoked)
Avg Rating: 4.4100
Avg Difficulty: 0.6818
Total ratings: 22



ID: 3567923
Created: 3:22pm, 16 Nov 2018
Whats the average number of steps to find any items in anopen hash table of 1213 buckets with 1000 elements in the table?
a) 1.29
b) 1.35
*c) 1.41
d) 1.47
e) 1.53
Explanation: First calculate the load factor:L = max element / total buckets= 1000 / 1213=0.82 (2 sf)Then the expected steps = 1 + L/2 = 1.41 (3 sf)
Tags: Hashtables
Author: jh2699 (jh2699 - permission to this course revoked)
Avg Rating: 4.3400
Avg Difficulty: 0.9375
Total ratings: 32



ID: 3567899
Created: 3:13pm, 16 Nov 2018
which of the following questions is unanswerable given only that for functions f and gf(n) = ?(1)g(n) = O(n)but would be answerable given more information
a) ?(g(n)) >?(f(n))
b) O(g(n)) > O(f(n))
c) f(n) > O(g(n))
*d) ?(g(n)) =O(g(n))
e) O(g(n)) > O(f(n))
Explanation: A is true,B is false and does not really make sense as there exists h such that ?(h(n)) >?(g(n) then h(n) = O(g(n)) andh(n) = O(f(n)) hence O(g(n)) = h(n) = O(f(n)) which impliesO(g(n)) = O(f(n)),C is false,D could be true or false depending on what?(g(n)) is,E is true
Tags: Complexity
Author: mh2200 (mh2200 - permission to this course revoked)
Avg Rating: 3.3800
Avg Difficulty: 0.9231
Total ratings: 13
==> Comment 1: Suggested answer is wrong. By definition, if?(g(n)) exists, then it must be equal toO(g(n)) (and also O(g(n)) ) (by: jcm50 [jcm50])
====> Reply 1: But if it doesn't exist, it can't be equal. Thus we need more information (i.e. whether or not it exists.)
====> Reply 2: There can be an infinite number of Omegas and Os for any given function, but there is only ever one Theta. For example, x+1 is a lower bound for x+3, as is x + 1.5, as is x + 1.2, etc. Theta is always a big-omega and and a big-O as well, but not the other way around.



ID: 3567961
Created: 3:11pm, 16 Nov 2018
If an algorithm has a complexity of, does it matter what k is? Why?
a) Yes, because a logarithm with a different base could result in the complexity being a slower/ faster growing function.
*b) No, because we can change the base of the logarithm using the change of base formula and it would only result in multiplication by a constant.
c) No, because k is a constant.
d) Yes, because we can change the base of the logarithm using the change of base formula and it would result in multiplication by a linear factor.
Explanation: No, it doesn't matter.This is because we can change the base using the change of base formula :As you can see, the logarithm with our new base, b, is multiplied by , which is a constant.
Tags: Complexity
Author: anonymous01 (ry356 - permission to this course revoked)
Avg Rating: 4.2000
Avg Difficulty: 0.8000
Total ratings: 35



ID: 3567878
Created: 2:58pm, 16 Nov 2018
Why we need to a binary tree which is height balanced?
*a) to avoid formation of skew trees
b) to save memory
c) to attain faster memory access
d) to simplify storing
e) none of then
Explanation: In real world dealing with random values is often not possible, the probability that you are dealing with non random values(like sequential) leads to mostly skew trees, which leads to worst case. hence we make height balance.
Tags: Trees
Author: xf342 (xf342 - permission to this course revoked)
Avg Rating: 3.0000
Avg Difficulty: 0.5455
Total ratings: 11



ID: 3567847
Created: 2:39pm, 16 Nov 2018
Which of the following code performs the partition operation correctly in QuickSort?
a) private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left > right){while(arr[left] <= pivot_item){left++;}while(arr[right] > pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[low] = arr[right];arr[right] = pivot_item;return right;}
*b) private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left <= right){while(arr[left] <= pivot_item){left++;}while(arr[right] > pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[low] = arr[right];arr[right] = pivot_item;return right;}
c) private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left <= right){while(arr[left] > pivot_item){left++;}while(arr[right] <= pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[low] = arr[right];arr[right] = pivot_item;return right;}
d) private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left > right){while(arr[left] > pivot_item){left++;}while(arr[right] <= pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[low] = arr[right];arr[right] = pivot_item;return right;}
e) private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left <= right){while(arr[left] <= pivot_item){left++;}while(arr[right] > pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[right] = pivot_item;arr[low] = arr[right];return right;}
Explanation: The array is partitioned such that the elements left to the pivot are lesser than the pivot while the elements right of the pivot are greater than the pivot.
Tags: Sorting
Author: xf342 (xf342 - permission to this course revoked)
Avg Rating: 3.1500
Avg Difficulty: 1.5500
Total ratings: 20



ID: 3567825
Created: 2:18pm, 16 Nov 2018
which of the following data structure are similar to skipList?
a) stack
b) hash table
c) binary search tree
*d) balanced binary search tree
e) DoublyLinked list
Explanation: all elements lesser than the top line elements are placed infront of it and greater ones after it. And skip lists have the same time complexities as balanced binary search trees.
Tags: Lists, Trees
Author: xf342 (xf342 - permission to this course revoked)
Avg Rating: 2.8100
Avg Difficulty: 0.7308
Total ratings: 26
==> Comment 1: "similar" is an awfully vague term. Similar in what way? (by: joebr [jayb20])
==> Comment 2: You could argue that a skip list is similar to doubly linked lists since they are both lists. A tree is really nothing like a list. (by: nmparrott [nmp31])



ID: 3567817
Created: 2:14pm, 16 Nov 2018
Select the option where the given data structure andcomplexity for search time (check that it contains an object) do not match.
a) Array has search time complexity O(n)
b) Linked List has search time complexity O(n)
*c) Doubly Linked List has search time complexity O(Log(n))
d) Skip List has time search time complexity O(Log(n))
e) None of the above
Explanation: A doubly linked list is simply a linked list with pointers to the previous element as well as the next element hence it has the same search complexity as a linked list, n. This is as the best way to search it is by using a linear search algorithm as it is an unordered list
Tags: Lists, Search, Complexity
Author: mh2200 (mh2200 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.5333
Total ratings: 15



ID: 3567987
Created: 1:52pm, 16 Nov 2018
Which of the following statements about open hash tables is false
a) Open hash tables can store more objects when compared to a closed hash table with the same sized hash.
*b) If an object is hashed to a slot that is already full then the object will be put in the next available slot after the slot mapped to in an open hash table.
c) The time tocheck if the hash table holds an object is affected by the load.
d) Open hash tables allow objects to be removed easily.
e) It becomes slower to check if the hash table holds an object when it contains more objects.
Explanation: Remember that an open hash table will put objects into linked lists and closed hash tables will put objects into the first available slots.Even though linked lists can hold multiple objects they will take longer to see if it contains an object if there are more objects to check.The load is the fullness of the hash table, hence if it is bigger it will take longer to do things.
Tags: Hashtables
Author: mh2200 (mh2200 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.5556
Total ratings: 18



ID: 3567784
Created: 1:50pm, 16 Nov 2018
When implementing a singly linked list, which of the following statements is true?
a) The head pointer should always point to the most recently added element
b) The tail pointer allows you to traverse the linked list backwards
c) Finding an element has worst case time complexity of
*d) Inserting an element has worst case time complexity of
e) You remove any element by changing the head pointer to point to the element after the one you want removed
Explanation: When an element is added that comes anywhere other than first in the list, then the head pointer should stay the same, as the first element in the list has not changed.In a singly linked list, their is only one pointer for each element which allows forwards traversal of the list, there is no way to travel backwards.In cases where the element you are searching for is not the first one in the list, then more than 1 comparisons have to be made.When inserting an element at the end of a linked list (worst case), then the time complexity is theta(n).To remove the first element in a linked list, then you would do so by updating the head pointer to the element after it.
Tags: Lists, Complexity
Author: te307 (te307 - permission to this course revoked)
Avg Rating: 3.9400
Avg Difficulty: 0.7059
Total ratings: 17
==> Comment 1: I'm confused (sorry if I've misunderstood) - does the explanation for E basically say exactly the same as option E, making it true? (by: dr474 [dr474])



ID: 3567772
Created: 1:41pm, 16 Nov 2018
What is the big O complexity f(n) of the following code?(A) for( int i = 0; i < n; i++){(B) for( int j = i; j < n; j++){(C) for( int k = 0; k < 4; k++){ System.out.println("Hello World!"); } } }
a) n
*b) n2
c) n3
d) nlog(n)
e) None of the above
Explanation: Let K be the constant operation time for the Loop (C).As the loop (C) always performs 4 print statements.Now, for i = 0: (B) performs (n) Loops of K. i = 1: (B) ... (n-1) ... i = 2: (B) ... (n-2) ... ... ... ... i = n: (B) ... (0) ...Then the loop (A) & (B) can be seen as this(n) * K + (n-1) * K + (n-2) * K + ... + (1) * K + (0) * KFor every increase in i, the loop (B) decreases.This can be simplified by the summation formulawhich yields:(n)(n+1)/2 * K = (K/2)(n^2 + n)Hence, the Big O complexity of ( n^2 )
Tags: Complexity
Author: jh2699 (jh2699 - permission to this course revoked)
Avg Rating: 4.1100
Avg Difficulty: 0.7872
Total ratings: 47



ID: 3567769
Created: 1:38pm, 16 Nov 2018
Which of the following is not included in an Abstract Data Type (ADT)?
a) A set of data structures
b) A set of algorithms
c) An interface
*d) None of the above - they are all included
Explanation: An ADT consists of a set of data structures, set of algorithms and an interface all working together, and therefore they are all necessary.
Tags: ADTs
Author: ncc28 (ncc28 - permission to this course revoked)
Avg Rating: 3.3500
Avg Difficulty: 0.4516
Total ratings: 31



ID: 3567764
Created: 1:36pm, 16 Nov 2018
Which of these is not an example of a stable sort?
a) Insertion Sort
b) Merge Sort
*c) Selection Sort
d) Bubble Sort
e) None of the above
Explanation: Selection Sort is unstable, the rest are stable.
Tags: Sorting
Author: ncc28 (ncc28 - permission to this course revoked)
Avg Rating: 3.7400
Avg Difficulty: 0.4074
Total ratings: 27
==> Comment 1: This is implementation dependant. Small modifications can be made to selection sort to make it stable (by: iwonderwhothisislol [eg574])



ID: 3567762
Created: 1:35pm, 16 Nov 2018
Which of these is the correct order for the runtime complexity classes - from fastest to slowest, for large values of n?
*a) constant, log(n), sqrt(n), n, nlog(n), n^2, n^3, 2^n
b) log(n), n, constant, sqrt(n), nlog(n), n^2, 2^n, n^3
c) constant, log(n), sqrt(n), n, nlog(n), n^2, 2^n, n^3
d) constant, log(n), n, sqrt(n), nlog(n), n^2, n^3, 2^n
e) None of the above
Explanation: For large values of n, this answer shows the fastest running first and ends in the slowest
Tags: Complexity
Author: ncc28 (ncc28 - permission to this course revoked)
Avg Rating: 3.9300
Avg Difficulty: 0.6071
Total ratings: 28



ID: 3567719
Created: 1:12pm, 16 Nov 2018
Carey's two rules of sorting are:
*a) -Don�t choose a sorting algorithm until you understandthe requirements of your problem.-Always choose the simplest sorting algorithm possiblethat meets your requirements.
b) - The time complexity of an algorithm is always more important than its data complexity.- One should always choose an algorithm that is stable over an unstable algorithm.
c) - Quicksort is the best sorting algorithm.- Divide and conquer algorithms are better for small data sets than for large data sets.
Explanation: Explanation in Lecture 10.
Tags: Sorting
Author: am3132 (am3132 - permission to this course revoked)
Avg Rating: 3.1500
Avg Difficulty: 0.2593
Total ratings: 27



ID: 3567718
Created: 1:10pm, 16 Nov 2018
what is the theta complexity of this algorithm f(n)function int f(int n){ int c = 0; for (int i=1 i<n; i=i*2){ for (int j=0; j<i; j++){ c++; } } return c;}
a) n log (n)
b) ( log (n) ) ^2
c) n^2
*d) n
e) log (n)
Explanation: The function outputs its complexity as c is incremented in the inner most loop so f(n) approximately equivalent to the number of operations. Try running this code yourself :public class complex { public static void main(String[] args) { double n = 128; //try changing n for yourself double c = 0; for (int i=1; i<n; i=i*2){ for (int j=0; j<i; j++){ c++; } } System.out.print((c - n)/n); }}If you try the code f(8) it will output 1 + 2 + 4 = 7or f(32) it will output 1 + 2 + 4 + 8 + 16 = 31or f(30) it will output 1 + 2 + 4 + 8 + 16 = 31As you can see the complexity is always take x - 1 (where x is n rounded up to the next power of 2And rounding does not affect the complexity and neither does subtracting oneHence the complexity is n
Tags: Complexity
Author: mh2200 (mh2200 - permission to this course revoked)
Avg Rating: 2.2800
Avg Difficulty: 1.3846
Total ratings: 39
==> Comment 1: I think the answer is A because:The first loop is 1 to n, but halving n every time, which is log2(n).The loop inside this, so multiplied, is 1 to i, with doubling every time, so its, 1+2+4+8... which is roughly n.So n logn. (by: cro26 [cro26])



ID: 3567675
Created: 12:36pm, 16 Nov 2018
Given the following sorted list of numbers:1, 2, 34, 45, 104, 287, 287, 299Using the binary search algorithm; how many comparisons would it take to determine if the number 0 is in the list (when using the floor function for finding the middle element of the list)?
a) 2
*b) 3
c) 4
d) 5
e) None of the above.
Explanation: Compare 45 with 0; take the lower half of the list: 1, 2, 34Compare 2 with 0; take the lower half of the list: 1Compare 1 with 0; this was the last element.So it takes 3 comparisons to determine 0 is not in the list.
Tags: Search
Author: fc494 (fc494 - permission to this course revoked)
Avg Rating: 4.0400
Avg Difficulty: 0.7391
Total ratings: 23
==> Comment 1: Would a simpler way be saying its the ceiling of log_2(n)? (by: callumbateson [cb2063])
==> Comment 2: people will get a different result if they round up or down when finding the middle of the list (by: mh2200 [mh2200])
====> Reply 1: As specified in the question, we take the floor function (rounding down) when calculating the middle element of the list.



ID: 3567584
Created: 11:07am, 16 Nov 2018
What is a stable sort?
a) A sort which has a space complexity of O(n).
b) A strong sort which is very quick.
*c) A sort which takes into account the initial ordering.
d) A sorting algorithm often used on horses.
e) A sort which has an average time complexity of O(n log n).
Explanation: A stable sort is a sorting algorithm which takes into account the initial ordering, and maintains the order of equal-valued items. Examples include: merge sort, bubble sort and insertion sort.
Augmented explanation 1: A stable sort is a sorting algorithm which retains the initial ordering of equal elements. Examples include: merge sort, bubble sort and insertion sort. (by: my553 [my553])
Tags: Sorting
Author: jabzilla (jab218 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.1237
Total ratings: 97
==> Comment 1: Simple question. Liked the sense of humour though :) (by: mh2250 [mh2250])
==> Comment 2: XD (by: geordieross [gjcr20])



ID: 3567576
Created: 10:51am, 16 Nov 2018
When inserting a node in a doubly linked list, we must update:
a) The new node's next pointerThe previous node's next pointerThe following node's previous pointer
*b) The new node's next and previous pointerThe previous node's next pointerThe following node's previous pointer
c) The new node's next and previous pointerThe previous node's previous pointerThe following node's next pointer
d) The new node's next and previous pointerThe previous node's next pointerThe following node's next pointer
e) The new node's next and previous pointerThe previous node's next and previous pointerThe following node's next and previous pointer
Explanation: We update the new node's next pointer to point to the following node, the new node's previous pointer to point to the previous node, the previous node's next pointer to the new node and the following node's previous pointer to the new node. The list has been updated.
Tags: Lists
Author: jabzilla (jab218 - permission to this course revoked)
Avg Rating: 4.1600
Avg Difficulty: 0.4098
Total ratings: 61



ID: 3567572
Created: 10:43am, 16 Nov 2018
How is the time complexity function determined?
a) Count how many lines of code the algorithm requires.
b) Record the time at the start of the algorithm, record the time afterwards and take the difference.
c) Measure how much space, at any point in the algorithm, is required.
*d) The number of elementary operations an algorithm performs is determined.
Explanation: Elementary operations take a fixed amount of time. Therefore by measuring how many of these elementary operations (eg. accessing an item from an array) we can determine the time complexity of an algorithm.
Tags: Complexity
Author: jabzilla (jab218 - permission to this course revoked)
Avg Rating: 3.8900
Avg Difficulty: 0.1053
Total ratings: 19



ID: 3565919
Created: 4:31pm, 15 Nov 2018
For a balanced binary search tree with n elements, the search for an element requires time complexity..
a) O(1) in the worst case
b) O(n) in the worst case
*c) O(1) in the best case
d) O(nlogn) in the worst case
Augmented explanation 1: For A & B, the worst case is the average case, log(n), you just compare the current value of the node to the search value and go left or right, each time, discounting half the nodes in the tree,For C, the node we are looking for is just the root (by: nmparrott [nmp31])
Tags: Trees
Author: vk407 (vk407 - permission to this course revoked)
Avg Rating: 2.5500
Avg Difficulty: 0.9000
Total ratings: 20
==> Comment 1: Isn't worst-case time complexity for a search still O(n)? (by: mcb68 [mcb68])
====> Reply 1: 'balanced' search tree.As long as tree has over 2 elements, when its balanced worst case will log(n)
==> Comment 2: Can you explain how you got your answer? (by: callumbateson [cb2063])



ID: 3569159
Created: 4:21pm, 15 Nov 2018
Given 3 different algorithms, A,B and C, implementing the same thing. The complexity of A is O(nlog5n), the complexity of B is O(n2), and the complexity of C is O(2n). Which one would you prefer? (assume large values of n)
*a) Algorithm A
b) Algorithm B
c) Algorithm C
d) EitherAlgorithm A orAlgorithm B
Augmented explanation 1: nlog5n increases slowest for large n, so would be the most efficient algorithm (by: dr474 [dr474])
Tags: Complexity
Author: vk407 (vk407 - permission to this course revoked)
Avg Rating: 4.1400
Avg Difficulty: 0.6190
Total ratings: 21
==> Comment 1: Should A be log_5(x) as opposed to (logx)^5? (by: joebr [jayb20])



ID: 3565789
Created: 3:32pm, 15 Nov 2018
Which of the following sorting algorithms is stable?
a) ShellSort
b) QuickSort
c) SelectionSort
*d) InsertionSort
e) None of the above
Explanation: Insertion sort works by shifting elements rather than swapping them, so the original order of equivalent values is preserved after sorting.See lectures 10 and 11 for full details
Tags: Sorting
Author: tim_hildyard (th621 - permission to this course revoked)
Avg Rating: 3.7400
Avg Difficulty: 0.3824
Total ratings: 34
==> Comment 1: Good question. (by: lemesios10 [al951])



ID: 3565754
Created: 3:21pm, 15 Nov 2018
In which of the following data structures is it difficult (not recommended) to remove values from?
a) Linked lists
b) Open hash tables
c) Doubly linked lists
*d) Closed hash tables (with Linear probing)
e) Arrays
Explanation: For Linked lists, and Doubly linked lists it is easy to remove values by just adjusting the next (and prev) pointers.For Arrays, it is easy to remove values by just assigning the position a null value.Open hash tables are essentially just arrays where the elements are linked lists, so values can be easily removed in the same way that you would for a linked list.Closed hash tables (with Linear probing) cause an issue though, as when you remove a value from a closed hash table, it creates a gap which can break your linear probing search algorithm.See Lecture 7 and 9 for full details.
Tags: Lists, Applications, Hashtables
Author: tim_hildyard (th621 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.4595
Total ratings: 37



ID: 3565495
Created: 1:10pm, 15 Nov 2018
Given a particular load L for a Closed Hash Table w LP, what is the maximum number of steps to find the bucket?
a) �(1+ 1/(1-L))
b) L
c) Total Buckets in Array/L
*d) 1/(1-L)
e) 1
Explanation: Average # of steps = �(1+ 1/(1-L)) for L < 1.0. "1" and "1/(1-L)" represent the minimum and maximum# steps to find a bucket, respectively.
Tags: Hashtables
Author: welsbyj (jw2449 - permission to this course revoked)
Avg Rating: 3.4700
Avg Difficulty: 1.0000
Total ratings: 17



ID: 3565480
Created: 1:02pm, 15 Nov 2018
Which of the following sorting algorithms does not have a worst case time complexity of O(n2)?
a) Quick sort
b) Bubble sort
*c) Merge sort
d) Insertion sort
e) None of the above
Explanation: Merge sort has worst time complexityO(n log(n))
Tags: Sorting, Complexity
Author: vk407 (vk407 - permission to this course revoked)
Avg Rating: 4.0600
Avg Difficulty: 0.5556
Total ratings: 18



ID: 3565370
Created: 11:58am, 15 Nov 2018
Which of the following bounds are correct for the run time of the following code?for ( int i = 0; i < n; i++) for ( int j = 0; j < n; j++) out.println(�Hapax Legomenon�)A)O( n2 )B)?( n2 )C) O(log n)D)O( n3)
a) A, B & C are correct, D is wrong
b) B & C are correct, A & D are wrong
c) A & D are correct, B & C are wrong
*d) A & B are correct, C & D are wrong
e) All four are wrong
Explanation: The code has run time that would be bounded by?(n2). Thus, B is correct. A is also correct because?(n2) implies bothO(n2) and O(n2).C and D are wrong; the code has higher complexity than log n so for large enough n, there would be no constant large enough to be an upper bound for this. Conversely, n3 increases much faster than n2 so for large n could not be a lower bound.Thus, D is the correct answer to the question.
Tags: Complexity
Author: dr474 (dr474 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.5625
Total ratings: 16



ID: 3565241
Created: 10:36am, 15 Nov 2018
Suppose you are given that an element is definitely in the Hash Table. You search for this element in the Hash Table with linear probing. You calculate the bucket for the element's key using the hash function. However, when you check the appropriate bucket it contains a different key. Which of the following are possible reasons for this?A) The element was inserted in the Hash Table but then got over-written by another element with the same bucket number.B) The element is placed below it's bucket calculated by the hash function.C) The other key had the same bucket calculated by the hash function.D) The other key was forced to move down to the bucket because it's own bucket was already filled.
a) A C D
b) C D
*c) B C D
d) B C
e) B D
Explanation: A contradicts the definition of a closed hash table with linear probing.B is a direct consequence of C or D, i.e. if the key's bucket is full it is placed in the first empty bucket that is found.Note that B could have also said the key is placed in a bucket above it's hash function bucket.
Tags: Hashtables
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.2900
Avg Difficulty: 0.5882
Total ratings: 17
==> Comment 1: Didn't state that it is closed. Linear probing is insufficient to assumed closed hashed table (by: leogriff [ljig20])



ID: 3565220
Created: 10:24am, 15 Nov 2018
For a Hash Table with T slots already containing n elements how likely are there going to be collisions in the Hash Table?
a)
b)
c)
*d)
e)
Explanation: This was approximated in Lecture 9 based on the Birthday Problem.
Tags: Hashtables
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.8000
Avg Difficulty: 0.9000
Total ratings: 10



ID: 3565213
Created: 10:17am, 15 Nov 2018
For some constants a<b<c arrange the following time complexity functions in order slowest to fastest for large number of input n.A) B)C) D) E)
a) A D C B E
b) D C B A E
c) E B D A C
d) B C A D E
*e) D B C A E
Explanation: Note that the constants do not play a role in this.When graphing the time complexity functions one can notice that for large n the functions are stacked in order D B C A E, with D being above all others and E being below all others.
Tags: Complexity
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.6400
Avg Difficulty: 0.7600
Total ratings: 25
==> Comment 1: In complexity, I believe it is more common to refer the word 'slowest' to the function that actually grows the slowest against given input n (so b*log(n) is the slowest growing in this case), rather than the function that would make an algorithm run the slowest. Fair question, but I think the wording should be improved. (by: lc2023 [lc2023])



ID: 3565200
Created: 10:08am, 15 Nov 2018
What is "time complexity" of an algorithm?
a) The amount of time in nanoseconds it takes to run the algorithm.
b) The amount of time in nanoseconds to run the algorithm in best case scenario.
c) The amount of time in nanoseconds it takes to run the algorithm 1000 times divided by 1000.
d) The number of for loops in an algorithm
*e) The number of instructions used by an algorithm as a function of the size of the input data.
Explanation: The definition was given in Lecture 3.
Tags: Complexity
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.8400
Avg Difficulty: 0.2687
Total ratings: 67



ID: 3565188
Created: 10:02am, 15 Nov 2018
Suppose you are searching for an element in a sorted list of size x using binary search.In how many steps no matter what element we are looking for can we find it?
a) x
b) 2x
c) x+5
*d) log2(x)
e) x2
Explanation: The binary search works in the following way:1)Compare to the middle element2)If equals the middle element - searching is done2)If not either - get rid of the second half of the list if element should come before the middle element or get rid of the first half of the list if element should come after the middle element4)Repeat with the new shortened listWe are interested in the number of times we need to halve the size of the list (i.e. x) until we are unable to keep halving the list (i.e. reach 1). This can be done in precisely log2(x) steps. Therefore, we are guaranteed to either find the element or conclude element not in the list in log2(x) steps.
Tags: Search
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.5400
Avg Difficulty: 0.3077
Total ratings: 26



ID: 3565172
Created: 9:49am, 15 Nov 2018
Which of these are problems one might face working with Array-based Lists?A) Slow to add an element at the endB) Limited capacityC) Slow to insert/remove anywhere in the listD) Slow random access
a) D
b) B and D
*c) B and C
d) A and D
e) C
Explanation: In Lecture 6 the problems with an Array based List were discussed. Namely, we run into problems if an array gets full and it is more troublesome to insert/remove an element anywhere in the list.
Tags: Lists
Author: lc826 (lc826 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.9524
Total ratings: 21



ID: 3564096
Created: 9:01pm, 14 Nov 2018
How many iterations of the bubble sort algorithm would it take to sort the following list in ascending order?3, 1, 4, 5, 9 ,2, 6
a) 3
b) 4
*c) 5
d) 6
e) None of the above.
Explanation: initial: 3, 1, 4, 5, 9 ,2, 6pass 1: 1, 3, 4, 5, 2, 6, 9pass 2: 1, 3, 4, 2, 5, 6, 9pass 3: 1, 3, 2, 4, 5, 6, 9pass 4: 1, 2, 3, 4, 5, 6, 9and one final iteration to check if the list is sorted= 5 iterations.
Tags: Sorting
Author: my553 (my553 - permission to this course revoked)
Avg Rating: 3.8500
Avg Difficulty: 0.9487
Total ratings: 39



ID: 3564103
Created: 8:58pm, 14 Nov 2018
Below are the rules for Big-O, are any of the statements A-D below FALSE?
a) Transitivity:If f(n) = O(g(n)), and g(n) = O(h(n)),then f(n) = O(h(n))
b) Scaling:For all c>0:cf(n) = O(f(n))
c) Sums:If g(n) = O(f1(n)) and h(n) = O(f2(n)),then g(n)+h(n) = O(max{f1(n), f2(n)})
d) Products:If g1(n) = O(f1(n)) and g2(n) = O(f2(n)),then g1(n)g2(n) = O(f1(n)f2(n))
*e) No, all of the above are TRUE.
Explanation: They are all the correct definitions of the properties of Big-O.Transitivity: If A = B, and B = C, then also A = C.Scaling: Constant factors are small compared to large n.Sums: The larger function grows faster, so the smaller one can be ignored for large n.Product: For nested loops, each loop's f(n) can be multiplied together.
Augmented explanation 1: They are all the correct definitions of the properties of Big-O.Transitivity: If A = B, and B = C, then also A = C.Scaling: Constant factors are small compared to large n.Sums: The larger function grows faster, so the smaller one can be ignored for large n.Product: For nested loops, each loop's f(n) can be multiplied together. (by: fc494 [fc494])
Tags: Complexity
Author: fc494 (fc494 - permission to this course revoked)
Avg Rating: 4.0000
Avg Difficulty: 0.6957
Total ratings: 23
==> Comment 1: Does the product rule only concern nested loops? (by: my553 [my553])
====> Reply 1: The product rule still follows for any other amount of elementary operations as, if there are 2 elementary operations in a n-times loop then the overall f(n) = 2n. But from the Scaling rule, this constant is not necessary, so we are mostly interested in loops which are nested for the product rule.



ID: 3564062
Created: 8:44pm, 14 Nov 2018
Out of the following options, which is the most problematic when using a closed hash table with linear probing?
a) Inserting elements
b) Retrieving elements
*c) Removing elements
d) None are problematic
Explanation: Removing elements with linear probing in closed hash tables is most problematic as deleting one element could lead to other elements never being found when searched for, for example.Inserting elements is easier as long as we have space in the hash table, and retrieving elements is relatively simple with hash tables.
Tags: Hashtables
Author: lc2023 (lc2023 - permission to this course revoked)
Avg Rating: 4.0800
Avg Difficulty: 0.5000
Total ratings: 24



ID: 3564058
Created: 8:43pm, 14 Nov 2018
Below is a function, how many elementary operations, in terms of n, are there in the body of the function?public int examQ(int num, int n){ int result = 0; for(int i=0; i<n; i++) { result = result + num; } return result;}
a) 3n + 3
b) 4n + 3
c) 3n + 4
*d) 4n + 4
e) None of the above.
Explanation: int result = 0; is 1 elementary operationint i = 0; is 1 elementary operationi < n; is n+1 elementary operationsi++; is n elementary operationsresult = ; is n elementary operations(including the fact it is in a loop)result + num; is n elementary operations(including the fact it is in a loop)return result; is 1 elementary operationSo overall, there are 1+1+n+1+n+n+n+1 = 4n+4 elementary operations
Tags: Complexity
Author: fc494 (fc494 - permission to this course revoked)
Avg Rating: 3.9800
Avg Difficulty: 1.0238
Total ratings: 42
==> Comment 1: Sorry, clicked the wrong thing, the confirmed answer for C was a mistake! (by: rlw44 [rlw44])
==> Comment 2: I agree (by: lejp21 [lejp21])
==> Comment 3: I am unsure of the validity of this question as per Problem Sheet 1since here, result = result + num has a special runtime that has not been accounted for. (by: lc2023 [lc2023])
====> Reply 1: For this question, as both result and num are integers it is only 1 elementary operation for their addition. For the question in the problem sheet you are referring to, strings were being concatenated which is why this line had a special run time.
====> Reply 2: Oh yes I didn't consider the data types! Makes sense.



ID: 3564046
Created: 8:37pm, 14 Nov 2018
Which sorting method has the potential to be faster (improving from O(n^2) time complexity to O(n)) if the list is already sorted in the first place?
a) Selection
*b) Insertion
c) Selection and Insertion
d) Neither selection nor insertion
Explanation: B is the correct answerAs explained in Lecture 10,selection sort takes just as many steps either way, but insertion sort can be sped up to O(n) if the list is already in the correct order initially
Tags: Sorting, Complexity
Author: lc2023 (lc2023 - permission to this course revoked)
Avg Rating: 4.1100
Avg Difficulty: 0.6296
Total ratings: 27



ID: 3564033
Created: 8:29pm, 14 Nov 2018
What is an Abstract Data Type?
a) A coordinated group of personal data, algorithms and interface functions
*b) A coordinated group of data structures, algorithms and interface functions
c) A coordinated group of dummy methods and inherited classes
d) A coordinated group of sorting and searching algorithms
e) A coordinated group of stacks, queues and linked lists
Explanation: B is the correct definition, as given in Lecture 2
Tags: ADTs
Author: lc2023 (lc2023 - permission to this course revoked)
Avg Rating: 3.8800
Avg Difficulty: 0.2561
Total ratings: 82



ID: 3564020
Created: 8:23pm, 14 Nov 2018
Imagine an empty closed hashtable that uses linear probing (to the right) to counter collisions.This closed hashtable can store a maximum of 5 data in 5 buckets labelled 0-4 in ascending order. It uses the hashing function f where:Where x is the data to be stored and f(x) is the bucket to store it in.If you were to insert the following data (from left to right) into this hashtable:6, 3, 2, 1, 5What order would the data be stored after insertion?
a) 2, 1, 6, 3, 5
b) 5, 6, 3, 2, 1
c) 5, 1, 6, 3, 2
*d) 1, 5, 6, 3, 2
e) None of the above.
Explanation: f(6) = 2 so place 6 in slot 2f(3) = 3 so place 3 in slot 3f(2) = 3 so place 3 in slot 4 as slot 3 is fullf(1) = 2 so place 1 in slot 0 as slots 2, 3 and 4 are fullf(5) = 0 so place 5 in slot 1 as slot 0 is full, , , , , , 6, , , , 6, 3, , , 6, 3, 21, , 6, 3, 21, 5, 6, 3, 2
Tags: Hashtables
Author: my553 (my553 - permission to this course revoked)
Avg Rating: 4.5500
Avg Difficulty: 0.8788
Total ratings: 66



ID: 3563958
Created: 7:50pm, 14 Nov 2018
What does it mean for a set of repeated measurements to have high precision?
a) Measurements are close to the true value
*b) Values are similar to each other
c) Measurements are measured to many places after the decimal point
Explanation: A - high accuracyB - high accuracyC - resolution
Augmented explanation 1: A - high accuracyB - high precision*C - resolution (by: lc2023 [lc2023])
Augmented explanation 2: A - high accuracyB - high precisionC - resolution (by: rl836 [rl836])
Author: rl836 (rl836 - permission to this course revoked)
Avg Rating: 4.2000
Avg Difficulty: 0.2800
Total ratings: 25



ID: 3563935
Created: 7:42pm, 14 Nov 2018
Consider the following runtimes for a list-sorting algorithm, with n as the size of the list and t as the time taken in seconds:n = 2000, t = 57n = 4000, t = 456n = 8000, t = 3648Which is the best approximation of the runtime complexity of the algorithm?
a) ?()
*b) ?()
c) ?()
d) ?()
e) None of the above.
Explanation: The answer is?() because, as n doubles in size, the time taken is increasing by a factor of 8 which is .
Tags: Complexity
Author: my553 (my553 - permission to this course revoked)
Avg Rating: 4.2200
Avg Difficulty: 0.7778
Total ratings: 63



ID: 3563717
Created: 5:36pm, 14 Nov 2018
What does it mean for a sort to be stable?
*a) Elements that would be sorted as the same value keep their initial relative order
b) It doesn't crash.
c) It has a small run-time.
d) It does its swaps over large distances.
Explanation: Stable sorts were defined in lecture 10.
Tags: Sorting
Author: simon_powell (sp2183 - permission to this course revoked)
Avg Rating: 3.5500
Avg Difficulty: 0.1489
Total ratings: 47



ID: 3563689
Created: 5:20pm, 14 Nov 2018
2 functions refer to the run-times of 2 algorithms:f(n)>0, g(n)>0a>0, A>0g(n) = A f(n) for all n>aWhich of the following is definitely true?
a) g(n) = O(f(n))
*b) g(n) = O(f(n))
c) g(n) = ?(f(n))
d) f(n) = ?(g(n))
e) f(n) = g(n)
Explanation: this is the definition forg(n) = O(f(n)) as seen in lecture 4
Augmented explanation 1: This is the definition for g(n) = O(f(n)) as seen in lecture 4g(n) is always ABOVE Af(n) after the point n>a, so f(n) is a lower bound and henceg(n) = O(f(n)) (by: dr474 [dr474])
Augmented explanation 2: g(n) = O(f(n)) - is of order at most f(n), f is an upper bound.g(n) = O(f(n)) - is of order at least f(n), f is a lower bound.g(n) = ?(f(n)) - is of order exactly f(n). (by: nmparrott [nmp31])
Tags: Complexity
Author: simon_powell (sp2183 - permission to this course revoked)
Avg Rating: 3.7000
Avg Difficulty: 0.8000
Total ratings: 20



ID: 3563635
Created: 4:50pm, 14 Nov 2018
Which of the following sorts has the quickest run-time (on average) for large amounts of data?
a) Insertion sort
*b) Merge sort
c) Shell sort
d) Bubble sort
Explanation: for n unsorted objects:Insertion sort has complexity Merge sort has complexity Shell sort has complexity Bubble sort has complexity of these merge sort grows the slowest for large n so is quickest for large n on average
Tags: Sorting, Complexity
Author: simon_powell (sp2183 - permission to this course revoked)
Avg Rating: 3.8100
Avg Difficulty: 0.2188
Total ratings: 32



ID: 3563348
Created: 2:15pm, 14 Nov 2018
Given three functions a(n) = 300n2, b(n)= 30nlog(n) and c(n)=n3- n2, which of the following statements is true?
a) a is O(b), b is O(c) and c is?(a)
b) a isO(b), b is O(c) and c is O(b)
c) a is O(b), b is O(c) and c isO(a)
d) a is?(c) and b is O(c)
*e) None of these are true
Explanation: None of these are true.A is wrong because a is actually O(b) and c is O(a)B is wrong because c isO(b)C is wrong because c isO(a)D is wrong because a is O(c) and b is O(c)
Tags: Complexity
Author: dr474 (dr474 - permission to this course revoked)
Avg Rating: 3.5800
Avg Difficulty: 0.9111
Total ratings: 45
==> Comment 1: May be wrong here but I believe the answer is E for different reasoning:O(a) = n^2O(b) = n log(n)O(c) = n^3none of these are a,b,c so E must be the correct answerI do realise that this has been used in a past exam paper so if anyone could point to a mark scheme or something showing that this reasoning is not correct then I'd be very grateful. (by: callumbateson [cb2063])
====> Reply 1: Basically yes O(a) is n2, but O(a) is also n3or 2n; all are upper bounds; each of these functions are actually bounded above by infinitely many different functions, rather than just being bounded above by the ones you state.But when it comes to big ? notation, ?(a) = n2 , ?(b) = nlog(n) and ?(c) = n3 and only these values - perhaps this is what confused you.
==> Comment 2: c is at least a, a is at least b. So b is at most a, a is at most c. Agree with your answer but reasoning is wrong (by: nmparrott [nmp31])
====> Reply 1: Yep agreed my explanation is fairly poor
==> Comment 3: I don't think this question makes sense as it is - a, b, c have constant complexity. Therefore E is a correct answer, but not for the reason you stated... (by: jn475 [jn475])
====> Reply 1: Is your point simply that the answers should be e.g. A)a(n) is O(b(n)), b(n) is O(c(n)) and c(n) is ?(a(n))?If so, take a look at Question 5 of the CM20254 2017 Exam Paper. It's the same format. In this context, a, b and c are defined as functions, rather than being arbitrary constants



ID: 3564152
Created: 1:55pm, 14 Nov 2018
You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 8, meaning there are 8 slots in your hash table; 0,1,2,3,4,5,6,7. If you insert the elements 14, 21, 13, 10, 6, 9, 1, 18 into the hash table, in that order, what would it look like at the end?
a) 14, 21, 13, 10, 6, 9, 1, 18
*b) 6, 9, 10, 1, 18, 21, 14, 13
c) 14, 1, 10, 9, 18, 21, 6, 13
d) 10, 6, 9, 1, 18, 21, 14, 13
e) 9, 1, 10, 18, 6, 21, 14, 13
Explanation: B is correct. 14 goes in slot 6, as 14-6=8. Then 21 goes in slot 5, as 21-8-8=5. Next 13 would go in slot 5, so moves along to the right, where the next space is slot 7. 10 goes straight into slot 2 (10-8=2). 6 cannot go in slot 6 or 7, so goes in 0. 9-8=1, so 9 goes in slot 1. 1 then can't go in slot 1, or 2 as these are occupied, so goes in slot 3. Finally, 18 goes into slot 4, as this is the final empty space left.
Tags: Hashtables
Author: dr474 (dr474 - permission to this course revoked)
Avg Rating: 4.3500
Avg Difficulty: 0.6774
Total ratings: 31



ID: 3563288
Created: 1:38pm, 14 Nov 2018
Which of the following is the correct definition for a function f(n) having asymptotic time complexity given byO(n�)?[For f(n) > 0 for n>0]
a) There exists a constant n0> 0 such that for all n >n0: f(n)= n2
b) There exist constants c > 0 and n0 > 0 such that for all n > n0 : f(n) = cn3
c) There exist constants c > 0 and n0 < 0 such that for all n < n0 : f(n) = n3
*d) There exist constants c > 0 and n0 > 0 such that for all n > n0 : f(n) = cn2
e) There exist constants c > 0 and n0 < 0 such that for all n < n0 : f(n) = cn2
Explanation: O(n�) is the lower bound of the function; so f(n) must always be below cn2 after some n0.
Tags: Complexity
Author: dr474 (dr474 - permission to this course revoked)
Avg Rating: 4.0500
Avg Difficulty: 0.6364
Total ratings: 22



ID: 3561099
Created: 9:30am, 13 Nov 2018
The runtime for the following code fragment is . What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
a)
b)
*c)
d)
e) None of the others
Explanation: Constant factors such as 1/10 can be ignored. The total number of iterations of the two outer loops together is given by the sum 1+2+...+n which is. The innermost loop doubles k in every iteration until n is reached, so this is. The loops are nested, therefore the overall complexity is.
Tags: Complexity
Author: christof (christof)
Avg Rating: 4.1400
Avg Difficulty: 1.0833
Total ratings: 36
